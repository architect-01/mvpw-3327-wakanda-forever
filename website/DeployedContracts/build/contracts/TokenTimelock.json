{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "146": "contracts/OpenZepellin/contracts/token/ERC20/IERC20.sol",
    "160": "contracts/OpenZepellin/contracts/token/ERC20/utils/SafeERC20.sol",
    "161": "contracts/OpenZepellin/contracts/token/ERC20/utils/TokenTimelock.sol",
    "178": "contracts/OpenZepellin/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        24338
      ],
      "IERC20": [
        18696
      ],
      "SafeERC20": [
        20784
      ],
      "TokenTimelock": [
        20899
      ]
    },
    "id": 20900,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20786,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "104:23:161"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 20787,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20900,
        "sourceUnit": 20785,
        "src": "129:25:161",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 20788,
          "nodeType": "StructuredDocumentation",
          "src": "156:221:161",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 20899,
        "linearizedBaseContracts": [
          20899
        ],
        "name": "TokenTimelock",
        "nameLocation": "387:13:161",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20792,
            "libraryName": {
              "id": 20789,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20784,
              "src": "413:9:161"
            },
            "nodeType": "UsingForDirective",
            "src": "407:27:161",
            "typeName": {
              "id": 20791,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20790,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18696,
                "src": "427:6:161"
              },
              "referencedDeclaration": 18696,
              "src": "427:6:161",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$18696",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 20795,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "510:6:161",
            "nodeType": "VariableDeclaration",
            "scope": 20899,
            "src": "485:31:161",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$18696",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20794,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20793,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18696,
                "src": "485:6:161"
              },
              "referencedDeclaration": 18696,
              "src": "485:6:161",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$18696",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20797,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "602:12:161",
            "nodeType": "VariableDeclaration",
            "scope": 20899,
            "src": "576:38:161",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20796,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:161",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20799,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "694:12:161",
            "nodeType": "VariableDeclaration",
            "scope": 20899,
            "src": "668:38:161",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20798,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:161",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 20829,
              "nodeType": "Block",
              "src": "814:209:161",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20810,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20806,
                          "src": "832:12:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 20811,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "847:5:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 20812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "847:15:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "832:30:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 20814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:52:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 20809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "824:7:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:93:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20816,
                  "nodeType": "ExpressionStatement",
                  "src": "824:93:161"
                },
                {
                  "expression": {
                    "id": 20819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20817,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20795,
                      "src": "927:6:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$18696",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20818,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20802,
                      "src": "936:6:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$18696",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "927:15:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$18696",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 20820,
                  "nodeType": "ExpressionStatement",
                  "src": "927:15:161"
                },
                {
                  "expression": {
                    "id": 20823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20821,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20797,
                      "src": "952:12:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20822,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20804,
                      "src": "967:12:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "952:27:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20824,
                  "nodeType": "ExpressionStatement",
                  "src": "952:27:161"
                },
                {
                  "expression": {
                    "id": 20827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20825,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20799,
                      "src": "989:12:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20826,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20806,
                      "src": "1004:12:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:27:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20828,
                  "nodeType": "ExpressionStatement",
                  "src": "989:27:161"
                }
              ]
            },
            "id": 20830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20802,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "741:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 20830,
                  "src": "734:13:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$18696",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 20801,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20800,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18696,
                      "src": "734:6:161"
                    },
                    "referencedDeclaration": 18696,
                    "src": "734:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$18696",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20804,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "765:12:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 20830,
                  "src": "757:20:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20806,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "795:12:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 20830,
                  "src": "787:20:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:89:161"
            },
            "returnParameters": {
              "id": 20808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:161"
            },
            "scope": 20899,
            "src": "713:310:161",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20839,
              "nodeType": "Block",
              "src": "1136:30:161",
              "statements": [
                {
                  "expression": {
                    "id": 20837,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20795,
                    "src": "1153:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$18696",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 20836,
                  "id": 20838,
                  "nodeType": "Return",
                  "src": "1146:13:161"
                }
              ]
            },
            "documentation": {
              "id": 20831,
              "nodeType": "StructuredDocumentation",
              "src": "1029:48:161",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 20840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1091:5:161",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:2:161"
            },
            "returnParameters": {
              "id": 20836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20840,
                  "src": "1128:6:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$18696",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 20834,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20833,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18696,
                      "src": "1128:6:161"
                    },
                    "referencedDeclaration": 18696,
                    "src": "1128:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$18696",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1127:8:161"
            },
            "scope": 20899,
            "src": "1082:84:161",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20848,
              "nodeType": "Block",
              "src": "1295:36:161",
              "statements": [
                {
                  "expression": {
                    "id": 20846,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20797,
                    "src": "1312:12:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 20845,
                  "id": 20847,
                  "nodeType": "Return",
                  "src": "1305:19:161"
                }
              ]
            },
            "documentation": {
              "id": 20841,
              "nodeType": "StructuredDocumentation",
              "src": "1172:57:161",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 20849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1243:11:161",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1254:2:161"
            },
            "returnParameters": {
              "id": 20845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20849,
                  "src": "1286:7:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:9:161"
            },
            "scope": 20899,
            "src": "1234:97:161",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20857,
              "nodeType": "Block",
              "src": "1468:36:161",
              "statements": [
                {
                  "expression": {
                    "id": 20855,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20799,
                    "src": "1485:12:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20854,
                  "id": 20856,
                  "nodeType": "Return",
                  "src": "1478:19:161"
                }
              ]
            },
            "documentation": {
              "id": 20850,
              "nodeType": "StructuredDocumentation",
              "src": "1337:65:161",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 20858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1416:11:161",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1427:2:161"
            },
            "returnParameters": {
              "id": 20854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20858,
                  "src": "1459:7:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:9:161"
            },
            "scope": 20899,
            "src": "1407:97:161",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20897,
              "nodeType": "Block",
              "src": "1625:294:161",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 20863,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1643:5:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 20864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1643:15:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 20865,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20858,
                            "src": "1662:11:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 20866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1662:13:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1643:32:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 20868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1677:52:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 20862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1635:7:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:95:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20870,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:95:161"
                },
                {
                  "assignments": [
                    20872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20872,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1749:6:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 20897,
                      "src": "1741:14:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1741:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 20878,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1784:4:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$20899",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$20899",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 20877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1776:7:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20876,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1776:7:161",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:13:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20873,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20840,
                          "src": "1758:5:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$18696_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 20874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1758:7:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18696",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 20875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18635,
                      "src": "1758:17:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 20880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:32:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1741:49:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20883,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20872,
                          "src": "1808:6:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 20884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1817:1:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1808:10:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 20886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1820:37:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 20882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1800:7:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:58:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20888,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:58:161"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20892,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20849,
                          "src": "1890:11:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 20893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1890:13:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20894,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20872,
                        "src": "1905:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 20889,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20840,
                          "src": "1869:5:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$18696_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 20890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:7:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18696",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 20891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20591,
                      "src": "1869:20:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$18696_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$18696_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 20895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:43:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20896,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:43:161"
                }
              ]
            },
            "documentation": {
              "id": 20859,
              "nodeType": "StructuredDocumentation",
              "src": "1510:76:161",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 20898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1600:7:161",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:2:161"
            },
            "returnParameters": {
              "id": 20861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:161"
            },
            "scope": 20899,
            "src": "1591:328:161",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 20900,
        "src": "378:1543:161",
        "usedErrors": []
      }
    ],
    "src": "104:1818:161"
  },
  "bytecode": "60e060405234801561001057600080fd5b506040516107ca3803806107ca83398101604081905261002f916100c0565b42811161009d5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b606482015260840160405180910390fd5b6001600160601b0319606093841b81166080529190921b1660a05260c05261011b565b6000806000606084860312156100d557600080fd5b83516100e081610103565b60208501519093506100f181610103565b80925050604084015190509250925092565b6001600160a01b038116811461011857600080fd5b50565b60805160601c60a05160601c60c05161066261016860003960008181609f015260f0015260008181605301526102a701526000818160ca01528181610182015261028501526106626000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610594565b9050600081116102785760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102cf565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610326565b505050565b600061037b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f89092919063ffffffff16565b80519091501561032157808060200190518101906103999190610572565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606104078484600085610411565b90505b9392505050565b6060824710156104725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b843b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104dc91906105ad565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b6060831561054857508161040a565b8251156105585782518084602001fd5b8160405162461bcd60e51b815260040161017591906105c9565b60006020828403121561058457600080fd5b8151801515811461040a57600080fd5b6000602082840312156105a657600080fd5b5051919050565b600082516105bf8184602087016105fc565b9190910192915050565b60208152600082518060208401526105e88160408501602087016105fc565b601f01601f19169190910160400192915050565b60005b838110156106175781810151838201526020016105ff565b83811115610626576000848401525b5050505056fea2646970667358221220dd25e181c8e74b70a72ad00de8e365d5d5436365ccf155d75b44a3710d9c4dfe64736f6c63430008060033",
  "bytecodeSha1": "c0c36737e131dd42d9352ef6fa1dc10a764a9da1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "TokenTimelock",
  "coverageMap": {
    "branches": {
      "146": {},
      "160": {
        "SafeERC20._callOptionalReturn": {
          "19": [
            3735,
            3756,
            false
          ],
          "20": [
            3819,
            3849,
            true
          ]
        }
      },
      "161": {
        "TokenTimelock.release": {
          "14": [
            1643,
            1675,
            true
          ],
          "15": [
            1808,
            1818,
            true
          ]
        }
      },
      "178": {
        "Address.functionCallWithValue": {
          "16": [
            4798,
            4828,
            true
          ]
        },
        "Address.verifyCallResult": {
          "17": [
            7388,
            7395,
            false
          ],
          "18": [
            7529,
            7550,
            false
          ]
        }
      }
    },
    "statements": {
      "146": {},
      "160": {
        "SafeERC20._callOptionalReturn": {
          "7": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "6": [
            813,
            899
          ]
        }
      },
      "161": {
        "TokenTimelock.beneficiary": {
          "0": [
            1305,
            1324
          ]
        },
        "TokenTimelock.release": {
          "3": [
            1635,
            1730
          ],
          "4": [
            1800,
            1858
          ],
          "5": [
            1869,
            1912
          ]
        },
        "TokenTimelock.releaseTime": {
          "1": [
            1478,
            1497
          ]
        },
        "TokenTimelock.token": {
          "2": [
            1146,
            1159
          ]
        }
      },
      "178": {
        "Address.functionCall": {
          "8": [
            3671,
            3730
          ]
        },
        "Address.functionCallWithValue": {
          "9": [
            4790,
            4871
          ],
          "10": [
            4881,
            4941
          ],
          "11": [
            5035,
            5093
          ]
        },
        "Address.verifyCallResult": {
          "12": [
            7411,
            7428
          ],
          "13": [
            7855,
            7875
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a9190610594565b9050600081116102785760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102cf565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610326565b505050565b600061037b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103f89092919063ffffffff16565b80519091501561032157808060200190518101906103999190610572565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606104078484600085610411565b90505b9392505050565b6060824710156104725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b843b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104dc91906105ad565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b6060831561054857508161040a565b8251156105585782518084602001fd5b8160405162461bcd60e51b815260040161017591906105c9565b60006020828403121561058457600080fd5b8151801515811461040a57600080fd5b6000602082840312156105a657600080fd5b5051919050565b600082516105bf8184602087016105fc565b9190910192915050565b60208152600082518060208401526105e88160408501602087016105fc565b601f01601f19169190910160400192915050565b60005b838110156106175781810151838201526020016105ff565b83811115610626576000848401525b5050505056fea2646970667358221220dd25e181c8e74b70a72ad00de8e365d5d5436365ccf155d75b44a3710d9c4dfe64736f6c63430008060033",
  "deployedSourceMap": "378:1543:161:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:97;1312:12;1234:97;;;-1:-1:-1;;;;;928:32:211;;;910:51;;898:2;883:18;1234:97:161;;;;;;;;1591:328;;;:::i;:::-;;1407:97;;;1485:12;4008:25:211;;3996:2;3981:18;1407:97:161;3963:76:211;1082:84:161;1153:6;1082:84;;1591:328;1485:12;1643:15;:32;;1635:95;;;;-1:-1:-1;;;1635:95:161;;2065:2:211;1635:95:161;;;2047:21:211;2104:2;2084:18;;;2077:30;2143:34;2123:18;;;2116:62;-1:-1:-1;;;2194:18:211;;;2187:48;2252:19;;1635:95:161;;;;;;;;;1741:14;1153:6;1758:32;;-1:-1:-1;;;1758:32:161;;1784:4;1758:32;;;910:51:211;-1:-1:-1;;;;;1758:17:161;;;;;;;883:18:211;;1758:32:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1741:49;;1817:1;1808:6;:10;1800:58;;;;-1:-1:-1;;;1800:58:161;;3660:2:211;1800:58:161;;;3642:21:211;3699:2;3679:18;;;3672:30;3738:34;3718:18;;;3711:62;-1:-1:-1;;;3789:18:211;;;3782:33;3832:19;;1800:58:161;3632:225:211;1800:58:161;1869:43;-1:-1:-1;;;;;1153:6:161;1869:20;1312:12;1905:6;1869:20;:43::i;:::-;1625:294;1591:328::o;701:205:160:-;840:58;;;-1:-1:-1;;;;;1164:32:211;;840:58:160;;;1146:51:211;1213:18;;;;1206:34;;;840:58:160;;;;;;;;;;1119:18:211;;;;840:58:160;;;;;;;;-1:-1:-1;;;;;840:58:160;-1:-1:-1;;;840:58:160;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:160;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:160;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:160;;3249:2:211;3811:85:160;;;3231:21:211;3288:2;3268:18;;;3261:30;3327:34;3307:18;;;3300:62;-1:-1:-1;;;3378:18:211;;;3371:40;3428:19;;3811:85:160;3221:232:211;3514:223:178;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;;3514:223;;;;;;:::o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:178;;2484:2:211;4790:81:178;;;2466:21:211;2523:2;2503:18;;;2496:30;2562:34;2542:18;;;2535:62;-1:-1:-1;;;2613:18:211;;;2606:36;2659:19;;4790:81:178;2456:228:211;4790:81:178;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:178;;2891:2:211;4881:60:178;;;2873:21:211;2930:2;2910:18;;;2903:30;2969:31;2949:18;;;2942:59;3018:18;;4881:60:178;2863:179:211;4881:60:178;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:178;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:178:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:178;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:178;;;;;;;;:::i;14:277:211:-;81:6;134:2;122:9;113:7;109:23;105:32;102:2;;;150:1;147;140:12;102:2;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:2;;257:1;254;247:12;296:184;366:6;419:2;407:9;398:7;394:23;390:32;387:2;;;435:1;432;425:12;387:2;-1:-1:-1;458:16:211;;377:103;-1:-1:-1;377:103:211:o;485:274::-;614:3;652:6;646:13;668:53;714:6;709:3;702:4;694:6;690:17;668:53;:::i;:::-;737:16;;;;;622:137;-1:-1:-1;;622:137:211:o;1475:383::-;1624:2;1613:9;1606:21;1587:4;1656:6;1650:13;1699:6;1694:2;1683:9;1679:18;1672:34;1715:66;1774:6;1769:2;1758:9;1754:18;1749:2;1741:6;1737:15;1715:66;:::i;:::-;1842:2;1821:15;-1:-1:-1;;1817:29:211;1802:45;;;;1849:2;1798:54;;1596:262;-1:-1:-1;;1596:262:211:o;4044:258::-;4116:1;4126:113;4140:6;4137:1;4134:13;4126:113;;;4216:11;;;4210:18;4197:11;;;4190:39;4162:2;4155:10;4126:113;;;4257:6;4254:1;4251:13;4248:2;;;4292:1;4283:6;4278:3;4274:16;4267:27;4248:2;;4097:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "offset": [
    378,
    1921
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xB91D4001 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x73 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x65666F72652072656C656173652074696D65 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x617365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x2CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x321 SWAP1 DUP5 SWAP1 PUSH2 0x326 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x321 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x407 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x411 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x52E DUP3 DUP3 DUP7 PUSH2 0x539 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x548 JUMPI POP DUP2 PUSH2 0x40A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x558 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5BF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5FC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5E8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x617 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5FF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0x25 0xE1 DUP2 0xC8 0xE7 0x4B PUSH17 0xA72AD00DE8E365D5D5436365CCF155D75B DIFFICULTY LOG3 PUSH18 0xD9C4DFE64736F6C63430008060033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "5": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "CALLVALUE",
      "path": "161"
    },
    "6": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "7": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "8": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "12": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "REVERT",
      "path": "161"
    },
    "16": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "17": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "POP",
      "path": "161"
    },
    "18": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "CALLDATASIZE",
      "path": "161"
    },
    "21": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "LT",
      "path": "161"
    },
    "22": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "26": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "CALLDATALOAD",
      "path": "161"
    },
    "29": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "SHR",
      "path": "161"
    },
    "32": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "33": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "161",
      "value": "0x38AF3EED"
    },
    "38": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "161"
    },
    "39": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "43": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "44": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "161",
      "value": "0x86D1A69F"
    },
    "49": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "161"
    },
    "50": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x90"
    },
    "53": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "54": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "55": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "161",
      "value": "0xB91D4001"
    },
    "60": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "161"
    },
    "61": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x9A"
    },
    "64": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "65": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "66": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "161",
      "value": "0xFC0C546A"
    },
    "71": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "161"
    },
    "72": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0xC8"
    },
    "75": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "76": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "77": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "161"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "REVERT",
      "path": "161"
    },
    "81": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "82": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1312,
        1324
      ],
      "op": "PUSH32",
      "path": "161",
      "statement": 0,
      "value": "0x0"
    },
    "115": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "116": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "118": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "125": {
      "op": "SHL"
    },
    "126": {
      "op": "SUB"
    },
    "127": {
      "op": "SWAP1"
    },
    "128": {
      "op": "SWAP2"
    },
    "129": {
      "op": "AND"
    },
    "130": {
      "op": "DUP2"
    },
    "131": {
      "op": "MSTORE"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "134": {
      "op": "ADD"
    },
    "135": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "136": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "138": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "139": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "DUP1",
      "path": "161"
    },
    "140": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "141": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "SUB",
      "path": "161"
    },
    "142": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "143": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "RETURN",
      "path": "161"
    },
    "144": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "145": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x98"
    },
    "148": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0xEE"
    },
    "151": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMP",
      "path": "161"
    },
    "152": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "153": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "STOP",
      "path": "161"
    },
    "154": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "155": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "157": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "158": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1485,
        1497
      ],
      "op": "PUSH32",
      "path": "161",
      "statement": 1,
      "value": "0x0"
    },
    "191": {
      "op": "DUP2"
    },
    "192": {
      "op": "MSTORE"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "195": {
      "op": "ADD"
    },
    "196": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x87"
    },
    "199": {
      "op": "JUMP"
    },
    "200": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1166
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "201": {
      "fn": "TokenTimelock.token",
      "offset": [
        1153,
        1159
      ],
      "op": "PUSH32",
      "path": "161",
      "statement": 2,
      "value": "0x0"
    },
    "234": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1166
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x73"
    },
    "237": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1166
      ],
      "op": "JUMP",
      "path": "161"
    },
    "238": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "239": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1485,
        1497
      ],
      "op": "PUSH32",
      "path": "161",
      "value": "0x0"
    },
    "272": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1658
      ],
      "op": "TIMESTAMP",
      "path": "161",
      "statement": 3
    },
    "273": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1675
      ],
      "op": "LT",
      "path": "161"
    },
    "274": {
      "branch": 14,
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1675
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "275": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x17E"
    },
    "278": {
      "branch": 14,
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "279": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "281": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "DUP2",
      "path": "161"
    },
    "290": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x4"
    },
    "295": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "DUP3",
      "path": "161"
    },
    "296": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "ADD",
      "path": "161"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "302": {
      "op": "DUP3"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "340": {
      "op": "DUP3"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH18",
      "value": "0x65666F72652072656C656173652074696D65"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "372": {
      "op": "ADD"
    },
    "373": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "374": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "376": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "377": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "DUP1",
      "path": "161"
    },
    "378": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "379": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "SUB",
      "path": "161"
    },
    "380": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "381": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "161"
    },
    "382": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "383": {
      "fn": "TokenTimelock.release",
      "offset": [
        1741,
        1755
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "385": {
      "fn": "TokenTimelock.token",
      "offset": [
        1153,
        1159
      ],
      "op": "PUSH32",
      "path": "161",
      "value": "0x0"
    },
    "418": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "420": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "421": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP2",
      "path": "161"
    },
    "430": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "431": {
      "fn": "TokenTimelock.release",
      "offset": [
        1784,
        1788
      ],
      "op": "ADDRESS",
      "path": "161"
    },
    "432": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x4"
    },
    "434": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP3",
      "path": "161"
    },
    "435": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "161"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "446": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "447": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "448": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "AND",
      "path": "161"
    },
    "449": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "450": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "PUSH4",
      "path": "161",
      "value": "0x70A08231"
    },
    "455": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x20"
    },
    "461": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "463": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "464": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "465": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP4",
      "path": "161"
    },
    "466": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SUB",
      "path": "161"
    },
    "467": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP2",
      "path": "161"
    },
    "468": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP7",
      "path": "161"
    },
    "469": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "470": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "EXTCODESIZE",
      "path": "161"
    },
    "471": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "472": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "473": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "474": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x1E2"
    },
    "477": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "478": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "480": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "481": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "REVERT",
      "path": "161"
    },
    "482": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "483": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "484": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "GAS",
      "path": "161"
    },
    "485": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "STATICCALL",
      "path": "161"
    },
    "486": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "487": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "488": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ISZERO",
      "path": "161"
    },
    "489": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x1F6"
    },
    "492": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "493": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "494": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "496": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "497": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATACOPY",
      "path": "161"
    },
    "498": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "499": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x0"
    },
    "501": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "REVERT",
      "path": "161"
    },
    "502": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "503": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "504": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "505": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "506": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "507": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "509": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "510": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATASIZE",
      "path": "161"
    },
    "511": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x1F"
    },
    "513": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "NOT",
      "path": "161"
    },
    "514": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x1F"
    },
    "516": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP3",
      "path": "161"
    },
    "517": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "161"
    },
    "518": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "AND",
      "path": "161"
    },
    "519": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP3",
      "path": "161"
    },
    "520": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "161"
    },
    "521": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "161"
    },
    "522": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "524": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "525": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "526": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP2",
      "path": "161"
    },
    "527": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "161"
    },
    "528": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "529": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x21A"
    },
    "532": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SWAP2",
      "path": "161"
    },
    "533": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "534": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x594"
    },
    "537": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMP",
      "path": "161"
    },
    "538": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "539": {
      "fn": "TokenTimelock.release",
      "offset": [
        1741,
        1790
      ],
      "op": "SWAP1",
      "path": "161"
    },
    "540": {
      "fn": "TokenTimelock.release",
      "offset": [
        1741,
        1790
      ],
      "op": "POP",
      "path": "161"
    },
    "541": {
      "fn": "TokenTimelock.release",
      "offset": [
        1817,
        1818
      ],
      "op": "PUSH1",
      "path": "161",
      "statement": 4,
      "value": "0x0"
    },
    "543": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1814
      ],
      "op": "DUP2",
      "path": "161"
    },
    "544": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1818
      ],
      "op": "GT",
      "path": "161"
    },
    "545": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x278"
    },
    "548": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPI",
      "path": "161"
    },
    "549": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x40"
    },
    "551": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "MLOAD",
      "path": "161"
    },
    "552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "DUP2",
      "path": "161"
    },
    "560": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "MSTORE",
      "path": "161"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "161",
      "value": "0x4"
    },
    "565": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "DUP3",
      "path": "161"
    },
    "566": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "ADD",
      "path": "161"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "572": {
      "op": "DUP3"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH3",
      "value": "0x617365"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "622": {
      "op": "DUP3"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x175"
    },
    "631": {
      "op": "JUMP"
    },
    "632": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "633": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1912
      ],
      "op": "PUSH2",
      "path": "161",
      "statement": 5,
      "value": "0x2CC"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "TokenTimelock.token",
      "offset": [
        1153,
        1159
      ],
      "op": "PUSH32",
      "path": "161",
      "value": "0x0"
    },
    "677": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1889
      ],
      "op": "AND",
      "path": "161"
    },
    "678": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1312,
        1324
      ],
      "op": "PUSH32",
      "path": "161",
      "value": "0x0"
    },
    "711": {
      "fn": "TokenTimelock.release",
      "offset": [
        1905,
        1911
      ],
      "op": "DUP4",
      "path": "161"
    },
    "712": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1889
      ],
      "op": "PUSH2",
      "path": "161",
      "value": "0x2CF"
    },
    "715": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1869,
        1912
      ],
      "op": "JUMP",
      "path": "161"
    },
    "716": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1912
      ],
      "op": "JUMPDEST",
      "path": "161"
    },
    "717": {
      "fn": "TokenTimelock.release",
      "offset": [
        1625,
        1919
      ],
      "op": "POP",
      "path": "161"
    },
    "718": {
      "fn": "TokenTimelock.release",
      "jump": "o",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMP",
      "path": "161"
    },
    "719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 6,
      "value": "0x40"
    },
    "722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "160"
    },
    "723": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "op": "DUP5"
    },
    "733": {
      "op": "AND"
    },
    "734": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x24"
    },
    "736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "160"
    },
    "737": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "160"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "741": {
      "op": "DUP1"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "DUP5"
    },
    "745": {
      "op": "SWAP1"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "160"
    },
    "748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "160"
    },
    "750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "160"
    },
    "751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "160"
    },
    "752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "753": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "160"
    },
    "755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "160"
    },
    "756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "763": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "765": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "767": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "160"
    },
    "768": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "160"
    },
    "769": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "160"
    },
    "770": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "160"
    },
    "780": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "160"
    },
    "789": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "790": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "791": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x321"
    },
    "794": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "795": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "160"
    },
    "796": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "797": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x326"
    },
    "800": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "160"
    },
    "801": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "802": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "160"
    },
    "803": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "160"
    },
    "804": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "160"
    },
    "805": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "160"
    },
    "806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x37B"
    },
    "812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "160"
    },
    "813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "160"
    },
    "817": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "160"
    },
    "820": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "160"
    },
    "824": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "160"
    },
    "827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "828": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "830": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "160"
    },
    "831": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "160",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "160"
    },
    "865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "160"
    },
    "867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "160"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "874": {
      "op": "SHL"
    },
    "875": {
      "op": "SUB"
    },
    "876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "160"
    },
    "877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x3F8"
    },
    "880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xFFFFFFFF"
    },
    "889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "160"
    },
    "890": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "160"
    },
    "891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "160"
    },
    "893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "895": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "branch": 19,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x321"
    },
    "901": {
      "branch": 19,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "160",
      "statement": 7
    },
    "903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "160"
    },
    "904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "160"
    },
    "907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "160"
    },
    "910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "160"
    },
    "911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x399"
    },
    "915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x572"
    },
    "920": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "160"
    },
    "921": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "922": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x321"
    },
    "925": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "160"
    },
    "937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "160"
    },
    "943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "160"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x175"
    },
    "1015": {
      "op": "JUMP"
    },
    "1016": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1017": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3659
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "1019": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 8,
      "value": "0x407"
    },
    "1022": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3706
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1023": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3712
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1024": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3715
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1026": {
      "fn": "Address.functionCall",
      "offset": [
        3717,
        3729
      ],
      "op": "DUP6",
      "path": "178"
    },
    "1027": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3699
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x411"
    },
    "1030": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3678,
        3730
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1031": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1032": {
      "fn": "Address.functionCall",
      "offset": [
        3671,
        3730
      ],
      "op": "SWAP1",
      "path": "178"
    },
    "1033": {
      "fn": "Address.functionCall",
      "offset": [
        3671,
        3730
      ],
      "op": "POP",
      "path": "178"
    },
    "1034": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1035": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "SWAP4",
      "path": "178"
    },
    "1036": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "SWAP3",
      "path": "178"
    },
    "1037": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "POP",
      "path": "178"
    },
    "1038": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "POP",
      "path": "178"
    },
    "1039": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "POP",
      "path": "178"
    },
    "1040": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4601,
        5100
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4766,
        4778
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "1044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4823,
        4828
      ],
      "op": "DUP3",
      "path": "178",
      "statement": 9
    },
    "1045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4819
      ],
      "op": "SELFBALANCE",
      "path": "178"
    },
    "1046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4828
      ],
      "op": "LT",
      "path": "178"
    },
    "1047": {
      "branch": 16,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4828
      ],
      "op": "ISZERO",
      "path": "178"
    },
    "1048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x472"
    },
    "1051": {
      "branch": 16,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x4"
    },
    "1068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "ADD",
      "path": "178"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1075": {
      "op": "DUP3"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MSTORE"
    },
    "1078": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1128": {
      "op": "DUP3"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x175"
    },
    "1137": {
      "op": "JUMP"
    },
    "1138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1139": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1140": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "178"
    },
    "1141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 10,
      "value": "0x4C0"
    },
    "1144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x4"
    },
    "1161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "ADD",
      "path": "178"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1168": {
      "op": "DUP3"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1206": {
      "op": "DUP3"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "MSTORE"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x175"
    },
    "1215": {
      "op": "JUMP"
    },
    "1216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4953,
        4965
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4990
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5000
      ],
      "op": "DUP7",
      "path": "178"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5005
      ],
      "op": "AND",
      "path": "178"
    },
    "1230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5013,
        5018
      ],
      "op": "DUP6",
      "path": "178"
    },
    "1231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5020,
        5024
      ],
      "op": "DUP8",
      "path": "178"
    },
    "1232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x4DC"
    },
    "1238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP1",
      "path": "178"
    },
    "1240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x5AD"
    },
    "1243": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP4",
      "path": "178"
    },
    "1252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SUB",
      "path": "178"
    },
    "1253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP6",
      "path": "178"
    },
    "1255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP8",
      "path": "178"
    },
    "1256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "GAS",
      "path": "178"
    },
    "1257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "CALL",
      "path": "178"
    },
    "1258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP3",
      "path": "178"
    },
    "1259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "EQ",
      "path": "178"
    },
    "1268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x519"
    },
    "1271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x1F"
    },
    "1279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "NOT",
      "path": "178"
    },
    "1280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x3F"
    },
    "1282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "178"
    },
    "1284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "AND",
      "path": "178"
    },
    "1285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "178"
    },
    "1287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x20"
    },
    "1298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "178"
    },
    "1300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATACOPY",
      "path": "178"
    },
    "1301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x51E"
    },
    "1304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "1308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5093
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 11,
      "value": "0x52E"
    },
    "1319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5059,
        5066
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5068,
        5078
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5080,
        5092
      ],
      "op": "DUP7",
      "path": "178"
    },
    "1322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5058
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x539"
    },
    "1325": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5042,
        5093
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5093
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5035,
        5093
      ],
      "op": "SWAP8",
      "path": "178"
    },
    "1328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4601,
        5100
      ],
      "op": "SWAP7",
      "path": "178"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4601,
        5100
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1337": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7214,
        7906
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1338": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7360,
        7372
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "1340": {
      "branch": 17,
      "fn": "Address.verifyCallResult",
      "offset": [
        7388,
        7395
      ],
      "op": "DUP4",
      "path": "178"
    },
    "1341": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "ISZERO",
      "path": "178"
    },
    "1342": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x548"
    },
    "1345": {
      "branch": 17,
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7418,
        7428
      ],
      "op": "DUP2",
      "path": "178",
      "statement": 12
    },
    "1348": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x40A"
    },
    "1351": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1352": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1353": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1354": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1355": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7550
      ],
      "op": "ISZERO",
      "path": "178"
    },
    "1356": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x558"
    },
    "1359": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1360": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7723,
        7733
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1361": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7734
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1362": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7783,
        7798
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1363": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7770,
        7780
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1364": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7766,
        7768
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x20"
    },
    "1366": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7762,
        7781
      ],
      "op": "ADD",
      "path": "178"
    },
    "1367": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7755,
        7799
      ],
      "op": "REVERT",
      "path": "178"
    },
    "1368": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1369": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7862,
        7874
      ],
      "op": "DUP2",
      "path": "178",
      "statement": 13
    },
    "1370": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1372": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1381": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1382": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x4"
    },
    "1384": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "ADD",
      "path": "178"
    },
    "1385": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x175"
    },
    "1388": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1389": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP1",
      "path": "178"
    },
    "1390": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x5C9"
    },
    "1393": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7855,
        7875
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1394": {
      "op": "JUMPDEST"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "DUP5"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "op": "SLT"
    },
    "1403": {
      "op": "ISZERO"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x584"
    },
    "1407": {
      "op": "JUMPI"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "REVERT"
    },
    "1412": {
      "op": "JUMPDEST"
    },
    "1413": {
      "op": "DUP2"
    },
    "1414": {
      "op": "MLOAD"
    },
    "1415": {
      "op": "DUP1"
    },
    "1416": {
      "op": "ISZERO"
    },
    "1417": {
      "op": "ISZERO"
    },
    "1418": {
      "op": "DUP2"
    },
    "1419": {
      "op": "EQ"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x40A"
    },
    "1423": {
      "op": "JUMPI"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1426": {
      "op": "DUP1"
    },
    "1427": {
      "op": "REVERT"
    },
    "1428": {
      "op": "JUMPDEST"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1433": {
      "op": "DUP3"
    },
    "1434": {
      "op": "DUP5"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "SLT"
    },
    "1437": {
      "op": "ISZERO"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x5A6"
    },
    "1441": {
      "op": "JUMPI"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1444": {
      "op": "DUP1"
    },
    "1445": {
      "op": "REVERT"
    },
    "1446": {
      "op": "JUMPDEST"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "MLOAD"
    },
    "1449": {
      "op": "SWAP2"
    },
    "1450": {
      "op": "SWAP1"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "jump": "o",
      "op": "JUMP"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1456": {
      "op": "DUP3"
    },
    "1457": {
      "op": "MLOAD"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x5BF"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "DUP5"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1465": {
      "op": "DUP8"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1470": {
      "jump": "i",
      "op": "JUMP"
    },
    "1471": {
      "op": "JUMPDEST"
    },
    "1472": {
      "op": "SWAP2"
    },
    "1473": {
      "op": "SWAP1"
    },
    "1474": {
      "op": "SWAP2"
    },
    "1475": {
      "op": "ADD"
    },
    "1476": {
      "op": "SWAP3"
    },
    "1477": {
      "op": "SWAP2"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "jump": "o",
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "MSTORE"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1488": {
      "op": "DUP3"
    },
    "1489": {
      "op": "MLOAD"
    },
    "1490": {
      "op": "DUP1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "op": "DUP5"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "MSTORE"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x5E8"
    },
    "1499": {
      "op": "DUP2"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1502": {
      "op": "DUP6"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1506": {
      "op": "DUP8"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1511": {
      "jump": "i",
      "op": "JUMP"
    },
    "1512": {
      "op": "JUMPDEST"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1518": {
      "op": "NOT"
    },
    "1519": {
      "op": "AND"
    },
    "1520": {
      "op": "SWAP2"
    },
    "1521": {
      "op": "SWAP1"
    },
    "1522": {
      "op": "SWAP2"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "SWAP3"
    },
    "1528": {
      "op": "SWAP2"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "jump": "o",
      "op": "JUMP"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "DUP4"
    },
    "1537": {
      "op": "DUP2"
    },
    "1538": {
      "op": "LT"
    },
    "1539": {
      "op": "ISZERO"
    },
    "1540": {
      "op": "PUSH2",
      "value": "0x617"
    },
    "1543": {
      "op": "JUMPI"
    },
    "1544": {
      "op": "DUP2"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "MLOAD"
    },
    "1548": {
      "op": "DUP4"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "ADD"
    },
    "1551": {
      "op": "MSTORE"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1558": {
      "op": "JUMP"
    },
    "1559": {
      "op": "JUMPDEST"
    },
    "1560": {
      "op": "DUP4"
    },
    "1561": {
      "op": "DUP2"
    },
    "1562": {
      "op": "GT"
    },
    "1563": {
      "op": "ISZERO"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x626"
    },
    "1567": {
      "op": "JUMPI"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "DUP5"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "MSTORE"
    },
    "1574": {
      "op": "JUMPDEST"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "op": "POP"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0ef0c69d72b9b47592f9ec64947d0a9d3bef7f1b",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/TokenTimelock.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 private immutable _token;\n\n    // beneficiary of tokens after they are released\n    address private immutable _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 private immutable _releaseTime;\n\n    constructor(\n        IERC20 token_,\n        address beneficiary_,\n        uint256 releaseTime_\n    ) {\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourceMap": "378:1543:161:-:0;;;713:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;847:15;832:12;:30;824:93;;;;-1:-1:-1;;;824:93:161;;683:2:211;824:93:161;;;665:21:211;722:2;702:18;;;695:30;761:34;741:18;;;734:62;-1:-1:-1;;;812:18:211;;;805:48;870:19;;824:93:161;;;;;;;;-1:-1:-1;;;;;;927:15:161;;;;;;;;952:27;;;;;;;989;;378:1543;;14:462:211;118:6;126;134;187:2;175:9;166:7;162:23;158:32;155:2;;;203:1;200;193:12;155:2;235:9;229:16;254:31;279:5;254:31;:::i;:::-;354:2;339:18;;333:25;304:5;;-1:-1:-1;367:33:211;333:25;367:33;:::i;:::-;419:7;409:17;;;466:2;455:9;451:18;445:25;435:35;;145:331;;;;;:::o;900:131::-;-1:-1:-1;;;;;975:31:211;;965:42;;955:2;;1021:1;1018;1011:12;955:2;945:86;:::o;:::-;378:1543:161;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/token/ERC20/utils/TokenTimelock.sol",
  "type": "contract"
}