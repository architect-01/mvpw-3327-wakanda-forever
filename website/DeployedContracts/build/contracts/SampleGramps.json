{
  "abi": [
    {
      "inputs": [],
      "name": "gramps",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isHuman",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "130": "contracts/OpenZepellin/contracts/proxy/utils/Initializable.sol",
    "99": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "Initializable": [
        15984
      ],
      "SampleChild": [
        11906
      ],
      "SampleFather": [
        11865
      ],
      "SampleGramps": [
        11837
      ],
      "SampleHuman": [
        11787
      ],
      "SampleMother": [
        11812
      ]
    },
    "id": 11907,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11770,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:99"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 11771,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11907,
        "sourceUnit": 15985,
        "src": "58:42:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11773,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "496:13:99"
            },
            "id": 11774,
            "nodeType": "InheritanceSpecifier",
            "src": "496:13:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11772,
          "nodeType": "StructuredDocumentation",
          "src": "411:60:99",
          "text": " Sample base intializable contract that is a human"
        },
        "fullyImplemented": true,
        "id": 11787,
        "linearizedBaseContracts": [
          11787,
          15984
        ],
        "name": "SampleHuman",
        "nameLocation": "481:11:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4a6c9db6",
            "id": 11776,
            "mutability": "mutable",
            "name": "isHuman",
            "nameLocation": "528:7:99",
            "nodeType": "VariableDeclaration",
            "scope": 11787,
            "src": "516:19:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11775,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "516:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11785,
              "nodeType": "Block",
              "src": "583:31:99",
              "statements": [
                {
                  "expression": {
                    "id": 11783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11781,
                      "name": "isHuman",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11776,
                      "src": "593:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "603:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "593:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11784,
                  "nodeType": "ExpressionStatement",
                  "src": "593:14:99"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 11786,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11779,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11778,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "571:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "551:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:99"
            },
            "returnParameters": {
              "id": 11780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:99"
            },
            "scope": 11787,
            "src": "542:72:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "472:144:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11789,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "716:13:99"
            },
            "id": 11790,
            "nodeType": "InheritanceSpecifier",
            "src": "716:13:99"
          },
          {
            "baseName": {
              "id": 11791,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11787,
              "src": "731:11:99"
            },
            "id": 11792,
            "nodeType": "InheritanceSpecifier",
            "src": "731:11:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11788,
          "nodeType": "StructuredDocumentation",
          "src": "618:72:99",
          "text": " Sample base intializable contract that defines a field mother"
        },
        "fullyImplemented": true,
        "id": 11812,
        "linearizedBaseContracts": [
          11812,
          11787,
          15984
        ],
        "name": "SampleMother",
        "nameLocation": "700:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ed7dfee3",
            "id": 11794,
            "mutability": "mutable",
            "name": "mother",
            "nameLocation": "764:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11812,
            "src": "749:21:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11793,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "749:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11810,
              "nodeType": "Block",
              "src": "839:65:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11801,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11787,
                        "src": "849:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$11787_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 11803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11786,
                      "src": "849:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:24:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11805,
                  "nodeType": "ExpressionStatement",
                  "src": "849:24:99"
                },
                {
                  "expression": {
                    "id": 11808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11806,
                      "name": "mother",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11794,
                      "src": "883:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11807,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11796,
                      "src": "892:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "883:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11809,
                  "nodeType": "ExpressionStatement",
                  "src": "883:14:99"
                }
              ]
            },
            "functionSelector": "fe4b84df",
            "id": 11811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11798,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "827:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "827:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "786:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11796,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "805:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11811,
                  "src": "797:13:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:15:99"
            },
            "returnParameters": {
              "id": 11800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:99"
            },
            "scope": 11812,
            "src": "777:127:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "691:215:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11814,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1006:13:99"
            },
            "id": 11815,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:13:99"
          },
          {
            "baseName": {
              "id": 11816,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11787,
              "src": "1021:11:99"
            },
            "id": 11817,
            "nodeType": "InheritanceSpecifier",
            "src": "1021:11:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11813,
          "nodeType": "StructuredDocumentation",
          "src": "908:72:99",
          "text": " Sample base intializable contract that defines a field gramps"
        },
        "fullyImplemented": true,
        "id": 11837,
        "linearizedBaseContracts": [
          11837,
          11787,
          15984
        ],
        "name": "SampleGramps",
        "nameLocation": "990:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fa39851f",
            "id": 11819,
            "mutability": "mutable",
            "name": "gramps",
            "nameLocation": "1053:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11837,
            "src": "1039:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11818,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1039:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11835,
              "nodeType": "Block",
              "src": "1134:65:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11826,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11787,
                        "src": "1144:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$11787_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 11828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11786,
                      "src": "1144:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:24:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11830,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:24:99"
                },
                {
                  "expression": {
                    "id": 11833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11831,
                      "name": "gramps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11819,
                      "src": "1178:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11832,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11821,
                      "src": "1187:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1178:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11834,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:14:99"
                }
              ]
            },
            "functionSelector": "f62d1888",
            "id": 11836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11824,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11823,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1122:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1075:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11821,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1100:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11836,
                  "src": "1086:19:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:21:99"
            },
            "returnParameters": {
              "id": 11825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:99"
            },
            "scope": 11837,
            "src": "1066:133:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "981:220:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11839,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1325:13:99"
            },
            "id": 11840,
            "nodeType": "InheritanceSpecifier",
            "src": "1325:13:99"
          },
          {
            "baseName": {
              "id": 11841,
              "name": "SampleGramps",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11837,
              "src": "1340:12:99"
            },
            "id": 11842,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:12:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11838,
          "nodeType": "StructuredDocumentation",
          "src": "1203:96:99",
          "text": " Sample base intializable contract that defines a field father and extends from gramps"
        },
        "fullyImplemented": true,
        "id": 11865,
        "linearizedBaseContracts": [
          11865,
          11837,
          11787,
          15984
        ],
        "name": "SampleFather",
        "nameLocation": "1309:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1c8aca3b",
            "id": 11844,
            "mutability": "mutable",
            "name": "father",
            "nameLocation": "1374:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11865,
            "src": "1359:21:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11863,
              "nodeType": "Block",
              "src": "1466:75:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11856,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11846,
                        "src": "1500:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 11853,
                        "name": "SampleGramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11837,
                        "src": "1476:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleGramps_$11837_$",
                          "typeString": "type(contract SampleGramps)"
                        }
                      },
                      "id": 11855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11836,
                      "src": "1476:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 11857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11858,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:32:99"
                },
                {
                  "expression": {
                    "id": 11861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11859,
                      "name": "father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11844,
                      "src": "1518:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11860,
                      "name": "_father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11848,
                      "src": "1527:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1518:16:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11862,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:16:99"
                }
              ]
            },
            "functionSelector": "8beaf7d7",
            "id": 11864,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11850,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1454:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1454:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1396:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11846,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1421:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11864,
                  "src": "1407:21:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11845,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11848,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1438:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11864,
                  "src": "1430:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:40:99"
            },
            "returnParameters": {
              "id": 11852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:99"
            },
            "scope": 11865,
            "src": "1387:154:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "1300:243:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11867,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1623:13:99"
            },
            "id": 11868,
            "nodeType": "InheritanceSpecifier",
            "src": "1623:13:99"
          },
          {
            "baseName": {
              "id": 11869,
              "name": "SampleMother",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11812,
              "src": "1638:12:99"
            },
            "id": 11870,
            "nodeType": "InheritanceSpecifier",
            "src": "1638:12:99"
          },
          {
            "baseName": {
              "id": 11871,
              "name": "SampleFather",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11865,
              "src": "1652:12:99"
            },
            "id": 11872,
            "nodeType": "InheritanceSpecifier",
            "src": "1652:12:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11866,
          "nodeType": "StructuredDocumentation",
          "src": "1545:53:99",
          "text": " Child extends from mother, father (gramps)"
        },
        "fullyImplemented": true,
        "id": 11906,
        "linearizedBaseContracts": [
          11906,
          11865,
          11837,
          11812,
          11787,
          15984
        ],
        "name": "SampleChild",
        "nameLocation": "1608:11:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "237b5e96",
            "id": 11874,
            "mutability": "mutable",
            "name": "child",
            "nameLocation": "1686:5:99",
            "nodeType": "VariableDeclaration",
            "scope": 11906,
            "src": "1671:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1671:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11904,
              "nodeType": "Block",
              "src": "1848:124:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11890,
                        "name": "_mother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11876,
                        "src": "1882:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11887,
                        "name": "SampleMother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11812,
                        "src": "1858:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleMother_$11812_$",
                          "typeString": "type(contract SampleMother)"
                        }
                      },
                      "id": 11889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11811,
                      "src": "1858:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11892,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:32:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11896,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11878,
                        "src": "1924:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 11897,
                        "name": "_father",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11880,
                        "src": "1933:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11893,
                        "name": "SampleFather",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11865,
                        "src": "1900:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleFather_$11865_$",
                          "typeString": "type(contract SampleFather)"
                        }
                      },
                      "id": 11895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11864,
                      "src": "1900:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 11898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:41:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11899,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:41:99"
                },
                {
                  "expression": {
                    "id": 11902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11900,
                      "name": "child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11874,
                      "src": "1951:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11901,
                      "name": "_child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11882,
                      "src": "1959:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1951:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11903,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:14:99"
                }
              ]
            },
            "functionSelector": "6f2edbd2",
            "id": 11905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11884,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1836:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1836:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1707:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11876,
                  "mutability": "mutable",
                  "name": "_mother",
                  "nameLocation": "1735:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1727:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11878,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1766:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1752:21:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11880,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1791:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1783:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11882,
                  "mutability": "mutable",
                  "name": "_child",
                  "nameLocation": "1816:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1808:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:111:99"
            },
            "returnParameters": {
              "id": 11886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:99"
            },
            "scope": 11906,
            "src": "1698:274:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "1599:375:99",
        "usedErrors": []
      }
    ],
    "src": "33:1942:99"
  },
  "bytecode": "608060405234801561001057600080fd5b506104bc806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c14610079578063f62d188814610083578063fa39851f14610096575b600080fd5b6000546100649062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100816100ab565b005b6100816100913660046102e1565b610131565b61009e6101ba565b6040516100709190610392565b600054610100900460ff16806100c4575060005460ff16155b6100e95760405162461bcd60e51b81526004016100e0906103e7565b60405180910390fd5b600054610100900460ff1615801561010b576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561012e576000805461ff00191690555b50565b600054610100900460ff168061014a575060005460ff16155b6101665760405162461bcd60e51b81526004016100e0906103e7565b600054610100900460ff16158015610188576000805461ffff19166101011790555b6101906100ab565b81516101a3906001906020850190610248565b5080156101b6576000805461ff00191690555b5050565b600180546101c790610435565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610435565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081565b82805461025490610435565b90600052602060002090601f01602090048101928261027657600085556102bc565b82601f1061028f57805160ff19168380011785556102bc565b828001600101855582156102bc579182015b828111156102bc5782518255916020019190600101906102a1565b506102c89291506102cc565b5090565b5b808211156102c857600081556001016102cd565b6000602082840312156102f357600080fd5b813567ffffffffffffffff8082111561030b57600080fd5b818401915084601f83011261031f57600080fd5b81358181111561033157610331610470565b604051601f8201601f19908116603f0116810190838211818310171561035957610359610470565b8160405282815287602084870101111561037257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103bf578581018301518582016040015282016103a3565b818111156103d1576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061044957607f821691505b6020821081141561046a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200e6c9bd9acbc9cf0d0b0c57fc38d7f1a3fda6916517eab3a174e5a0fe934e57564736f6c63430008060033",
  "bytecodeSha1": "eb054fb86c5ebd2f67e11f3837efa7c84dabdba7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SampleGramps",
  "coverageMap": {
    "branches": {
      "130": {
        "SampleGramps.initialize": {
          "3": [
            2037,
            2050,
            true
          ],
          "4": [
            2055,
            2067,
            true
          ]
        }
      },
      "99": {}
    },
    "statements": {
      "130": {},
      "99": {
        "SampleGramps.initialize": {
          "1": [
            1144,
            1168
          ],
          "2": [
            1178,
            1192
          ]
        },
        "SampleHuman.initialize": {
          "0": [
            593,
            607
          ]
        }
      }
    }
  },
  "dependencies": [
    "Initializable",
    "SampleHuman"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c14610079578063f62d188814610083578063fa39851f14610096575b600080fd5b6000546100649062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100816100ab565b005b6100816100913660046102e1565b610131565b61009e6101ba565b6040516100709190610392565b600054610100900460ff16806100c4575060005460ff16155b6100e95760405162461bcd60e51b81526004016100e0906103e7565b60405180910390fd5b600054610100900460ff1615801561010b576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561012e576000805461ff00191690555b50565b600054610100900460ff168061014a575060005460ff16155b6101665760405162461bcd60e51b81526004016100e0906103e7565b600054610100900460ff16158015610188576000805461ffff19166101011790555b6101906100ab565b81516101a3906001906020850190610248565b5080156101b6576000805461ff00191690555b5050565b600180546101c790610435565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610435565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081565b82805461025490610435565b90600052602060002090601f01602090048101928261027657600085556102bc565b82601f1061028f57805160ff19168380011785556102bc565b828001600101855582156102bc579182015b828111156102bc5782518255916020019190600101906102a1565b506102c89291506102cc565b5090565b5b808211156102c857600081556001016102cd565b6000602082840312156102f357600080fd5b813567ffffffffffffffff8082111561030b57600080fd5b818401915084601f83011261031f57600080fd5b81358181111561033157610331610470565b604051601f8201601f19908116603f0116810190838211818310171561035957610359610470565b8160405282815287602084870101111561037257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103bf578581018301518582016040015282016103a3565b818111156103d1576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061044957607f821691505b6020821081141561046a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200e6c9bd9acbc9cf0d0b0c57fc38d7f1a3fda6916517eab3a174e5a0fe934e57564736f6c63430008060033",
  "deployedSourceMap": "981:220:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:19;;;;;;;;;;;;;;;1106:14:211;;1099:22;1081:41;;1069:2;1054:18;516:19:99;;;;;;;;542:72;;;:::i;:::-;;1066:133;;;;;;:::i;:::-;;:::i;1039:20::-;;;:::i;:::-;;;;;;;:::i;542:72::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;;;;;;;;;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;593:7:99::1;:14:::0;;-1:-1:-1;;593:14:99::1;::::0;::::1;::::0;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;542:72:99:o;1066:133::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;1144:24:99::1;:22;:24::i;:::-;1178:14:::0;;::::1;::::0;:6:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2299::130::0;2295:66;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;1066:133:99;:::o;1039:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:922:211;83:6;136:2;124:9;115:7;111:23;107:32;104:2;;;152:1;149;142:12;104:2;192:9;179:23;221:18;262:2;254:6;251:14;248:2;;;278:1;275;268:12;248:2;316:6;305:9;301:22;291:32;;361:7;354:4;350:2;346:13;342:27;332:2;;383:1;380;373:12;332:2;419;406:16;441:2;437;434:10;431:2;;;447:18;;:::i;:::-;522:2;516:9;490:2;576:13;;-1:-1:-1;;572:22:211;;;596:2;568:31;564:40;552:53;;;620:18;;;640:22;;;617:46;614:2;;;666:18;;:::i;:::-;706:10;702:2;695:22;741:2;733:6;726:18;781:7;776:2;771;767;763:11;759:20;756:33;753:2;;;802:1;799;792:12;753:2;858;853;849;845:11;840:2;832:6;828:15;815:46;903:1;881:15;;;898:2;877:24;870:35;;;;-1:-1:-1;885:6:211;94:842;-1:-1:-1;;;;;94:842:211:o;1133:597::-;1245:4;1274:2;1303;1292:9;1285:21;1335:6;1329:13;1378:6;1373:2;1362:9;1358:18;1351:34;1403:1;1413:140;1427:6;1424:1;1421:13;1413:140;;;1522:14;;;1518:23;;1512:30;1488:17;;;1507:2;1484:26;1477:66;1442:10;;1413:140;;;1571:6;1568:1;1565:13;1562:2;;;1641:1;1636:2;1627:6;1616:9;1612:22;1608:31;1601:42;1562:2;-1:-1:-1;1714:2:211;1693:15;-1:-1:-1;;1689:29:211;1674:45;;;;1721:2;1670:54;;1254:476;-1:-1:-1;;;1254:476:211:o;1735:410::-;1937:2;1919:21;;;1976:2;1956:18;;;1949:30;2015:34;2010:2;1995:18;;1988:62;-1:-1:-1;;;2081:2:211;2066:18;;2059:44;2135:3;2120:19;;1909:236::o;2150:380::-;2229:1;2225:12;;;;2272;;;2293:2;;2347:4;2339:6;2335:17;2325:27;;2293:2;2400;2392:6;2389:14;2369:18;2366:38;2363:2;;;2446:10;2441:3;2437:20;2434:1;2427:31;2481:4;2478:1;2471:15;2509:4;2506:1;2499:15;2363:2;;2205:325;;;:::o;2535:127::-;2596:10;2591:3;2587:20;2584:1;2577:31;2627:4;2624:1;2617:15;2651:4;2648:1;2641:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "Sample base intializable contract that defines a field gramps",
    "version": 1
  },
  "offset": [
    981,
    1201
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A6C9DB6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0xFA39851F EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x64 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x91 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH2 0x9E PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xC4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x190 PUSH2 0xAB JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1A3 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x248 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1C7 SWAP1 PUSH2 0x435 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F3 SWAP1 PUSH2 0x435 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x240 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x240 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x223 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x254 SWAP1 PUSH2 0x435 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x276 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x28F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A1 JUMP JUMPDEST POP PUSH2 0x2C8 SWAP3 SWAP2 POP PUSH2 0x2CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0x470 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3BF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3A3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x449 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x46A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH13 0x9BD9ACBC9CF0D0B0C57FC38D7F BYTE EXTCODEHASH 0xDA PUSH10 0x16517EAB3A174E5A0FE9 CALLVALUE 0xE5 PUSH22 0x64736F6C634300080600330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "5": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "CALLVALUE",
      "path": "99"
    },
    "6": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "7": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "ISZERO",
      "path": "99"
    },
    "8": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "12": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "REVERT",
      "path": "99"
    },
    "16": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "17": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "POP",
      "path": "99"
    },
    "18": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "21": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "LT",
      "path": "99"
    },
    "22": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "26": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "CALLDATALOAD",
      "path": "99"
    },
    "29": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "SHR",
      "path": "99"
    },
    "32": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "33": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x4A6C9DB6"
    },
    "38": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "99"
    },
    "39": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "43": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "44": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x8129FC1C"
    },
    "49": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "99"
    },
    "50": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x79"
    },
    "53": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "54": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "55": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xF62D1888"
    },
    "60": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "99"
    },
    "61": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x83"
    },
    "64": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "65": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "66": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xFA39851F"
    },
    "71": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "EQ",
      "path": "99"
    },
    "72": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x96"
    },
    "75": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "76": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "77": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "DUP1",
      "path": "99"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        981,
        1201
      ],
      "op": "REVERT",
      "path": "99"
    },
    "81": {
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "82": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "84": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "85": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x64"
    },
    "88": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "89": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH3",
      "path": "99",
      "value": "0x10000"
    },
    "93": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "94": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DIV",
      "path": "99"
    },
    "95": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0xFF"
    },
    "97": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "AND",
      "path": "99"
    },
    "98": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DUP2",
      "path": "99"
    },
    "99": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMP",
      "path": "99"
    },
    "100": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "101": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "103": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "ISZERO"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "DUP2"
    },
    "108": {
      "op": "MSTORE"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "113": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "115": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "116": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DUP1",
      "path": "99"
    },
    "117": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "118": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SUB",
      "path": "99"
    },
    "119": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "120": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "RETURN",
      "path": "99"
    },
    "121": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "122": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x81"
    },
    "125": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAB"
    },
    "128": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "99"
    },
    "129": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "130": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "STOP",
      "path": "99"
    },
    "131": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "132": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x81"
    },
    "135": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x91"
    },
    "138": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "139": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "141": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2E1"
    },
    "144": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "145": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "146": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x131"
    },
    "149": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "150": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "151": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x9E"
    },
    "154": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1BA"
    },
    "157": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "158": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "159": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "161": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "162": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x70"
    },
    "165": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "166": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "167": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x392"
    },
    "170": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "171": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "172": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "174": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "175": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "178": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "179": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "180": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "182": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "183": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "184": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0xC4"
    },
    "187": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "188": {
      "op": "POP"
    },
    "189": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "191": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "192": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "194": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "195": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "196": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "197": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0xE9"
    },
    "200": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "201": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "203": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "210": {
      "op": "SHL"
    },
    "211": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "212": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "213": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "215": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "216": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0xE0"
    },
    "219": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "220": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x3E7"
    },
    "223": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "224": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "225": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "227": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "228": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "DUP1",
      "path": "130"
    },
    "229": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP2",
      "path": "130"
    },
    "230": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SUB",
      "path": "130"
    },
    "231": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "232": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "130"
    },
    "233": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "234": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "236": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "237": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "240": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "241": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "242": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "244": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "245": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "246": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "247": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "248": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x10B"
    },
    "251": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "252": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "254": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "255": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "256": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "259": {
      "op": "NOT"
    },
    "260": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "261": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "264": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "265": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "266": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "267": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "268": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        600
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 0,
      "value": "0x0"
    },
    "270": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "DUP1",
      "path": "99"
    },
    "271": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "272": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "276": {
      "op": "NOT"
    },
    "277": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "AND",
      "path": "99"
    },
    "278": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "PUSH3",
      "path": "99",
      "value": "0x10000"
    },
    "282": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "OR",
      "path": "99"
    },
    "283": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "284": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "285": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "286": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "287": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x12E"
    },
    "290": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "291": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "293": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "294": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "295": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "298": {
      "op": "NOT"
    },
    "299": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "300": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "301": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "302": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "303": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "304": {
      "fn": "SampleHuman.initialize",
      "jump": "o",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "99"
    },
    "305": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "306": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "308": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "309": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "312": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "313": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "314": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "316": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "317": {
      "branch": 3,
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "318": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x14A"
    },
    "321": {
      "branch": 3,
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "325": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "326": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "328": {
      "branch": 4,
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "329": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "330": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "331": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x166"
    },
    "334": {
      "branch": 4,
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "335": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "337": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "346": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "347": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "349": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "350": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0xE0"
    },
    "353": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "354": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x3E7"
    },
    "357": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "358": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "359": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "361": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "362": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "365": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "366": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "367": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "369": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "370": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "371": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "372": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "373": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x188"
    },
    "376": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "377": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "379": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "380": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "381": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "384": {
      "op": "NOT"
    },
    "385": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "386": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "389": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "390": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "391": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "392": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "393": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 1,
      "value": "0x190"
    },
    "396": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1166
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAB"
    },
    "399": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMP",
      "path": "99"
    },
    "400": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "401": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP2",
      "path": "99",
      "statement": 2
    },
    "402": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "403": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1A3"
    },
    "406": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "407": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "409": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "410": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "412": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP6",
      "path": "99"
    },
    "413": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "ADD",
      "path": "99"
    },
    "414": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "415": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x248"
    },
    "418": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMP",
      "path": "99"
    },
    "419": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "420": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "POP",
      "path": "99"
    },
    "421": {
      "offset": [
        2299,
        2313
      ],
      "op": "DUP1",
      "path": "130"
    },
    "422": {
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "423": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x1B6"
    },
    "426": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "427": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "429": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "430": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "431": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "434": {
      "op": "NOT"
    },
    "435": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "436": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "437": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "438": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "439": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "440": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "POP",
      "path": "99"
    },
    "441": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "442": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "443": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "445": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "446": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "447": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1C7"
    },
    "450": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "451": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x435"
    },
    "454": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "455": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "456": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "457": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "459": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "460": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "462": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "463": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "464": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "99"
    },
    "465": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "99"
    },
    "466": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "468": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "469": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "471": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "472": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "473": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "474": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "475": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "477": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "478": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "479": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP3",
      "path": "99"
    },
    "480": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "481": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "482": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "483": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "484": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "485": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "487": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "488": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "489": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "490": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "491": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1F3"
    },
    "494": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "495": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x435"
    },
    "498": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "499": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "500": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "501": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ISZERO",
      "path": "99"
    },
    "502": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x240"
    },
    "505": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "506": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "507": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "509": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "LT",
      "path": "99"
    },
    "510": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x215"
    },
    "513": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "514": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x100"
    },
    "517": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "518": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "519": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "520": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "99"
    },
    "521": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "99"
    },
    "522": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "523": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "524": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "525": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "527": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "528": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "529": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x240"
    },
    "532": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "533": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "534": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "535": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "536": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "537": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "538": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "540": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "541": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "543": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "545": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "KECCAK256",
      "path": "99"
    },
    "546": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "547": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "548": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "549": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "550": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "551": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "552": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "553": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "555": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "556": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "557": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "559": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "560": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "561": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "562": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "GT",
      "path": "99"
    },
    "563": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x223"
    },
    "566": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "567": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "568": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "569": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SUB",
      "path": "99"
    },
    "570": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "572": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "AND",
      "path": "99"
    },
    "573": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "574": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "575": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "576": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "577": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "578": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "579": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "580": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "581": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "582": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "583": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "584": {
      "op": "JUMPDEST"
    },
    "585": {
      "op": "DUP3"
    },
    "586": {
      "op": "DUP1"
    },
    "587": {
      "op": "SLOAD"
    },
    "588": {
      "op": "PUSH2",
      "value": "0x254"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "PUSH2",
      "value": "0x435"
    },
    "595": {
      "jump": "i",
      "op": "JUMP"
    },
    "596": {
      "op": "JUMPDEST"
    },
    "597": {
      "op": "SWAP1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "600": {
      "op": "MSTORE"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "605": {
      "op": "KECCAK256"
    },
    "606": {
      "op": "SWAP1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "609": {
      "op": "ADD"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "612": {
      "op": "SWAP1"
    },
    "613": {
      "op": "DIV"
    },
    "614": {
      "op": "DUP2"
    },
    "615": {
      "op": "ADD"
    },
    "616": {
      "op": "SWAP3"
    },
    "617": {
      "op": "DUP3"
    },
    "618": {
      "op": "PUSH2",
      "value": "0x276"
    },
    "621": {
      "op": "JUMPI"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "624": {
      "op": "DUP6"
    },
    "625": {
      "op": "SSTORE"
    },
    "626": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "629": {
      "op": "JUMP"
    },
    "630": {
      "op": "JUMPDEST"
    },
    "631": {
      "op": "DUP3"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "634": {
      "op": "LT"
    },
    "635": {
      "op": "PUSH2",
      "value": "0x28F"
    },
    "638": {
      "op": "JUMPI"
    },
    "639": {
      "op": "DUP1"
    },
    "640": {
      "op": "MLOAD"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "643": {
      "op": "NOT"
    },
    "644": {
      "op": "AND"
    },
    "645": {
      "op": "DUP4"
    },
    "646": {
      "op": "DUP1"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "op": "OR"
    },
    "649": {
      "op": "DUP6"
    },
    "650": {
      "op": "SSTORE"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "654": {
      "op": "JUMP"
    },
    "655": {
      "op": "JUMPDEST"
    },
    "656": {
      "op": "DUP3"
    },
    "657": {
      "op": "DUP1"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "op": "DUP6"
    },
    "663": {
      "op": "SSTORE"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ISZERO"
    },
    "666": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "669": {
      "op": "JUMPI"
    },
    "670": {
      "op": "SWAP2"
    },
    "671": {
      "op": "DUP3"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "op": "JUMPDEST"
    },
    "674": {
      "op": "DUP3"
    },
    "675": {
      "op": "DUP2"
    },
    "676": {
      "op": "GT"
    },
    "677": {
      "op": "ISZERO"
    },
    "678": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "681": {
      "op": "JUMPI"
    },
    "682": {
      "op": "DUP3"
    },
    "683": {
      "op": "MLOAD"
    },
    "684": {
      "op": "DUP3"
    },
    "685": {
      "op": "SSTORE"
    },
    "686": {
      "op": "SWAP2"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "689": {
      "op": "ADD"
    },
    "690": {
      "op": "SWAP2"
    },
    "691": {
      "op": "SWAP1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "PUSH2",
      "value": "0x2A1"
    },
    "699": {
      "op": "JUMP"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "705": {
      "op": "SWAP3"
    },
    "706": {
      "op": "SWAP2"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x2CC"
    },
    "711": {
      "jump": "i",
      "op": "JUMP"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "op": "POP"
    },
    "714": {
      "op": "SWAP1"
    },
    "715": {
      "jump": "o",
      "op": "JUMP"
    },
    "716": {
      "op": "JUMPDEST"
    },
    "717": {
      "op": "JUMPDEST"
    },
    "718": {
      "op": "DUP1"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "GT"
    },
    "721": {
      "op": "ISZERO"
    },
    "722": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "725": {
      "op": "JUMPI"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "728": {
      "op": "DUP2"
    },
    "729": {
      "op": "SSTORE"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "732": {
      "op": "ADD"
    },
    "733": {
      "op": "PUSH2",
      "value": "0x2CD"
    },
    "736": {
      "op": "JUMP"
    },
    "737": {
      "op": "JUMPDEST"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "DUP5"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "op": "SLT"
    },
    "746": {
      "op": "ISZERO"
    },
    "747": {
      "op": "PUSH2",
      "value": "0x2F3"
    },
    "750": {
      "op": "JUMPI"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "753": {
      "op": "DUP1"
    },
    "754": {
      "op": "REVERT"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "op": "DUP2"
    },
    "757": {
      "op": "CALLDATALOAD"
    },
    "758": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "767": {
      "op": "DUP1"
    },
    "768": {
      "op": "DUP3"
    },
    "769": {
      "op": "GT"
    },
    "770": {
      "op": "ISZERO"
    },
    "771": {
      "op": "PUSH2",
      "value": "0x30B"
    },
    "774": {
      "op": "JUMPI"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "777": {
      "op": "DUP1"
    },
    "778": {
      "op": "REVERT"
    },
    "779": {
      "op": "JUMPDEST"
    },
    "780": {
      "op": "DUP2"
    },
    "781": {
      "op": "DUP5"
    },
    "782": {
      "op": "ADD"
    },
    "783": {
      "op": "SWAP2"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "op": "DUP5"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "788": {
      "op": "DUP4"
    },
    "789": {
      "op": "ADD"
    },
    "790": {
      "op": "SLT"
    },
    "791": {
      "op": "PUSH2",
      "value": "0x31F"
    },
    "794": {
      "op": "JUMPI"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "797": {
      "op": "DUP1"
    },
    "798": {
      "op": "REVERT"
    },
    "799": {
      "op": "JUMPDEST"
    },
    "800": {
      "op": "DUP2"
    },
    "801": {
      "op": "CALLDATALOAD"
    },
    "802": {
      "op": "DUP2"
    },
    "803": {
      "op": "DUP2"
    },
    "804": {
      "op": "GT"
    },
    "805": {
      "op": "ISZERO"
    },
    "806": {
      "op": "PUSH2",
      "value": "0x331"
    },
    "809": {
      "op": "JUMPI"
    },
    "810": {
      "op": "PUSH2",
      "value": "0x331"
    },
    "813": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "816": {
      "jump": "i",
      "op": "JUMP"
    },
    "817": {
      "op": "JUMPDEST"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "820": {
      "op": "MLOAD"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "823": {
      "op": "DUP3"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "827": {
      "op": "NOT"
    },
    "828": {
      "op": "SWAP1"
    },
    "829": {
      "op": "DUP2"
    },
    "830": {
      "op": "AND"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "AND"
    },
    "835": {
      "op": "DUP2"
    },
    "836": {
      "op": "ADD"
    },
    "837": {
      "op": "SWAP1"
    },
    "838": {
      "op": "DUP4"
    },
    "839": {
      "op": "DUP3"
    },
    "840": {
      "op": "GT"
    },
    "841": {
      "op": "DUP2"
    },
    "842": {
      "op": "DUP4"
    },
    "843": {
      "op": "LT"
    },
    "844": {
      "op": "OR"
    },
    "845": {
      "op": "ISZERO"
    },
    "846": {
      "op": "PUSH2",
      "value": "0x359"
    },
    "849": {
      "op": "JUMPI"
    },
    "850": {
      "op": "PUSH2",
      "value": "0x359"
    },
    "853": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "856": {
      "jump": "i",
      "op": "JUMP"
    },
    "857": {
      "op": "JUMPDEST"
    },
    "858": {
      "op": "DUP2"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "DUP3"
    },
    "863": {
      "op": "DUP2"
    },
    "864": {
      "op": "MSTORE"
    },
    "865": {
      "op": "DUP8"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "DUP5"
    },
    "869": {
      "op": "DUP8"
    },
    "870": {
      "op": "ADD"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "GT"
    },
    "873": {
      "op": "ISZERO"
    },
    "874": {
      "op": "PUSH2",
      "value": "0x372"
    },
    "877": {
      "op": "JUMPI"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "880": {
      "op": "DUP1"
    },
    "881": {
      "op": "REVERT"
    },
    "882": {
      "op": "JUMPDEST"
    },
    "883": {
      "op": "DUP3"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "886": {
      "op": "DUP7"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "890": {
      "op": "DUP4"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "CALLDATACOPY"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "895": {
      "op": "SWAP3"
    },
    "896": {
      "op": "DUP2"
    },
    "897": {
      "op": "ADD"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "SWAP3"
    },
    "902": {
      "op": "SWAP1"
    },
    "903": {
      "op": "SWAP3"
    },
    "904": {
      "op": "MSTORE"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "op": "SWAP6"
    },
    "907": {
      "op": "SWAP5"
    },
    "908": {
      "op": "POP"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "op": "POP"
    },
    "911": {
      "op": "POP"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "jump": "o",
      "op": "JUMP"
    },
    "914": {
      "op": "JUMPDEST"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "919": {
      "op": "DUP1"
    },
    "920": {
      "op": "DUP4"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "DUP4"
    },
    "923": {
      "op": "MLOAD"
    },
    "924": {
      "op": "DUP1"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "DUP6"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "931": {
      "op": "JUMPDEST"
    },
    "932": {
      "op": "DUP2"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "LT"
    },
    "935": {
      "op": "ISZERO"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x3BF"
    },
    "939": {
      "op": "JUMPI"
    },
    "940": {
      "op": "DUP6"
    },
    "941": {
      "op": "DUP2"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "op": "DUP4"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "MLOAD"
    },
    "946": {
      "op": "DUP6"
    },
    "947": {
      "op": "DUP3"
    },
    "948": {
      "op": "ADD"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "951": {
      "op": "ADD"
    },
    "952": {
      "op": "MSTORE"
    },
    "953": {
      "op": "DUP3"
    },
    "954": {
      "op": "ADD"
    },
    "955": {
      "op": "PUSH2",
      "value": "0x3A3"
    },
    "958": {
      "op": "JUMP"
    },
    "959": {
      "op": "JUMPDEST"
    },
    "960": {
      "op": "DUP2"
    },
    "961": {
      "op": "DUP2"
    },
    "962": {
      "op": "GT"
    },
    "963": {
      "op": "ISZERO"
    },
    "964": {
      "op": "PUSH2",
      "value": "0x3D1"
    },
    "967": {
      "op": "JUMPI"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "972": {
      "op": "DUP4"
    },
    "973": {
      "op": "DUP8"
    },
    "974": {
      "op": "ADD"
    },
    "975": {
      "op": "ADD"
    },
    "976": {
      "op": "MSTORE"
    },
    "977": {
      "op": "JUMPDEST"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "984": {
      "op": "NOT"
    },
    "985": {
      "op": "AND"
    },
    "986": {
      "op": "SWAP3"
    },
    "987": {
      "op": "SWAP1"
    },
    "988": {
      "op": "SWAP3"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "op": "SWAP4"
    },
    "994": {
      "op": "SWAP3"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "jump": "o",
      "op": "JUMP"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1002": {
      "op": "DUP1"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1007": {
      "op": "SWAP1"
    },
    "1008": {
      "op": "DUP3"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1074": {
      "op": "ADD"
    },
    "1075": {
      "op": "SWAP1"
    },
    "1076": {
      "jump": "o",
      "op": "JUMP"
    },
    "1077": {
      "op": "JUMPDEST"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "DUP2"
    },
    "1082": {
      "op": "SHR"
    },
    "1083": {
      "op": "SWAP1"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "AND"
    },
    "1086": {
      "op": "DUP1"
    },
    "1087": {
      "op": "PUSH2",
      "value": "0x449"
    },
    "1090": {
      "op": "JUMPI"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1093": {
      "op": "DUP3"
    },
    "1094": {
      "op": "AND"
    },
    "1095": {
      "op": "SWAP2"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "op": "JUMPDEST"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "LT"
    },
    "1102": {
      "op": "DUP2"
    },
    "1103": {
      "op": "EQ"
    },
    "1104": {
      "op": "ISZERO"
    },
    "1105": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1108": {
      "op": "JUMPI"
    },
    "1109": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1119": {
      "op": "MSTORE"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1129": {
      "op": "REVERT"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "SWAP2"
    },
    "1133": {
      "op": "SWAP1"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "jump": "o",
      "op": "JUMP"
    },
    "1136": {
      "op": "JUMPDEST"
    },
    "1137": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1152": {
      "op": "MSTORE"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1157": {
      "op": "REVERT"
    }
  },
  "sha1": "e5d5fb97e35fc725af618e81bf0e1c1b779a15ab",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n// Sample contracts showing upgradeability with multiple inheritance.\n// Child contract inherits from Father and Mother contracts, and Father extends from Gramps.\n//\n//         Human\n//       /       \\\n//      |       Gramps\n//      |         |\n//    Mother    Father\n//      |         |\n//      -- Child --\n\n/**\n * Sample base intializable contract that is a human\n */\ncontract SampleHuman is Initializable {\n    bool public isHuman;\n\n    function initialize() public initializer {\n        isHuman = true;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field mother\n */\ncontract SampleMother is Initializable, SampleHuman {\n    uint256 public mother;\n\n    function initialize(uint256 value) public virtual initializer {\n        SampleHuman.initialize();\n        mother = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field gramps\n */\ncontract SampleGramps is Initializable, SampleHuman {\n    string public gramps;\n\n    function initialize(string memory value) public virtual initializer {\n        SampleHuman.initialize();\n        gramps = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field father and extends from gramps\n */\ncontract SampleFather is Initializable, SampleGramps {\n    uint256 public father;\n\n    function initialize(string memory _gramps, uint256 _father) public initializer {\n        SampleGramps.initialize(_gramps);\n        father = _father;\n    }\n}\n\n/**\n * Child extends from mother, father (gramps)\n */\ncontract SampleChild is Initializable, SampleMother, SampleFather {\n    uint256 public child;\n\n    function initialize(\n        uint256 _mother,\n        string memory _gramps,\n        uint256 _father,\n        uint256 _child\n    ) public initializer {\n        SampleMother.initialize(_mother);\n        SampleFather.initialize(_gramps, _father);\n        child = _child;\n    }\n}\n",
  "sourceMap": "981:220:99:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
  "type": "contract"
}