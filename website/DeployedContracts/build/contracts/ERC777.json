{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators_",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "146": "contracts/OpenZepellin/contracts/token/ERC20/IERC20.sol",
    "173": "contracts/OpenZepellin/contracts/token/ERC777/ERC777.sol",
    "174": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol",
    "175": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Recipient.sol",
    "176": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Sender.sol",
    "178": "contracts/OpenZepellin/contracts/utils/Address.sol",
    "180": "contracts/OpenZepellin/contracts/utils/Context.sol",
    "200": "contracts/OpenZepellin/contracts/utils/introspection/IERC1820Registry.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/ERC777.sol",
    "exportedSymbols": {
      "Address": [
        24338
      ],
      "Context": [
        24445
      ],
      "ERC777": [
        23807
      ],
      "IERC1820Registry": [
        26635
      ],
      "IERC20": [
        18696
      ],
      "IERC777": [
        23966
      ],
      "IERC777Recipient": [
        23986
      ],
      "IERC777Sender": [
        24006
      ]
    },
    "id": 23808,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22672,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:173"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol",
        "file": "./IERC777.sol",
        "id": 22673,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 23967,
        "src": "117:23:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "./IERC777Recipient.sol",
        "id": 22674,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 23987,
        "src": "141:32:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "./IERC777Sender.sol",
        "id": 22675,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 24007,
        "src": "174:29:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 22676,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 18697,
        "src": "204:29:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 22677,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 24339,
        "src": "234:33:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 22678,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 24446,
        "src": "268:33:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../../utils/introspection/IERC1820Registry.sol",
        "id": 22679,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23808,
        "sourceUnit": 26636,
        "src": "302:56:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22681,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24445,
              "src": "1092:7:173"
            },
            "id": 22682,
            "nodeType": "InheritanceSpecifier",
            "src": "1092:7:173"
          },
          {
            "baseName": {
              "id": 22683,
              "name": "IERC777",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23966,
              "src": "1101:7:173"
            },
            "id": 22684,
            "nodeType": "InheritanceSpecifier",
            "src": "1101:7:173"
          },
          {
            "baseName": {
              "id": 22685,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18696,
              "src": "1110:6:173"
            },
            "id": 22686,
            "nodeType": "InheritanceSpecifier",
            "src": "1110:6:173"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22680,
          "nodeType": "StructuredDocumentation",
          "src": "360:712:173",
          "text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
        },
        "fullyImplemented": true,
        "id": 23807,
        "linearizedBaseContracts": [
          23807,
          18696,
          23966,
          24445
        ],
        "name": "ERC777",
        "nameLocation": "1082:6:173",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22689,
            "libraryName": {
              "id": 22687,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24338,
              "src": "1129:7:173"
            },
            "nodeType": "UsingForDirective",
            "src": "1123:26:173",
            "typeName": {
              "id": 22688,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1141:7:173",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 22695,
            "mutability": "constant",
            "name": "_ERC1820_REGISTRY",
            "nameLocation": "1190:17:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1155:115:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 22691,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22690,
                "name": "IERC1820Registry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26635,
                "src": "1155:16:173"
              },
              "referencedDeclaration": 26635,
              "src": "1155:16:173",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 22693,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1227:42:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 22692,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26635,
                "src": "1210:16:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$26635_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 22694,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1210:60:173",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22699,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1313:9:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1277:45:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22698,
              "keyType": {
                "id": 22696,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1285:7:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1277:27:173",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 22697,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1296:7:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22701,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1345:12:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1329:28:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22700,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1329:7:173",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22703,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1379:5:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1364:20:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 22702,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1364:6:173",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22705,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1405:7:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1390:22:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 22704,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1390:6:173",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 22710,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1444:29:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1419:88:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22706,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1419:7:173",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 22708,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1486:20:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 22707,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1476:9:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 22709,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1476:31:173",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 22715,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1538:32:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1513:94:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22711,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1513:7:173",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 22713,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1583:23:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 22712,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1573:9:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 22714,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1573:34:173",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22718,
            "mutability": "mutable",
            "name": "_defaultOperatorsArray",
            "nameLocation": "1724:22:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1706:40:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 22716,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1706:7:173",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 22717,
              "nodeType": "ArrayTypeName",
              "src": "1706:9:173",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22722,
            "mutability": "mutable",
            "name": "_defaultOperators",
            "nameLocation": "1873:17:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1840:50:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 22721,
              "keyType": {
                "id": 22719,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1848:7:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1840:24:173",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 22720,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1859:4:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22728,
            "mutability": "mutable",
            "name": "_operators",
            "nameLocation": "2033:10:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "1980:63:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 22727,
              "keyType": {
                "id": 22723,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1980:44:173",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 22726,
                "keyType": {
                  "id": 22724,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1999:24:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 22725,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:4:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22734,
            "mutability": "mutable",
            "name": "_revokedDefaultOperators",
            "nameLocation": "2102:24:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "2049:77:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 22733,
              "keyType": {
                "id": 22729,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2057:7:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2049:44:173",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 22732,
                "keyType": {
                  "id": 22730,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2076:7:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2068:24:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 22731,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2087:4:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22740,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2213:11:173",
            "nodeType": "VariableDeclaration",
            "scope": 23807,
            "src": "2157:67:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 22739,
              "keyType": {
                "id": 22735,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2165:7:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2157:47:173",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 22738,
                "keyType": {
                  "id": 22736,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2184:7:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2176:27:173",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 22737,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2195:7:173",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 22816,
              "nodeType": "Block",
              "src": "2423:490:173",
              "statements": [
                {
                  "expression": {
                    "id": 22753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22751,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22703,
                      "src": "2433:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22752,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22743,
                      "src": "2441:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2433:13:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22754,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:13:173"
                },
                {
                  "expression": {
                    "id": 22757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22755,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22705,
                      "src": "2456:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22756,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22745,
                      "src": "2466:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2456:17:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22758,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:17:173"
                },
                {
                  "expression": {
                    "id": 22761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22759,
                      "name": "_defaultOperatorsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22718,
                      "src": "2484:22:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22760,
                      "name": "defaultOperators_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22748,
                      "src": "2509:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2484:42:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 22762,
                  "nodeType": "ExpressionStatement",
                  "src": "2484:42:173"
                },
                {
                  "body": {
                    "id": 22782,
                    "nodeType": "Block",
                    "src": "2591:71:173",
                    "statements": [
                      {
                        "expression": {
                          "id": 22780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 22774,
                              "name": "_defaultOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22722,
                              "src": "2605:17:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 22778,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 22775,
                                "name": "defaultOperators_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22748,
                                "src": "2623:17:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 22777,
                              "indexExpression": {
                                "id": 22776,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22764,
                                "src": "2641:1:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2623:20:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2605:39:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 22779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2647:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2605:46:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22781,
                        "nodeType": "ExpressionStatement",
                        "src": "2605:46:173"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22767,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22764,
                      "src": "2556:1:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 22768,
                        "name": "defaultOperators_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22748,
                        "src": "2560:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 22769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2560:24:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2556:28:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22783,
                  "initializationExpression": {
                    "assignments": [
                      22764
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 22764,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2549:1:173",
                        "nodeType": "VariableDeclaration",
                        "scope": 22783,
                        "src": "2541:9:173",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2541:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 22766,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 22765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2553:1:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2541:13:173"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 22772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2586:3:173",
                      "subExpression": {
                        "id": 22771,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22764,
                        "src": "2586:1:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22773,
                    "nodeType": "ExpressionStatement",
                    "src": "2586:3:173"
                  },
                  "nodeType": "ForStatement",
                  "src": "2536:126:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22789,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2753:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 22788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2745:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2745:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2745:13:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "455243373737546f6b656e",
                            "id": 22792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2770:13:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            },
                            "value": "ERC777Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            }
                          ],
                          "id": 22791,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2760:9:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 22793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2760:24:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22796,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2794:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 22795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2786:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2786:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2786:13:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 22784,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22695,
                        "src": "2703:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 22786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26574,
                      "src": "2703:41:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 22798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:97:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22799,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:97:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22805,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2860:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 22804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2852:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2852:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2852:13:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4552433230546f6b656e",
                            "id": 22808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2877:12:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            },
                            "value": "ERC20Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            }
                          ],
                          "id": 22807,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2867:9:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 22809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2867:23:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22812,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2900:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$23807",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 22811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2892:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22810,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2892:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2892:13:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 22800,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22695,
                        "src": "2810:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 22802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26574,
                      "src": "2810:41:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 22814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:96:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22815,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:96:173"
                }
              ]
            },
            "documentation": {
              "id": 22741,
              "nodeType": "StructuredDocumentation",
              "src": "2231:65:173",
              "text": " @dev `defaultOperators` may be an empty array."
            },
            "id": 22817,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22743,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2336:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22817,
                  "src": "2322:19:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22742,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:6:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22745,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2365:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22817,
                  "src": "2351:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:6:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22748,
                  "mutability": "mutable",
                  "name": "defaultOperators_",
                  "nameLocation": "2399:17:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22817,
                  "src": "2382:34:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22746,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2382:7:173",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 22747,
                    "nodeType": "ArrayTypeName",
                    "src": "2382:9:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2312:110:173"
            },
            "returnParameters": {
              "id": 22750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2423:0:173"
            },
            "scope": 23807,
            "src": "2301:612:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23816
            ],
            "body": {
              "id": 22826,
              "nodeType": "Block",
              "src": "3036:29:173",
              "statements": [
                {
                  "expression": {
                    "id": 22824,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22703,
                    "src": "3053:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 22823,
                  "id": 22825,
                  "nodeType": "Return",
                  "src": "3046:12:173"
                }
              ]
            },
            "documentation": {
              "id": 22818,
              "nodeType": "StructuredDocumentation",
              "src": "2919:43:173",
              "text": " @dev See {IERC777-name}."
            },
            "functionSelector": "06fdde03",
            "id": 22827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2976:4:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22820,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3003:8:173"
            },
            "parameters": {
              "id": 22819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:2:173"
            },
            "returnParameters": {
              "id": 22823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22827,
                  "src": "3021:13:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22821,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:6:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:15:173"
            },
            "scope": 23807,
            "src": "2967:98:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23822
            ],
            "body": {
              "id": 22836,
              "nodeType": "Block",
              "src": "3192:31:173",
              "statements": [
                {
                  "expression": {
                    "id": 22834,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22705,
                    "src": "3209:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 22833,
                  "id": 22835,
                  "nodeType": "Return",
                  "src": "3202:14:173"
                }
              ]
            },
            "documentation": {
              "id": 22828,
              "nodeType": "StructuredDocumentation",
              "src": "3071:45:173",
              "text": " @dev See {IERC777-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 22837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3130:6:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22830,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3159:8:173"
            },
            "parameters": {
              "id": 22829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3136:2:173"
            },
            "returnParameters": {
              "id": 22833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22837,
                  "src": "3177:13:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22831,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3177:6:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3176:15:173"
            },
            "scope": 23807,
            "src": "3121:102:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22845,
              "nodeType": "Block",
              "src": "3463:26:173",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 22843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3480:2:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 22842,
                  "id": 22844,
                  "nodeType": "Return",
                  "src": "3473:9:173"
                }
              ]
            },
            "documentation": {
              "id": 22838,
              "nodeType": "StructuredDocumentation",
              "src": "3229:173:173",
              "text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
            },
            "functionSelector": "313ce567",
            "id": 22846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3416:8:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3424:2:173"
            },
            "returnParameters": {
              "id": 22842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22846,
                  "src": "3456:5:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 22840,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:7:173"
            },
            "scope": 23807,
            "src": "3407:82:173",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23828
            ],
            "body": {
              "id": 22855,
              "nodeType": "Block",
              "src": "3674:25:173",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 22853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3691:1:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 22852,
                  "id": 22854,
                  "nodeType": "Return",
                  "src": "3684:8:173"
                }
              ]
            },
            "documentation": {
              "id": 22847,
              "nodeType": "StructuredDocumentation",
              "src": "3495:104:173",
              "text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
            },
            "functionSelector": "556f0dc7",
            "id": 22856,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "3613:11:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3647:8:173"
            },
            "parameters": {
              "id": 22848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3624:2:173"
            },
            "returnParameters": {
              "id": 22852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22856,
                  "src": "3665:7:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3665:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3664:9:173"
            },
            "scope": 23807,
            "src": "3604:95:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18627,
              23834
            ],
            "body": {
              "id": 22867,
              "nodeType": "Block",
              "src": "3847:36:173",
              "statements": [
                {
                  "expression": {
                    "id": 22865,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22701,
                    "src": "3864:12:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22864,
                  "id": 22866,
                  "nodeType": "Return",
                  "src": "3857:19:173"
                }
              ]
            },
            "documentation": {
              "id": 22857,
              "nodeType": "StructuredDocumentation",
              "src": "3705:50:173",
              "text": " @dev See {IERC777-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 22868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3769:11:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22861,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 22859,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18696,
                  "src": "3812:6:173"
                },
                {
                  "id": 22860,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23966,
                  "src": "3820:7:173"
                }
              ],
              "src": "3803:25:173"
            },
            "parameters": {
              "id": 22858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3780:2:173"
            },
            "returnParameters": {
              "id": 22864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22868,
                  "src": "3838:7:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3838:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3837:9:173"
            },
            "scope": 23807,
            "src": "3760:123:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18635,
              23842
            ],
            "body": {
              "id": 22883,
              "nodeType": "Block",
              "src": "4087:46:173",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 22879,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22699,
                      "src": "4104:9:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 22881,
                    "indexExpression": {
                      "id": 22880,
                      "name": "tokenHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22871,
                      "src": "4114:11:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4104:22:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22878,
                  "id": 22882,
                  "nodeType": "Return",
                  "src": "4097:29:173"
                }
              ]
            },
            "documentation": {
              "id": 22869,
              "nodeType": "StructuredDocumentation",
              "src": "3889:89:173",
              "text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
            },
            "functionSelector": "70a08231",
            "id": 22884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3992:9:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22875,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 22873,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18696,
                  "src": "4052:6:173"
                },
                {
                  "id": 22874,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23966,
                  "src": "4060:7:173"
                }
              ],
              "src": "4043:25:173"
            },
            "parameters": {
              "id": 22872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22871,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "4010:11:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22884,
                  "src": "4002:19:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4002:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4001:21:173"
            },
            "returnParameters": {
              "id": 22878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22884,
                  "src": "4078:7:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4078:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4077:9:173"
            },
            "scope": 23807,
            "src": "3983:150:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23852
            ],
            "body": {
              "id": 22905,
              "nodeType": "Block",
              "src": "4385:71:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 22896,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24435,
                          "src": "4401:10:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 22897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4401:12:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22898,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22887,
                        "src": "4415:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22899,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22889,
                        "src": "4426:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22900,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22891,
                        "src": "4434:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4440:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "74727565",
                        "id": 22902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4444:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22895,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23486,
                      "src": "4395:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 22903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4395:54:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22904,
                  "nodeType": "ExpressionStatement",
                  "src": "4395:54:173"
                }
              ]
            },
            "documentation": {
              "id": 22885,
              "nodeType": "StructuredDocumentation",
              "src": "4139:119:173",
              "text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "9bd9bbc6",
            "id": 22906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4272:4:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4376:8:173"
            },
            "parameters": {
              "id": 22892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22887,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4294:9:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22906,
                  "src": "4286:17:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4286:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22889,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4321:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22906,
                  "src": "4313:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22891,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4350:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22906,
                  "src": "4337:17:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22890,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4337:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4276:84:173"
            },
            "returnParameters": {
              "id": 22894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4385:0:173"
            },
            "scope": 23807,
            "src": "4263:193:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18645
            ],
            "body": {
              "id": 22962,
              "nodeType": "Block",
              "src": "4779:347:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22918,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22909,
                          "src": "4797:9:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4818:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4810:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22919,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4810:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4810:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4797:23:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 22924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4822:38:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 22917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4789:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4789:72:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22926,
                  "nodeType": "ExpressionStatement",
                  "src": "4789:72:173"
                },
                {
                  "assignments": [
                    22928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22928,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4880:4:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 22962,
                      "src": "4872:12:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22927,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4872:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22931,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22929,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24435,
                      "src": "4887:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 22930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:12:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4872:27:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22933,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "4928:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22934,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "4934:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22935,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22909,
                        "src": "4940:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22936,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22911,
                        "src": "4951:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 22938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4963:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 22932,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23735,
                      "src": "4910:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 22939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:56:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22940,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:56:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22942,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "4983:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22943,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "4989:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22944,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22909,
                        "src": "4995:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22945,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22911,
                        "src": "5006:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5014:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 22947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5018:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 22941,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23645,
                      "src": "4977:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 22948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4977:44:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22949,
                  "nodeType": "ExpressionStatement",
                  "src": "4977:44:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22951,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "5052:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22952,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "5058:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22953,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22909,
                        "src": "5064:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22954,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22911,
                        "src": "5075:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5083:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 22956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5087:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 22957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5091:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22950,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23793,
                      "src": "5032:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 22958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:65:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22959,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:65:173"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 22960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5115:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 22916,
                  "id": 22961,
                  "nodeType": "Return",
                  "src": "5108:11:173"
                }
              ]
            },
            "documentation": {
              "id": 22907,
              "nodeType": "StructuredDocumentation",
              "src": "4462:220:173",
              "text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
            },
            "functionSelector": "a9059cbb",
            "id": 22963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4696:8:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22913,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4755:8:173"
            },
            "parameters": {
              "id": 22912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22909,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4713:9:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22963,
                  "src": "4705:17:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22911,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4732:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22963,
                  "src": "4724:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4704:35:173"
            },
            "returnParameters": {
              "id": 22916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22915,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22963,
                  "src": "4773:4:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22914,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4772:6:173"
            },
            "scope": 23807,
            "src": "4687:439:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23860
            ],
            "body": {
              "id": 22980,
              "nodeType": "Block",
              "src": "5329:54:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 22973,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24435,
                          "src": "5345:10:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 22974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5345:12:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22975,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22966,
                        "src": "5359:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22976,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22968,
                        "src": "5367:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5373:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 22972,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23579,
                      "src": "5339:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 22978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:37:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22979,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:37:173"
                }
              ]
            },
            "documentation": {
              "id": 22964,
              "nodeType": "StructuredDocumentation",
              "src": "5132:119:173",
              "text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "fe9d9303",
            "id": 22981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5265:4:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22970,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5320:8:173"
            },
            "parameters": {
              "id": 22969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22966,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5278:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22981,
                  "src": "5270:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22968,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5299:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 22981,
                  "src": "5286:17:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5286:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5269:35:173"
            },
            "returnParameters": {
              "id": 22971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5329:0:173"
            },
            "scope": 23807,
            "src": "5256:127:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23870
            ],
            "body": {
              "id": 23014,
              "nodeType": "Block",
              "src": "5552:205:173",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 23006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22992,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22984,
                          "src": "5581:8:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 22993,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22986,
                          "src": "5593:11:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5581:23:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 23004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 22995,
                                "name": "_defaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22722,
                                "src": "5621:17:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 22997,
                              "indexExpression": {
                                "id": 22996,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22984,
                                "src": "5639:8:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5621:27:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 23003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5652:48:173",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 22998,
                                    "name": "_revokedDefaultOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22734,
                                    "src": "5653:24:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 23000,
                                  "indexExpression": {
                                    "id": 22999,
                                    "name": "tokenHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22986,
                                    "src": "5678:11:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5653:37:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 23002,
                                "indexExpression": {
                                  "id": 23001,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22984,
                                  "src": "5691:8:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5653:47:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5621:79:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 23005,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5620:81:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5581:120:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 23007,
                          "name": "_operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22728,
                          "src": "5717:10:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 23009,
                        "indexExpression": {
                          "id": 23008,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22986,
                          "src": "5728:11:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5717:23:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 23011,
                      "indexExpression": {
                        "id": 23010,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22984,
                        "src": "5741:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5717:33:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5581:169:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 22991,
                  "id": 23013,
                  "nodeType": "Return",
                  "src": "5562:188:173"
                }
              ]
            },
            "documentation": {
              "id": 22982,
              "nodeType": "StructuredDocumentation",
              "src": "5389:52:173",
              "text": " @dev See {IERC777-isOperatorFor}."
            },
            "functionSelector": "d95b6371",
            "id": 23015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "5455:13:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22988,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5528:8:173"
            },
            "parameters": {
              "id": 22987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22984,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5477:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23015,
                  "src": "5469:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22986,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "5495:11:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23015,
                  "src": "5487:19:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5468:39:173"
            },
            "returnParameters": {
              "id": 22991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23015,
                  "src": "5546:4:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5546:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5545:6:173"
            },
            "scope": 23807,
            "src": "5446:311:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23876
            ],
            "body": {
              "id": 23059,
              "nodeType": "Block",
              "src": "5893:343:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 23023,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24435,
                            "src": "5911:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 23024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:12:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 23025,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23018,
                          "src": "5927:8:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5911:24:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
                        "id": 23027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5937:38:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        },
                        "value": "ERC777: authorizing self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        }
                      ],
                      "id": 23022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5903:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5903:73:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23029,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:73:173"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 23030,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22722,
                      "src": "5991:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 23032,
                    "indexExpression": {
                      "id": 23031,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23018,
                      "src": "6009:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5991:27:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23051,
                    "nodeType": "Block",
                    "src": "6106:66:173",
                    "statements": [
                      {
                        "expression": {
                          "id": 23049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 23042,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22728,
                                "src": "6120:10:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 23046,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 23043,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24435,
                                  "src": "6131:10:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 23044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6131:12:173",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6120:24:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 23047,
                            "indexExpression": {
                              "id": 23045,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23018,
                              "src": "6145:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6120:34:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 23048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6157:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6120:41:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23050,
                        "nodeType": "ExpressionStatement",
                        "src": "6120:41:173"
                      }
                    ]
                  },
                  "id": 23052,
                  "nodeType": "IfStatement",
                  "src": "5987:185:173",
                  "trueBody": {
                    "id": 23041,
                    "nodeType": "Block",
                    "src": "6020:80:173",
                    "statements": [
                      {
                        "expression": {
                          "id": 23039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6034:55:173",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 23033,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22734,
                                "src": "6041:24:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 23036,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 23034,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24435,
                                  "src": "6066:10:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 23035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6066:12:173",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6041:38:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 23038,
                            "indexExpression": {
                              "id": 23037,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23018,
                              "src": "6080:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6041:48:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23040,
                        "nodeType": "ExpressionStatement",
                        "src": "6034:55:173"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23054,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23018,
                        "src": "6206:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 23055,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24435,
                          "src": "6216:10:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 23056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6216:12:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23053,
                      "name": "AuthorizedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23959,
                      "src": "6187:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 23057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:42:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23058,
                  "nodeType": "EmitStatement",
                  "src": "6182:47:173"
                }
              ]
            },
            "documentation": {
              "id": 23016,
              "nodeType": "StructuredDocumentation",
              "src": "5763:56:173",
              "text": " @dev See {IERC777-authorizeOperator}."
            },
            "functionSelector": "959b8c3f",
            "id": 23060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "5833:17:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23020,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5884:8:173"
            },
            "parameters": {
              "id": 23019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23018,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5859:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23060,
                  "src": "5851:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5851:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5850:18:173"
            },
            "returnParameters": {
              "id": 23021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5893:0:173"
            },
            "scope": 23807,
            "src": "5824:412:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23882
            ],
            "body": {
              "id": 23104,
              "nodeType": "Block",
              "src": "6366:337:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23068,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23063,
                          "src": "6384:8:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 23069,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24435,
                            "src": "6396:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 23070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6396:12:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6384:24:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
                        "id": 23072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6410:35:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        },
                        "value": "ERC777: revoking self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        }
                      ],
                      "id": 23067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6376:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6376:70:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23074,
                  "nodeType": "ExpressionStatement",
                  "src": "6376:70:173"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 23075,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22722,
                      "src": "6461:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 23077,
                    "indexExpression": {
                      "id": 23076,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23063,
                      "src": "6479:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6461:27:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23096,
                    "nodeType": "Block",
                    "src": "6576:66:173",
                    "statements": [
                      {
                        "expression": {
                          "id": 23094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6590:41:173",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 23088,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22728,
                                "src": "6597:10:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 23091,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 23089,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24435,
                                  "src": "6608:10:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 23090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6608:12:173",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6597:24:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 23093,
                            "indexExpression": {
                              "id": 23092,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23063,
                              "src": "6622:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6597:34:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23095,
                        "nodeType": "ExpressionStatement",
                        "src": "6590:41:173"
                      }
                    ]
                  },
                  "id": 23097,
                  "nodeType": "IfStatement",
                  "src": "6457:185:173",
                  "trueBody": {
                    "id": 23087,
                    "nodeType": "Block",
                    "src": "6490:80:173",
                    "statements": [
                      {
                        "expression": {
                          "id": 23085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 23078,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22734,
                                "src": "6504:24:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 23082,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 23079,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24435,
                                  "src": "6529:10:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 23080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6529:12:173",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6504:38:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 23083,
                            "indexExpression": {
                              "id": 23081,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23063,
                              "src": "6543:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6504:48:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 23084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6555:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6504:55:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23086,
                        "nodeType": "ExpressionStatement",
                        "src": "6504:55:173"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23099,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23063,
                        "src": "6673:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 23100,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24435,
                          "src": "6683:10:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 23101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6683:12:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23098,
                      "name": "RevokedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23965,
                      "src": "6657:15:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 23102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6657:39:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23103,
                  "nodeType": "EmitStatement",
                  "src": "6652:44:173"
                }
              ]
            },
            "documentation": {
              "id": 23061,
              "nodeType": "StructuredDocumentation",
              "src": "6242:53:173",
              "text": " @dev See {IERC777-revokeOperator}."
            },
            "functionSelector": "fad8b32a",
            "id": 23105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "6309:14:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23065,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6357:8:173"
            },
            "parameters": {
              "id": 23064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23063,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6332:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23105,
                  "src": "6324:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6323:18:173"
            },
            "returnParameters": {
              "id": 23066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:173"
            },
            "scope": 23807,
            "src": "6300:403:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23889
            ],
            "body": {
              "id": 23115,
              "nodeType": "Block",
              "src": "6853:46:173",
              "statements": [
                {
                  "expression": {
                    "id": 23113,
                    "name": "_defaultOperatorsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22718,
                    "src": "6870:22:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 23112,
                  "id": 23114,
                  "nodeType": "Return",
                  "src": "6863:29:173"
                }
              ]
            },
            "documentation": {
              "id": 23106,
              "nodeType": "StructuredDocumentation",
              "src": "6709:55:173",
              "text": " @dev See {IERC777-defaultOperators}."
            },
            "functionSelector": "06e48538",
            "id": 23116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "6778:16:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23108,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6817:8:173"
            },
            "parameters": {
              "id": 23107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6794:2:173"
            },
            "returnParameters": {
              "id": 23112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23116,
                  "src": "6835:16:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23109,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6835:7:173",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23110,
                    "nodeType": "ArrayTypeName",
                    "src": "6835:9:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6834:18:173"
            },
            "scope": 23807,
            "src": "6769:130:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23903
            ],
            "body": {
              "id": 23149,
              "nodeType": "Block",
              "src": "7207:177:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 23133,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24435,
                              "src": "7239:10:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 23134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7239:12:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23135,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23119,
                            "src": "7253:6:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23132,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23015,
                          "src": "7225:13:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 23136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7225:35:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 23137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7262:46:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 23131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7217:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7217:92:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23139,
                  "nodeType": "ExpressionStatement",
                  "src": "7217:92:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23141,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23119,
                        "src": "7325:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23142,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23121,
                        "src": "7333:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23143,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23123,
                        "src": "7344:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23144,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23125,
                        "src": "7352:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23145,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23127,
                        "src": "7358:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7372:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23140,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23486,
                      "src": "7319:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 23147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:58:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23148,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:58:173"
                }
              ]
            },
            "documentation": {
              "id": 23117,
              "nodeType": "StructuredDocumentation",
              "src": "6905:108:173",
              "text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
            },
            "functionSelector": "62ad1b83",
            "id": 23150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "7027:12:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7198:8:173"
            },
            "parameters": {
              "id": 23128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23119,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7057:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23150,
                  "src": "7049:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23121,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7081:9:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23150,
                  "src": "7073:17:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7073:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23123,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7108:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23150,
                  "src": "7100:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7100:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23125,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7137:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23150,
                  "src": "7124:17:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23124,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7124:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23127,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7164:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23150,
                  "src": "7151:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23126,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7151:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7039:143:173"
            },
            "returnParameters": {
              "id": 23130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7207:0:173"
            },
            "scope": 23807,
            "src": "7018:366:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23915
            ],
            "body": {
              "id": 23179,
              "nodeType": "Block",
              "src": "7668:162:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 23165,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24435,
                              "src": "7700:10:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 23166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7700:12:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23167,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23153,
                            "src": "7714:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23164,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23015,
                          "src": "7686:13:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 23168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7686:36:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 23169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7724:46:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 23163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7678:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7678:93:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23171,
                  "nodeType": "ExpressionStatement",
                  "src": "7678:93:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23173,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23153,
                        "src": "7787:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23174,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23155,
                        "src": "7796:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23175,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23157,
                        "src": "7804:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23176,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23159,
                        "src": "7810:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23172,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23579,
                      "src": "7781:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:42:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23178,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:42:173"
                }
              ]
            },
            "documentation": {
              "id": 23151,
              "nodeType": "StructuredDocumentation",
              "src": "7390:110:173",
              "text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
            },
            "functionSelector": "fc673c4f",
            "id": 23180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "7514:12:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7659:8:173"
            },
            "parameters": {
              "id": 23160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23153,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7544:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "7536:15:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23155,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7569:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "7561:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7561:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23157,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7598:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "7585:17:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23156,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7585:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23159,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7625:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "7612:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23158,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7526:117:173"
            },
            "returnParameters": {
              "id": 23162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7668:0:173"
            },
            "scope": 23807,
            "src": "7505:325:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18655
            ],
            "body": {
              "id": 23197,
              "nodeType": "Block",
              "src": "8168:52:173",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23191,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22740,
                        "src": "8185:11:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 23193,
                      "indexExpression": {
                        "id": 23192,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23183,
                        "src": "8197:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8185:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23195,
                    "indexExpression": {
                      "id": 23194,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23185,
                      "src": "8205:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8185:28:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23190,
                  "id": 23196,
                  "nodeType": "Return",
                  "src": "8178:35:173"
                }
              ]
            },
            "documentation": {
              "id": 23181,
              "nodeType": "StructuredDocumentation",
              "src": "7836:228:173",
              "text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
            },
            "functionSelector": "dd62ed3e",
            "id": 23198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8078:9:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23187,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8141:8:173"
            },
            "parameters": {
              "id": 23186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23183,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8096:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "8088:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8088:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23185,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8112:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "8104:15:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8104:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8087:33:173"
            },
            "returnParameters": {
              "id": 23190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "8159:7:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8159:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8158:9:173"
            },
            "scope": 23807,
            "src": "8069:151:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18665
            ],
            "body": {
              "id": 23222,
              "nodeType": "Block",
              "src": "8446:109:173",
              "statements": [
                {
                  "assignments": [
                    23210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23210,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "8464:6:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23222,
                      "src": "8456:14:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23209,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8456:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23213,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23211,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24435,
                      "src": "8473:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 23212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8473:12:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8456:29:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23215,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23210,
                        "src": "8504:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23216,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23201,
                        "src": "8512:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23217,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23203,
                        "src": "8521:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23214,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23690,
                      "src": "8495:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8495:32:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23219,
                  "nodeType": "ExpressionStatement",
                  "src": "8495:32:173"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 23220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8544:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 23208,
                  "id": 23221,
                  "nodeType": "Return",
                  "src": "8537:11:173"
                }
              ]
            },
            "documentation": {
              "id": 23199,
              "nodeType": "StructuredDocumentation",
              "src": "8226:127:173",
              "text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "functionSelector": "095ea7b3",
            "id": 23223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8367:7:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23205,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8422:8:173"
            },
            "parameters": {
              "id": 23204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23201,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8383:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23223,
                  "src": "8375:15:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8375:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23203,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8400:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23223,
                  "src": "8392:13:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8392:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8374:32:173"
            },
            "returnParameters": {
              "id": 23208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23223,
                  "src": "8440:4:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8440:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8439:6:173"
            },
            "scope": 23807,
            "src": "8358:197:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18677
            ],
            "body": {
              "id": 23314,
              "nodeType": "Block",
              "src": "9071:664:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23237,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23228,
                          "src": "9089:9:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9110:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9102:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23238,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9102:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9102:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9089:23:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 23243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9114:38:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 23236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9081:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9081:72:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23245,
                  "nodeType": "ExpressionStatement",
                  "src": "9081:72:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23247,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23226,
                          "src": "9171:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9189:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9181:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9181:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9181:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9171:20:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 23253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9193:40:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        },
                        "value": "ERC777: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        }
                      ],
                      "id": 23246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9163:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9163:71:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23255,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:71:173"
                },
                {
                  "assignments": [
                    23257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23257,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "9253:7:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23314,
                      "src": "9245:15:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23256,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9245:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23260,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23258,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24435,
                      "src": "9263:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 23259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9263:12:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9245:30:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23262,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23257,
                        "src": "9304:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23263,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23226,
                        "src": "9313:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23264,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23228,
                        "src": "9321:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23265,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23230,
                        "src": "9332:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 23266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9340:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 23267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9344:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 23261,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23735,
                      "src": "9286:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9286:61:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23269,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:61:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23271,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23257,
                        "src": "9364:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23272,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23226,
                        "src": "9373:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23273,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23228,
                        "src": "9381:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23274,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23230,
                        "src": "9392:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 23275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9400:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 23276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9404:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 23270,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23645,
                      "src": "9358:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9358:49:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23278,
                  "nodeType": "ExpressionStatement",
                  "src": "9358:49:173"
                },
                {
                  "assignments": [
                    23280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23280,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "9426:16:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23314,
                      "src": "9418:24:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9418:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23286,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23281,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22740,
                        "src": "9445:11:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 23283,
                      "indexExpression": {
                        "id": 23282,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23226,
                        "src": "9457:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9445:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23285,
                    "indexExpression": {
                      "id": 23284,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23257,
                      "src": "9465:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9445:28:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9418:55:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23288,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23280,
                          "src": "9491:16:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 23289,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23230,
                          "src": "9511:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9491:26:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 23291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9519:43:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        },
                        "value": "ERC777: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 23287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9483:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9483:80:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23293,
                  "nodeType": "ExpressionStatement",
                  "src": "9483:80:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23295,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23226,
                        "src": "9582:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23296,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23257,
                        "src": "9590:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23297,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23280,
                          "src": "9599:16:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 23298,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23230,
                          "src": "9618:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9599:25:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23294,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23690,
                      "src": "9573:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9573:52:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23301,
                  "nodeType": "ExpressionStatement",
                  "src": "9573:52:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23303,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23257,
                        "src": "9656:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23304,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23226,
                        "src": "9665:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23305,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23228,
                        "src": "9673:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23306,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23230,
                        "src": "9684:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 23307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9692:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 23308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9696:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 23309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9700:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23302,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23793,
                      "src": "9636:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 23310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9636:70:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23311,
                  "nodeType": "ExpressionStatement",
                  "src": "9636:70:173"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 23312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9724:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 23235,
                  "id": 23313,
                  "nodeType": "Return",
                  "src": "9717:11:173"
                }
              ]
            },
            "documentation": {
              "id": 23224,
              "nodeType": "StructuredDocumentation",
              "src": "8561:363:173",
              "text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
            },
            "functionSelector": "23b872dd",
            "id": 23315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8938:12:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9047:8:173"
            },
            "parameters": {
              "id": 23231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23226,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8968:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23315,
                  "src": "8960:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23228,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8992:9:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23315,
                  "src": "8984:17:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8984:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23230,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9019:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23315,
                  "src": "9011:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9011:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8950:81:173"
            },
            "returnParameters": {
              "id": 23235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23315,
                  "src": "9065:4:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9065:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9064:6:173"
            },
            "scope": 23807,
            "src": "8929:806:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23335,
              "nodeType": "Block",
              "src": "10458:69:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23328,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23318,
                        "src": "10474:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23329,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23320,
                        "src": "10483:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23330,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23322,
                        "src": "10491:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23331,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23324,
                        "src": "10501:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10515:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23327,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23336,
                        23416
                      ],
                      "referencedDeclaration": 23416,
                      "src": "10468:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 23333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10468:52:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23334,
                  "nodeType": "ExpressionStatement",
                  "src": "10468:52:173"
                }
              ]
            },
            "documentation": {
              "id": 23316,
              "nodeType": "StructuredDocumentation",
              "src": "9741:559:173",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 23336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10314:5:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23318,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10337:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23336,
                  "src": "10329:15:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10329:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23320,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10362:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23336,
                  "src": "10354:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10354:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23322,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "10391:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23336,
                  "src": "10378:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23321,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10378:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23324,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10422:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23336,
                  "src": "10409:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23323,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10409:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10319:121:173"
            },
            "returnParameters": {
              "id": 23326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10458:0:173"
            },
            "scope": 23807,
            "src": "10305:222:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23415,
              "nodeType": "Block",
              "src": "11336:539:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23351,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23339,
                          "src": "11354:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11373:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11365:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23352,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11365:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11365:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11354:21:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 23357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11377:34:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        },
                        "value": "ERC777: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        }
                      ],
                      "id": 23350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11346:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11346:66:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23359,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:66:173"
                },
                {
                  "assignments": [
                    23361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23361,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11431:8:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23415,
                      "src": "11423:16:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23360,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11423:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23364,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23362,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24435,
                      "src": "11442:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 23363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11442:12:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11423:31:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23366,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23361,
                        "src": "11486:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11504:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11496:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11496:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11496:10:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23371,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23339,
                        "src": "11508:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23372,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23341,
                        "src": "11517:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23365,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23806,
                      "src": "11465:20:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 23373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11465:59:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23374,
                  "nodeType": "ExpressionStatement",
                  "src": "11465:59:173"
                },
                {
                  "expression": {
                    "id": 23377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23375,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22701,
                      "src": "11569:12:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 23376,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23341,
                      "src": "11585:6:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11569:22:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23378,
                  "nodeType": "ExpressionStatement",
                  "src": "11569:22:173"
                },
                {
                  "expression": {
                    "id": 23383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23379,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22699,
                        "src": "11601:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23381,
                      "indexExpression": {
                        "id": 23380,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23339,
                        "src": "11611:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11601:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 23382,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23341,
                      "src": "11623:6:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11601:28:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23384,
                  "nodeType": "ExpressionStatement",
                  "src": "11601:28:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23386,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23361,
                        "src": "11660:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11678:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11670:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11670:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11670:10:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23391,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23339,
                        "src": "11682:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23341,
                        "src": "11691:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23393,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23343,
                        "src": "11699:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23394,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23345,
                        "src": "11709:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23395,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23347,
                        "src": "11723:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23385,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23793,
                      "src": "11640:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 23396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11640:103:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23397,
                  "nodeType": "ExpressionStatement",
                  "src": "11640:103:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23399,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23361,
                        "src": "11766:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23400,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23339,
                        "src": "11776:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23401,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23341,
                        "src": "11785:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23402,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23343,
                        "src": "11793:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23403,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23345,
                        "src": "11803:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23398,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23941,
                      "src": "11759:6:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11759:57:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23405,
                  "nodeType": "EmitStatement",
                  "src": "11754:62:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11848:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11840:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23407,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11840:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11840:10:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23411,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23339,
                        "src": "11852:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23412,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23341,
                        "src": "11861:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23406,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18686,
                      "src": "11831:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11831:37:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23414,
                  "nodeType": "EmitStatement",
                  "src": "11826:42:173"
                }
              ]
            },
            "documentation": {
              "id": 23337,
              "nodeType": "StructuredDocumentation",
              "src": "10533:611:173",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 23416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "11158:5:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23339,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11181:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23416,
                  "src": "11173:15:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11173:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23341,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11206:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23416,
                  "src": "11198:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11198:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23343,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "11235:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23416,
                  "src": "11222:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23342,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11222:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23345,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11266:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23416,
                  "src": "11253:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23344,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11253:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23347,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "11293:19:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23416,
                  "src": "11288:24:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11288:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11163:155:173"
            },
            "returnParameters": {
              "id": 23349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11336:0:173"
            },
            "scope": 23807,
            "src": "11149:726:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23485,
              "nodeType": "Block",
              "src": "12555:446:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23433,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23419,
                          "src": "12573:4:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12589:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12581:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12581:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12581:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12573:18:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
                        "id": 23439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12593:36:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        },
                        "value": "ERC777: send from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        }
                      ],
                      "id": 23432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12565:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12565:65:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23441,
                  "nodeType": "ExpressionStatement",
                  "src": "12565:65:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23443,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23421,
                          "src": "12648:2:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12662:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12654:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23444,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12654:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12654:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12648:16:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
                        "id": 23449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12666:34:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        },
                        "value": "ERC777: send to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        }
                      ],
                      "id": 23442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12640:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12640:61:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23451,
                  "nodeType": "ExpressionStatement",
                  "src": "12640:61:173"
                },
                {
                  "assignments": [
                    23453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23453,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12720:8:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23485,
                      "src": "12712:16:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12712:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23456,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23454,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24435,
                      "src": "12731:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 23455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:12:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12712:31:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23458,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23453,
                        "src": "12772:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23459,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "12782:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23421,
                        "src": "12788:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23461,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23423,
                        "src": "12792:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23462,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23425,
                        "src": "12800:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23463,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23427,
                        "src": "12810:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23457,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23735,
                      "src": "12754:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12754:69:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23465,
                  "nodeType": "ExpressionStatement",
                  "src": "12754:69:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23467,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23453,
                        "src": "12840:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23468,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "12850:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23469,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23421,
                        "src": "12856:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23470,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23423,
                        "src": "12860:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23471,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23425,
                        "src": "12868:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23472,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23427,
                        "src": "12878:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23466,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23645,
                      "src": "12834:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12834:57:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23474,
                  "nodeType": "ExpressionStatement",
                  "src": "12834:57:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23476,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23453,
                        "src": "12922:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23477,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "12932:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23478,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23421,
                        "src": "12938:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23479,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23423,
                        "src": "12942:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23480,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23425,
                        "src": "12950:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23481,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23427,
                        "src": "12960:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23482,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23429,
                        "src": "12974:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23475,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23793,
                      "src": "12902:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 23483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12902:92:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23484,
                  "nodeType": "ExpressionStatement",
                  "src": "12902:92:173"
                }
              ]
            },
            "documentation": {
              "id": 23417,
              "nodeType": "StructuredDocumentation",
              "src": "11881:465:173",
              "text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 23486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_send",
            "nameLocation": "12360:5:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12383:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23486,
                  "src": "12375:12:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12375:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12405:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23486,
                  "src": "12397:10:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12397:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23423,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12425:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23486,
                  "src": "12417:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12417:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23425,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12454:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23486,
                  "src": "12441:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12441:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23427,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12485:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23486,
                  "src": "12472:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23426,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12472:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23429,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "12512:19:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23486,
                  "src": "12507:24:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12507:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12365:172:173"
            },
            "returnParameters": {
              "id": 23431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12555:0:173"
            },
            "scope": 23807,
            "src": "12351:650:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23578,
              "nodeType": "Block",
              "src": "13452:665:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23499,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23489,
                          "src": "13470:4:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13486:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13478:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23500,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13478:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13478:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13470:18:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 23505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13490:36:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        },
                        "value": "ERC777: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        }
                      ],
                      "id": 23498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13462:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13462:65:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23507,
                  "nodeType": "ExpressionStatement",
                  "src": "13462:65:173"
                },
                {
                  "assignments": [
                    23509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23509,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "13546:8:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23578,
                      "src": "13538:16:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23508,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13538:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23512,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23510,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24435,
                      "src": "13557:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 23511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13557:12:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13538:31:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23514,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23509,
                        "src": "13598:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23515,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23489,
                        "src": "13608:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13622:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13614:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23516,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13614:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13614:10:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23520,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23491,
                        "src": "13626:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23521,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23493,
                        "src": "13634:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23522,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23495,
                        "src": "13640:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23513,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23735,
                      "src": "13580:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13580:73:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23524,
                  "nodeType": "ExpressionStatement",
                  "src": "13580:73:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23526,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23509,
                        "src": "13685:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23527,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23489,
                        "src": "13695:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13709:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13701:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23528,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13701:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13701:10:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23532,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23491,
                        "src": "13713:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23525,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23806,
                      "src": "13664:20:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 23533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13664:56:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23534,
                  "nodeType": "ExpressionStatement",
                  "src": "13664:56:173"
                },
                {
                  "assignments": [
                    23536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23536,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13773:11:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23578,
                      "src": "13765:19:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23535,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13765:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23540,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23537,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22699,
                      "src": "13787:9:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23539,
                    "indexExpression": {
                      "id": 23538,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23489,
                      "src": "13797:4:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13787:15:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13765:37:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23542,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23536,
                          "src": "13820:11:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 23543,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23491,
                          "src": "13835:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13820:21:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 23545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13843:37:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        },
                        "value": "ERC777: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        }
                      ],
                      "id": 23541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13812:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13812:69:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23547,
                  "nodeType": "ExpressionStatement",
                  "src": "13812:69:173"
                },
                {
                  "id": 23556,
                  "nodeType": "UncheckedBlock",
                  "src": "13891:73:173",
                  "statements": [
                    {
                      "expression": {
                        "id": 23554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 23548,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22699,
                            "src": "13915:9:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 23550,
                          "indexExpression": {
                            "id": 23549,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23489,
                            "src": "13925:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13915:15:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23551,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23536,
                            "src": "13933:11:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 23552,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23491,
                            "src": "13947:6:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13933:20:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13915:38:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 23555,
                      "nodeType": "ExpressionStatement",
                      "src": "13915:38:173"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 23559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23557,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22701,
                      "src": "13973:12:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 23558,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23491,
                      "src": "13989:6:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13973:22:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23560,
                  "nodeType": "ExpressionStatement",
                  "src": "13973:22:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23562,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23509,
                        "src": "14018:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23563,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23489,
                        "src": "14028:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23564,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23491,
                        "src": "14034:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23565,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23493,
                        "src": "14042:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23566,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23495,
                        "src": "14048:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23561,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23953,
                      "src": "14011:6:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14011:50:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23568,
                  "nodeType": "EmitStatement",
                  "src": "14006:55:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23570,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23489,
                        "src": "14085:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14099:1:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14091:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23571,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14091:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14091:10:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23575,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23491,
                        "src": "14103:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23569,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18686,
                      "src": "14076:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14076:34:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23577,
                  "nodeType": "EmitStatement",
                  "src": "14071:39:173"
                }
              ]
            },
            "documentation": {
              "id": 23487,
              "nodeType": "StructuredDocumentation",
              "src": "13007:294:173",
              "text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 23579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13315:5:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23489,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13338:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23579,
                  "src": "13330:12:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13330:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23491,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13360:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23579,
                  "src": "13352:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13352:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23493,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13389:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23579,
                  "src": "13376:17:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23492,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13376:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23495,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "13416:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23579,
                  "src": "13403:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23494,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13403:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13320:114:173"
            },
            "returnParameters": {
              "id": 23497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13452:0:173"
            },
            "scope": 23807,
            "src": "13306:811:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23644,
              "nodeType": "Block",
              "src": "14310:424:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23595,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23581,
                        "src": "14341:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23596,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23583,
                        "src": "14351:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23597,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23585,
                        "src": "14357:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23598,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23587,
                        "src": "14361:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23594,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23806,
                      "src": "14320:20:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14320:48:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "14320:48:173"
                },
                {
                  "assignments": [
                    23602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23602,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "14387:11:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23644,
                      "src": "14379:19:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23601,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14379:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23606,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23603,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22699,
                      "src": "14401:9:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23605,
                    "indexExpression": {
                      "id": 23604,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23583,
                      "src": "14411:4:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14401:15:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14379:37:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23608,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23602,
                          "src": "14434:11:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 23609,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23587,
                          "src": "14449:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14434:21:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 23611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14457:41:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        },
                        "value": "ERC777: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 23607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14426:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14426:73:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23613,
                  "nodeType": "ExpressionStatement",
                  "src": "14426:73:173"
                },
                {
                  "id": 23622,
                  "nodeType": "UncheckedBlock",
                  "src": "14509:73:173",
                  "statements": [
                    {
                      "expression": {
                        "id": 23620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 23614,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22699,
                            "src": "14533:9:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 23616,
                          "indexExpression": {
                            "id": 23615,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23583,
                            "src": "14543:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "14533:15:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23617,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23602,
                            "src": "14551:11:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 23618,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23587,
                            "src": "14565:6:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14551:20:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14533:38:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 23621,
                      "nodeType": "ExpressionStatement",
                      "src": "14533:38:173"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 23627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23623,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22699,
                        "src": "14591:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23625,
                      "indexExpression": {
                        "id": 23624,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23585,
                        "src": "14601:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14591:13:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 23626,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23587,
                      "src": "14608:6:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14591:23:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23628,
                  "nodeType": "ExpressionStatement",
                  "src": "14591:23:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23630,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23581,
                        "src": "14635:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23631,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23583,
                        "src": "14645:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23632,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23585,
                        "src": "14651:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23633,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23587,
                        "src": "14655:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23634,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23589,
                        "src": "14663:8:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 23635,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23591,
                        "src": "14673:12:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23629,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23929,
                      "src": "14630:4:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 23636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14630:56:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23637,
                  "nodeType": "EmitStatement",
                  "src": "14625:61:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23639,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23583,
                        "src": "14710:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23640,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23585,
                        "src": "14716:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23641,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23587,
                        "src": "14720:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23638,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18686,
                      "src": "14701:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14701:26:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23643,
                  "nodeType": "EmitStatement",
                  "src": "14696:31:173"
                }
              ]
            },
            "id": 23645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_move",
            "nameLocation": "14132:5:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23581,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14155:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23645,
                  "src": "14147:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14147:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23583,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14181:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23645,
                  "src": "14173:12:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14173:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23585,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14203:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23645,
                  "src": "14195:10:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14195:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23587,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14223:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23645,
                  "src": "14215:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14215:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23589,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "14252:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23645,
                  "src": "14239:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23588,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14239:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23591,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "14283:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23645,
                  "src": "14270:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23590,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14270:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14137:164:173"
            },
            "returnParameters": {
              "id": 23593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14310:0:173"
            },
            "scope": 23807,
            "src": "14123:611:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23689,
              "nodeType": "Block",
              "src": "14977:260:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23656,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23648,
                          "src": "14995:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15013:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15005:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23657,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15005:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15005:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14995:20:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 23662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15017:39:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        },
                        "value": "ERC777: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        }
                      ],
                      "id": 23655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14987:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14987:70:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23664,
                  "nodeType": "ExpressionStatement",
                  "src": "14987:70:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23666,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23650,
                          "src": "15075:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15094:1:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15086:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15086:7:173",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15086:10:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15075:21:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 23672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15098:37:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        },
                        "value": "ERC777: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        }
                      ],
                      "id": 23665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15067:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15067:69:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23674,
                  "nodeType": "ExpressionStatement",
                  "src": "15067:69:173"
                },
                {
                  "expression": {
                    "id": 23681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 23675,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22740,
                          "src": "15147:11:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 23678,
                        "indexExpression": {
                          "id": 23676,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23648,
                          "src": "15159:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15147:19:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23679,
                      "indexExpression": {
                        "id": 23677,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23650,
                        "src": "15167:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15147:28:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23680,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23652,
                      "src": "15178:5:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15147:36:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23682,
                  "nodeType": "ExpressionStatement",
                  "src": "15147:36:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23684,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23648,
                        "src": "15207:6:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23685,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23650,
                        "src": "15215:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23686,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23652,
                        "src": "15224:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23683,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18695,
                      "src": "15198:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15198:32:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23688,
                  "nodeType": "EmitStatement",
                  "src": "15193:37:173"
                }
              ]
            },
            "documentation": {
              "id": 23646,
              "nodeType": "StructuredDocumentation",
              "src": "14740:127:173",
              "text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "id": 23690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14881:8:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23648,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "14907:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23690,
                  "src": "14899:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14899:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23650,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14931:7:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23690,
                  "src": "14923:15:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14923:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23652,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14956:5:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23690,
                  "src": "14948:13:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14948:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14889:78:173"
            },
            "returnParameters": {
              "id": 23654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14977:0:173"
            },
            "scope": 23807,
            "src": "14872:365:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23734,
              "nodeType": "Block",
              "src": "15909:273:173",
              "statements": [
                {
                  "assignments": [
                    23707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23707,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "15927:11:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23734,
                      "src": "15919:19:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23706,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15919:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23713,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23710,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23695,
                        "src": "15983:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23711,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22710,
                        "src": "15989:29:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 23708,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22695,
                        "src": "15941:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 23709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26584,
                      "src": "15941:41:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 23712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15941:78:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15919:100:173"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23714,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23707,
                      "src": "16033:11:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 23717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16056:1:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16048:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16048:7:173",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16048:10:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16033:25:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23733,
                  "nodeType": "IfStatement",
                  "src": "16029:147:173",
                  "trueBody": {
                    "id": 23732,
                    "nodeType": "Block",
                    "src": "16060:116:173",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23724,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23693,
                              "src": "16114:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23725,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23695,
                              "src": "16124:4:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23726,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23697,
                              "src": "16130:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23727,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23699,
                              "src": "16134:6:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23728,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23701,
                              "src": "16142:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 23729,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23703,
                              "src": "16152:12:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 23721,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23707,
                                  "src": "16088:11:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23720,
                                "name": "IERC777Sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24006,
                                "src": "16074:13:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Sender_$24006_$",
                                  "typeString": "type(contract IERC777Sender)"
                                }
                              },
                              "id": 23722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16074:26:173",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Sender_$24006",
                                "typeString": "contract IERC777Sender"
                              }
                            },
                            "id": 23723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensToSend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24005,
                            "src": "16074:39:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 23730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16074:91:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23731,
                        "nodeType": "ExpressionStatement",
                        "src": "16074:91:173"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23691,
              "nodeType": "StructuredDocumentation",
              "src": "15243:462:173",
              "text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 23735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nameLocation": "15719:17:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23693,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15754:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23735,
                  "src": "15746:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15746:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23695,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15780:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23735,
                  "src": "15772:12:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15772:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23697,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15802:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23735,
                  "src": "15794:10:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15794:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23699,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15822:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23735,
                  "src": "15814:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15814:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23701,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15851:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23735,
                  "src": "15838:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15838:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23703,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "15882:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23735,
                  "src": "15869:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23702,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15869:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15736:164:173"
            },
            "returnParameters": {
              "id": 23705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15909:0:173"
            },
            "scope": 23807,
            "src": "15710:472:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23792,
              "nodeType": "Block",
              "src": "17106:441:173",
              "statements": [
                {
                  "assignments": [
                    23754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23754,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "17124:11:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 23792,
                      "src": "17116:19:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23753,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17116:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23760,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23757,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23742,
                        "src": "17180:2:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23758,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22715,
                        "src": "17184:32:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 23755,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22695,
                        "src": "17138:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 23756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26584,
                      "src": "17138:41:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 23759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17138:79:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17116:101:173"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23761,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23754,
                      "src": "17231:11:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 23764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17254:1:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17246:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17246:7:173",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17246:10:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17231:25:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 23780,
                      "name": "requireReceptionAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23750,
                      "src": "17389:19:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 23790,
                    "nodeType": "IfStatement",
                    "src": "17385:156:173",
                    "trueBody": {
                      "id": 23789,
                      "nodeType": "Block",
                      "src": "17410:131:173",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 23785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17432:16:173",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 23782,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23742,
                                      "src": "17433:2:173",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 23783,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24061,
                                    "src": "17433:13:173",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 23784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17433:15:173",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
                                "id": 23786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17450:79:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                },
                                "value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                }
                              ],
                              "id": 23781,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "17424:7:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 23787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17424:106:173",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 23788,
                          "nodeType": "ExpressionStatement",
                          "src": "17424:106:173"
                        }
                      ]
                    }
                  },
                  "id": 23791,
                  "nodeType": "IfStatement",
                  "src": "17227:314:173",
                  "trueBody": {
                    "id": 23779,
                    "nodeType": "Block",
                    "src": "17258:121:173",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23771,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23738,
                              "src": "17317:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23772,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23740,
                              "src": "17327:4:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23773,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23742,
                              "src": "17333:2:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23774,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23744,
                              "src": "17337:6:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23775,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23746,
                              "src": "17345:8:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 23776,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23748,
                              "src": "17355:12:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 23768,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23754,
                                  "src": "17289:11:173",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23767,
                                "name": "IERC777Recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23986,
                                "src": "17272:16:173",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$23986_$",
                                  "typeString": "type(contract IERC777Recipient)"
                                }
                              },
                              "id": 23769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17272:29:173",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Recipient_$23986",
                                "typeString": "contract IERC777Recipient"
                              }
                            },
                            "id": 23770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23985,
                            "src": "17272:44:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 23777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17272:96:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23778,
                        "nodeType": "ExpressionStatement",
                        "src": "17272:96:173"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23736,
              "nodeType": "StructuredDocumentation",
              "src": "16188:678:173",
              "text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 23793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensReceived",
            "nameLocation": "16880:19:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23738,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16917:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "16909:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16909:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23740,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16943:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "16935:12:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16935:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23742,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16965:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "16957:10:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16957:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23744,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16985:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "16977:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16977:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23746,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "17014:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "17001:21:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23745,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17001:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23748,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "17045:12:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "17032:25:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23747,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17032:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23750,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "17072:19:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23793,
                  "src": "17067:24:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23749,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17067:4:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16899:198:173"
            },
            "returnParameters": {
              "id": 23752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17106:0:173"
            },
            "scope": 23807,
            "src": "16871:676:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23805,
              "nodeType": "Block",
              "src": "18320:2:173",
              "statements": []
            },
            "documentation": {
              "id": 23794,
              "nodeType": "StructuredDocumentation",
              "src": "17553:617:173",
              "text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 23806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "18184:20:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23796,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18222:8:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23806,
                  "src": "18214:16:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18214:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23798,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18248:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23806,
                  "src": "18240:12:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18240:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23800,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18270:2:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23806,
                  "src": "18262:10:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18262:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23802,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18290:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 23806,
                  "src": "18282:14:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18282:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18204:98:173"
            },
            "returnParameters": {
              "id": 23804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18320:0:173"
            },
            "scope": 23807,
            "src": "18175:147:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 23808,
        "src": "1073:17251:173",
        "usedErrors": []
      }
    ],
    "src": "92:18233:173"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001d6938038062001d698339810160408190526200003491620003a8565b82516200004990600290602086019062000215565b5081516200005f90600390602085019062000215565b50805162000075906004906020840190620002a4565b5060005b8151811015620000e5576001600560008484815181106200009e576200009e6200055e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000dc8162000534565b91505062000079565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016057600080fd5b505af115801562000175573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001f357600080fd5b505af115801562000208573d6000803e3d6000fd5b505050505050506200058a565b8280546200022390620004f7565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002fc565b5090565b82805482825590600052602060002090810192821562000292579160200282015b828111156200029257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002c5565b5b80821115620002a05760008155600101620002fd565b600082601f8301126200032557600080fd5b81516001600160401b0381111562000341576200034162000574565b602062000357601f8301601f19168201620004c4565b82815285828487010111156200036c57600080fd5b60005b838110156200038c5785810183015182820184015282016200036f565b838111156200039e5760008385840101525b5095945050505050565b600080600060608486031215620003be57600080fd5b83516001600160401b0380821115620003d657600080fd5b620003e48783880162000313565b9450602091508186015181811115620003fc57600080fd5b6200040a8882890162000313565b9450506040860151818111156200042057600080fd5b8601601f810188136200043257600080fd5b80518281111562000447576200044762000574565b8060051b92506200045a848401620004c4565b8181528481019083860185850187018c10156200047657600080fd5b600095508594505b83851015620004b35780516001600160a01b03811681146200049e578687fd5b8352600194909401939186019186016200047e565b508096505050505050509250925092565b604051601f8201601f191681016001600160401b0381118282101715620004ef57620004ef62000574565b604052919050565b600181811c908216806200050c57607f821691505b602082108114156200052e57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200055757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6117cf806200059a6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906115c6565b60405180910390f35b610141610312565b6040516101309190611613565b61016161015c3660046113d3565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112ff565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba366004611340565b61057c565b005b6101756101cf36600461128c565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f836600461128c565b6105b8565b6101416106d6565b6101bf6102133660046113ff565b6106e5565b6101616102263660046113d3565b610708565b6101616102393660046112c6565b6107bb565b61017561024c3660046112c6565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf61028536600461128c565b61085d565b6101bf610298366004611458565b610979565b6101bf6102ab3660046114d8565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b6060600280546103219061171a565b80601f016020809104026020016040519081016040528092919081815260200182805461034d9061171a565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db90611626565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c2e565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d8785611703565b6109d0565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d94565b50600195945050505050565b61058633866107bb565b6105a25760405162461bcd60e51b81526004016103db9061166a565b6105b185858585856001610f68565b5050505050565b336001600160a01b038216141561061d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6060600380546103219061171a565b61070333848484604051806020016040528060008152506001610f68565b505050565b60006001600160a01b0383166107305760405162461bcd60e51b81526004016103db90611626565b6000339050610761818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078d818286866040518060200160405280600081525060405180602001604052806000815250610c2e565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d94565b6000816001600160a01b0316836001600160a01b0316148061082657506001600160a01b03831660009081526005602052604090205460ff16801561082657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bb565b61099f5760405162461bcd60e51b81526004016103db9061166a565b6109ab8484848461104b565b50505050565b6109cc3383836040518060200160405280600081525061104b565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906112a9565b90506001600160a01b03811615610c2557604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610bf2908a908a908a908a908a908a9060040161156c565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610ca75760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610cde9084906116eb565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d36939291906116b6565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d8391815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610e1057600080fd5b505afa158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4891906112a9565b90506001600160a01b03811615610ec4576040516223de2960e01b81526001600160a01b038216906223de2990610e8d908b908b908b908b908b908b9060040161156c565b600060405180830381600087803b158015610ea757600080fd5b505af1158015610ebb573d6000803e3d6000fd5b50505050610f5e565b8115610f5e576001600160a01b0386163b15610f5e5760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fc95760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b03851661101f5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b3361102e818888888888610af7565b61103c818888888888610c2e565b610c2581888888888888610d94565b6001600160a01b0384166110ac5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b336110bc81866000878787610af7565b6001600160a01b038516600090815260208190526040902054848110156111315760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611160908490611703565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516111ae939291906116b6565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b600082601f83011261121057600080fd5b813567ffffffffffffffff8082111561122b5761122b61176b565b604051601f8301601f19908116603f011681019082821181831017156112535761125361176b565b8160405283815286602085880101111561126c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561129e57600080fd5b813561085681611781565b6000602082840312156112bb57600080fd5b815161085681611781565b600080604083850312156112d957600080fd5b82356112e481611781565b915060208301356112f481611781565b809150509250929050565b60008060006060848603121561131457600080fd5b833561131f81611781565b9250602084013561132f81611781565b929592945050506040919091013590565b600080600080600060a0868803121561135857600080fd5b853561136381611781565b9450602086013561137381611781565b935060408601359250606086013567ffffffffffffffff8082111561139757600080fd5b6113a389838a016111ff565b935060808801359150808211156113b957600080fd5b506113c6888289016111ff565b9150509295509295909350565b600080604083850312156113e657600080fd5b82356113f181611781565b946020939093013593505050565b60008060006060848603121561141457600080fd5b833561141f81611781565b925060208401359150604084013567ffffffffffffffff81111561144257600080fd5b61144e868287016111ff565b9150509250925092565b6000806000806080858703121561146e57600080fd5b843561147981611781565b935060208501359250604085013567ffffffffffffffff8082111561149d57600080fd5b6114a9888389016111ff565b935060608701359150808211156114bf57600080fd5b506114cc878288016111ff565b91505092959194509250565b600080604083850312156114eb57600080fd5b82359150602083013567ffffffffffffffff81111561150957600080fd5b611515858286016111ff565b9150509250929050565b6000815180845260005b8181101561154557602081850181015186830182015201611529565b81811115611557576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906115a79083018561151f565b82810360a08401526115b9818561151f565b9998505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156116075783516001600160a01b0316835292840192918401916001016115e2565b50909695505050505050565b602081526000610856602083018461151f565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b8381526060602082015260006116cf606083018561151f565b82810360408401526116e1818561151f565b9695505050505050565b600082198211156116fe576116fe611755565b500190565b60008282101561171557611715611755565b500390565b600181811c9082168061172e57607f821691505b6020821081141561174f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461179657600080fd5b5056fea2646970667358221220b7bec755eeb4b879015650c09a5c8a508c89f8cefb7bdf0df3ccf91eaa7ccafb64736f6c63430008060033",
  "bytecodeSha1": "e4b5f887e2147bdbc073dfcf769b9d0d197791b9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "ERC777",
  "coverageMap": {
    "branches": {
      "146": {},
      "173": {
        "ERC777._approve": {
          "73": [
            14995,
            15015,
            true
          ],
          "74": [
            15075,
            15096,
            true
          ]
        },
        "ERC777._burn": {
          "81": [
            13470,
            13488,
            true
          ],
          "82": [
            13820,
            13841,
            true
          ]
        },
        "ERC777._callTokensReceived": {
          "77": [
            17231,
            17256,
            false
          ],
          "78": [
            17389,
            17408,
            false
          ]
        },
        "ERC777._callTokensToSend": {
          "75": [
            16033,
            16058,
            false
          ]
        },
        "ERC777._move": {
          "76": [
            14434,
            14455,
            true
          ]
        },
        "ERC777._send": {
          "79": [
            12573,
            12591,
            true
          ],
          "80": [
            12648,
            12664,
            true
          ]
        },
        "ERC777.authorizeOperator": {
          "67": [
            5911,
            5935,
            true
          ],
          "68": [
            5991,
            6018,
            false
          ]
        },
        "ERC777.operatorBurn": {
          "72": [
            7686,
            7722,
            true
          ]
        },
        "ERC777.operatorSend": {
          "66": [
            7225,
            7260,
            true
          ]
        },
        "ERC777.revokeOperator": {
          "70": [
            6384,
            6408,
            true
          ],
          "71": [
            6461,
            6488,
            false
          ]
        },
        "ERC777.transfer": {
          "69": [
            4797,
            4820,
            true
          ]
        },
        "ERC777.transferFrom": {
          "63": [
            9089,
            9112,
            true
          ],
          "64": [
            9171,
            9191,
            true
          ],
          "65": [
            9491,
            9517,
            true
          ]
        }
      },
      "174": {},
      "175": {},
      "176": {},
      "178": {},
      "180": {},
      "200": {}
    },
    "statements": {
      "146": {},
      "173": {
        "ERC777._approve": {
          "38": [
            14987,
            15057
          ],
          "39": [
            15067,
            15136
          ],
          "40": [
            15147,
            15183
          ],
          "41": [
            15193,
            15230
          ]
        },
        "ERC777._burn": {
          "56": [
            13462,
            13527
          ],
          "57": [
            13580,
            13653
          ],
          "58": [
            13812,
            13881
          ],
          "59": [
            13915,
            13953
          ],
          "60": [
            13973,
            13995
          ],
          "61": [
            14006,
            14061
          ],
          "62": [
            14071,
            14110
          ]
        },
        "ERC777._callTokensReceived": {
          "48": [
            17272,
            17368
          ],
          "49": [
            17424,
            17530
          ]
        },
        "ERC777._callTokensToSend": {
          "42": [
            16074,
            16165
          ]
        },
        "ERC777._move": {
          "43": [
            14426,
            14499
          ],
          "44": [
            14533,
            14571
          ],
          "45": [
            14591,
            14614
          ],
          "46": [
            14625,
            14686
          ],
          "47": [
            14696,
            14727
          ]
        },
        "ERC777._send": {
          "51": [
            12565,
            12630
          ],
          "52": [
            12640,
            12701
          ],
          "53": [
            12754,
            12823
          ],
          "54": [
            12834,
            12891
          ],
          "55": [
            12902,
            12994
          ]
        },
        "ERC777.allowance": {
          "4": [
            8178,
            8213
          ]
        },
        "ERC777.approve": {
          "8": [
            8495,
            8527
          ],
          "9": [
            8537,
            8548
          ]
        },
        "ERC777.authorizeOperator": {
          "20": [
            5903,
            5976
          ],
          "21": [
            6034,
            6089
          ],
          "22": [
            6120,
            6161
          ],
          "23": [
            6182,
            6229
          ]
        },
        "ERC777.balanceOf": {
          "3": [
            4097,
            4126
          ]
        },
        "ERC777.burn": {
          "37": [
            5339,
            5376
          ]
        },
        "ERC777.decimals": {
          "1": [
            3473,
            3482
          ]
        },
        "ERC777.defaultOperators": {
          "5": [
            6863,
            6892
          ]
        },
        "ERC777.granularity": {
          "2": [
            3684,
            3692
          ]
        },
        "ERC777.isOperatorFor": {
          "30": [
            5562,
            5750
          ]
        },
        "ERC777.name": {
          "6": [
            3046,
            3058
          ]
        },
        "ERC777.operatorBurn": {
          "35": [
            7678,
            7771
          ],
          "36": [
            7781,
            7823
          ]
        },
        "ERC777.operatorSend": {
          "18": [
            7217,
            7309
          ],
          "19": [
            7319,
            7377
          ]
        },
        "ERC777.revokeOperator": {
          "31": [
            6376,
            6446
          ],
          "32": [
            6504,
            6559
          ],
          "33": [
            6590,
            6631
          ],
          "34": [
            6652,
            6696
          ]
        },
        "ERC777.send": {
          "25": [
            4395,
            4449
          ]
        },
        "ERC777.symbol": {
          "24": [
            3202,
            3216
          ]
        },
        "ERC777.totalSupply": {
          "0": [
            3857,
            3876
          ]
        },
        "ERC777.transfer": {
          "26": [
            4789,
            4861
          ],
          "27": [
            4910,
            4966
          ],
          "28": [
            4977,
            5021
          ],
          "29": [
            5032,
            5097
          ]
        },
        "ERC777.transferFrom": {
          "10": [
            9081,
            9153
          ],
          "11": [
            9163,
            9234
          ],
          "12": [
            9286,
            9347
          ],
          "13": [
            9358,
            9407
          ],
          "14": [
            9483,
            9563
          ],
          "15": [
            9573,
            9625
          ],
          "16": [
            9636,
            9706
          ],
          "17": [
            9717,
            9728
          ]
        }
      },
      "174": {},
      "175": {},
      "176": {},
      "178": {
        "Address.isContract": {
          "50": [
            1126,
            1141
          ]
        }
      },
      "180": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "200": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC1820Registry",
    "IERC20",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906115c6565b60405180910390f35b610141610312565b6040516101309190611613565b61016161015c3660046113d3565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112ff565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba366004611340565b61057c565b005b6101756101cf36600461128c565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f836600461128c565b6105b8565b6101416106d6565b6101bf6102133660046113ff565b6106e5565b6101616102263660046113d3565b610708565b6101616102393660046112c6565b6107bb565b61017561024c3660046112c6565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf61028536600461128c565b61085d565b6101bf610298366004611458565b610979565b6101bf6102ab3660046114d8565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b6060600280546103219061171a565b80601f016020809104026020016040519081016040528092919081815260200182805461034d9061171a565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b5060019392505050565b60006001600160a01b0383166103e45760405162461bcd60e51b81526004016103db90611626565b60405180910390fd5b6001600160a01b0384166104495760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b600033905061047a818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6104a6818686866040518060200160405280600081525060405180602001604052806000815250610c2e565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561052e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103db565b610542868361053d8785611703565b6109d0565b6105708287878760405180602001604052806000815250604051806020016040528060008152506000610d94565b50600195945050505050565b61058633866107bb565b6105a25760405162461bcd60e51b81526004016103db9061166a565b6105b185858585856001610f68565b5050505050565b336001600160a01b038216141561061d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff161561066e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6060600380546103219061171a565b61070333848484604051806020016040528060008152506001610f68565b505050565b60006001600160a01b0383166107305760405162461bcd60e51b81526004016103db90611626565b6000339050610761818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078d818286866040518060200160405280600081525060405180602001604052806000815250610c2e565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d94565b6000816001600160a01b0316836001600160a01b0316148061082657506001600160a01b03831660009081526005602052604090205460ff16801561082657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103db565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bb565b61099f5760405162461bcd60e51b81526004016103db9061166a565b6109ab8484848461104b565b50505050565b6109cc3383836040518060200160405280600081525061104b565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103db565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103db565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906112a9565b90506001600160a01b03811615610c2557604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610bf2908a908a908a908a908a908a9060040161156c565b600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610ca75760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103db565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610cde9084906116eb565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d36939291906116b6565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d8391815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610e1057600080fd5b505afa158015610e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4891906112a9565b90506001600160a01b03811615610ec4576040516223de2960e01b81526001600160a01b038216906223de2990610e8d908b908b908b908b908b908b9060040161156c565b600060405180830381600087803b158015610ea757600080fd5b505af1158015610ebb573d6000803e3d6000fd5b50505050610f5e565b8115610f5e576001600160a01b0386163b15610f5e5760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103db565b5050505050505050565b6001600160a01b038616610fc95760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b6001600160a01b03851661101f5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103db565b3361102e818888888888610af7565b61103c818888888888610c2e565b610c2581888888888888610d94565b6001600160a01b0384166110ac5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103db565b336110bc81866000878787610af7565b6001600160a01b038516600090815260208190526040902054848110156111315760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103db565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611160908490611703565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516111ae939291906116b6565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b600082601f83011261121057600080fd5b813567ffffffffffffffff8082111561122b5761122b61176b565b604051601f8301601f19908116603f011681019082821181831017156112535761125361176b565b8160405283815286602085880101111561126c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561129e57600080fd5b813561085681611781565b6000602082840312156112bb57600080fd5b815161085681611781565b600080604083850312156112d957600080fd5b82356112e481611781565b915060208301356112f481611781565b809150509250929050565b60008060006060848603121561131457600080fd5b833561131f81611781565b9250602084013561132f81611781565b929592945050506040919091013590565b600080600080600060a0868803121561135857600080fd5b853561136381611781565b9450602086013561137381611781565b935060408601359250606086013567ffffffffffffffff8082111561139757600080fd5b6113a389838a016111ff565b935060808801359150808211156113b957600080fd5b506113c6888289016111ff565b9150509295509295909350565b600080604083850312156113e657600080fd5b82356113f181611781565b946020939093013593505050565b60008060006060848603121561141457600080fd5b833561141f81611781565b925060208401359150604084013567ffffffffffffffff81111561144257600080fd5b61144e868287016111ff565b9150509250925092565b6000806000806080858703121561146e57600080fd5b843561147981611781565b935060208501359250604085013567ffffffffffffffff8082111561149d57600080fd5b6114a9888389016111ff565b935060608701359150808211156114bf57600080fd5b506114cc878288016111ff565b91505092959194509250565b600080604083850312156114eb57600080fd5b82359150602083013567ffffffffffffffff81111561150957600080fd5b611515858286016111ff565b9150509250929050565b6000815180845260005b8181101561154557602081850181015186830182015201611529565b81811115611557576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906115a79083018561151f565b82810360a08401526115b9818561151f565b9998505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156116075783516001600160a01b0316835292840192918401916001016115e2565b50909695505050505050565b602081526000610856602083018461151f565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b8381526060602082015260006116cf606083018561151f565b82810360408401526116e1818561151f565b9695505050505050565b600082198211156116fe576116fe611755565b500190565b60008282101561171557611715611755565b500390565b600181811c9082168061172e57607f821691505b6020821081141561174f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461179657600080fd5b5056fea2646970667358221220b7bec755eeb4b879015650c09a5c8a508c89f8cefb7bdf0df3ccf91eaa7ccafb64736f6c63430008060033",
  "deployedSourceMap": "1073:17251:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6769:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:98;;;:::i;:::-;;;;;;;:::i;8358:197::-;;;;;;:::i;:::-;;:::i;:::-;;;7296:14:211;;7289:22;7271:41;;7259:2;7244:18;8358:197:173;7226:92:211;3760:123:173;3864:12;;3760:123;;;13410:25:211;;;13398:2;13383:18;3760:123:173;13365:76:211;8929:806:173;;;;;;:::i;:::-;;:::i;3407:82::-;;;3480:2;14041:36:211;;14029:2;14014:18;3407:82:173;13996:87:211;3604:95:173;3691:1;3604:95;;7018:366;;;;;;:::i;:::-;;:::i;:::-;;3983:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:22:173;4078:7;4104:22;;;;;;;;;;;;3983:150;5824:412;;;;;;:::i;:::-;;:::i;3121:102::-;;;:::i;4263:193::-;;;;;;:::i;:::-;;:::i;4687:439::-;;;;;;:::i;:::-;;:::i;5446:311::-;;;;;;:::i;:::-;;:::i;8069:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8185:19:173;;;8159:7;8185:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;8069:151;6300:403;;;;;;:::i;:::-;;:::i;7505:325::-;;;;;;:::i;:::-;;:::i;5256:127::-;;;;;;:::i;:::-;;:::i;6769:130::-;6835:16;6870:22;6863:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6863:29:173;;;;;;;;;;;;;;;;;;;;;;;6769:130;:::o;2967:98::-;3021:13;3053:5;3046:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:12:173;;2967:98;-1:-1:-1;;;;;2967:98:173:o;8358:197::-;8440:4;719:10:180;8495:32:173;719:10:180;8512:7:173;8521:5;8495:8;:32::i;:::-;-1:-1:-1;8544:4:173;;8358:197;-1:-1:-1;;;8358:197:173:o;8929:806::-;9065:4;-1:-1:-1;;;;;9089:23:173;;9081:72;;;;-1:-1:-1;;;9081:72:173;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9171:20:173;;9163:71;;;;-1:-1:-1;;;9163:71:173;;11890:2:211;9163:71:173;;;11872:21:211;11929:2;11909:18;;;11902:30;11968:34;11948:18;;;11941:62;-1:-1:-1;;;12019:18:211;;;12012:36;12065:19;;9163:71:173;11862:228:211;9163:71:173;9245:15;719:10:180;9245:30:173;;9286:61;9304:7;9313:6;9321:9;9332:6;9286:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9358:49;9364:7;9373:6;9381:9;9392:6;9358:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9445:19:173;;;9418:24;9445:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9491:26;;;;9483:80;;;;-1:-1:-1;;;9483:80:173;;11480:2:211;9483:80:173;;;11462:21:211;11519:2;11499:18;;;11492:30;11558:34;11538:18;;;11531:62;-1:-1:-1;;;11609:18:211;;;11602:39;11658:19;;9483:80:173;11452:231:211;9483:80:173;9573:52;9582:6;9590:7;9599:25;9618:6;9599:16;:25;:::i;:::-;9573:8;:52::i;:::-;9636:70;9656:7;9665:6;9673:9;9684:6;9636:70;;;;;;;;;;;;;;;;;;;;;;;;9700:5;9636:19;:70::i;:::-;-1:-1:-1;9724:4:173;;8929:806;-1:-1:-1;;;;;8929:806:173:o;7018:366::-;7225:35;719:10:180;7253:6:173;7225:13;:35::i;:::-;7217:92;;;;-1:-1:-1;;;7217:92:173;;;;;;;:::i;:::-;7319:58;7325:6;7333:9;7344:6;7352:4;7358:12;7372:4;7319:5;:58::i;:::-;7018:366;;;;;:::o;5824:412::-;719:10:180;-1:-1:-1;;;;;5911:24:173;;;;5903:73;;;;-1:-1:-1;;;5903:73:173;;9369:2:211;5903:73:173;;;9351:21:211;9408:2;9388:18;;;9381:30;9447:34;9427:18;;;9420:62;-1:-1:-1;;;9498:18:211;;;9491:34;9542:19;;5903:73:173;9341:226:211;5903:73:173;-1:-1:-1;;;;;5991:27:173;;;;;;:17;:27;;;;;;;;5987:185;;;719:10:180;6041:38:173;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6041:48:173;;;;;;;;;6034:55;;-1:-1:-1;;6034:55:173;;;5987:185;;;719:10:180;6120:24:173;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6120:34:173;;;;;;;;;:41;;-1:-1:-1;;6120:41:173;6157:4;6120:41;;;5987:185;6187:42;;719:10:180;;-1:-1:-1;;;;;6187:42:173;;;;;;;;5824:412;:::o;3121:102::-;3177:13;3209:7;3202:14;;;;;:::i;4263:193::-;4395:54;719:10:180;4415:9:173;4426:6;4434:4;4395:54;;;;;;;;;;;;4444:4;4395:5;:54::i;:::-;4263:193;;;:::o;4687:439::-;4773:4;-1:-1:-1;;;;;4797:23:173;;4789:72;;;;-1:-1:-1;;;4789:72:173;;;;;;;:::i;:::-;4872:12;719:10:180;4872:27:173;;4910:56;4928:4;4934;4940:9;4951:6;4910:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4977:44;4983:4;4989;4995:9;5006:6;4977:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;5032:65;5052:4;5058;5064:9;5075:6;5032:65;;;;;;;;;;;;;;;;;;;;;;;;5091:5;5032:19;:65::i;5446:311::-;5546:4;5593:11;-1:-1:-1;;;;;5581:23:173;:8;-1:-1:-1;;;;;5581:23:173;;:120;;;-1:-1:-1;;;;;;5621:27:173;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5653:37:173;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5652:48;5621:79;5581:169;;;-1:-1:-1;;;;;;5717:23:173;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5581:169;5562:188;5446:311;-1:-1:-1;;;5446:311:173:o;6300:403::-;-1:-1:-1;;;;;6384:24:173;;719:10:180;6384:24:173;;6376:70;;;;-1:-1:-1;;;6376:70:173;;9774:2:211;6376:70:173;;;9756:21:211;9813:2;9793:18;;;9786:30;9852:34;9832:18;;;9825:62;-1:-1:-1;;;9903:18:211;;;9896:31;9944:19;;6376:70:173;9746:223:211;6376:70:173;-1:-1:-1;;;;;6461:27:173;;;;;;:17;:27;;;;;;;;6457:185;;;719:10:180;6504:38:173;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6504:48:173;;;;;;;;;:55;;-1:-1:-1;;6504:55:173;6555:4;6504:55;;;6457:185;;;719:10:180;6597:24:173;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6597:34:173;;;;;;;;;6590:41;;-1:-1:-1;;6590:41:173;;;6457:185;6657:39;;719:10:180;;-1:-1:-1;;;;;6657:39:173;;;;;;;;6300:403;:::o;7505:325::-;7686:36;719:10:180;7714:7:173;7686:13;:36::i;:::-;7678:93;;;;-1:-1:-1;;;7678:93:173;;;;;;;:::i;:::-;7781:42;7787:7;7796:6;7804:4;7810:12;7781:5;:42::i;:::-;7505:325;;;;:::o;5256:127::-;5339:37;719:10:180;5359:6:173;5367:4;5339:37;;;;;;;;;;;;:5;:37::i;:::-;5256:127;;:::o;14872:365::-;-1:-1:-1;;;;;14995:20:173;;14987:70;;;;-1:-1:-1;;;14987:70:173;;7749:2:211;14987:70:173;;;7731:21:211;7788:2;7768:18;;;7761:30;7827:34;7807:18;;;7800:62;-1:-1:-1;;;7878:18:211;;;7871:35;7923:19;;14987:70:173;7721:227:211;14987:70:173;-1:-1:-1;;;;;15075:21:173;;15067:69;;;;-1:-1:-1;;;15067:69:173;;13062:2:211;15067:69:173;;;13044:21:211;13101:2;13081:18;;;13074:30;13140:34;13120:18;;;13113:62;-1:-1:-1;;;13191:18:211;;;13184:33;13234:19;;15067:69:173;13034:225:211;15067:69:173;-1:-1:-1;;;;;15147:19:173;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15198:32;;13410:25:211;;;15198:32:173;;13383:18:211;15198:32:173;;;;;;;14872:365;;;:::o;15710:472::-;15941:78;;-1:-1:-1;;;15941:78:173;;-1:-1:-1;;;;;6381:32:211;;15941:78:173;;;6363:51:211;1476:31:173;6430:18:211;;;6423:34;15919:19:173;;1227:42;;15941:41;;6336:18:211;;15941:78:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15919:100;-1:-1:-1;;;;;;16033:25:173;;;16029:147;;16074:91;;-1:-1:-1;;;16074:91:173;;-1:-1:-1;;;;;16074:39:173;;;;;:91;;16114:8;;16124:4;;16130:2;;16134:6;;16142:8;;16152:12;;16074:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16029:147;15909:273;15710:472;;;;;;:::o;14123:611::-;-1:-1:-1;;;;;14401:15:173;;14379:19;14401:15;;;;;;;;;;;14434:21;;;;14426:73;;;;-1:-1:-1;;;14426:73:173;;8558:2:211;14426:73:173;;;8540:21:211;8597:2;8577:18;;;8570:30;8636:34;8616:18;;;8609:62;-1:-1:-1;;;8687:18:211;;;8680:37;8734:19;;14426:73:173;8530:229:211;14426:73:173;-1:-1:-1;;;;;14533:15:173;;;:9;:15;;;;;;;;;;;14551:20;;;14533:38;;14591:13;;;;;;;;:23;;14565:6;;14533:9;14591:23;;14565:6;;14591:23;:::i;:::-;;;;;;;;14651:2;-1:-1:-1;;;;;14630:56:173;14645:4;-1:-1:-1;;;;;14630:56:173;14635:8;-1:-1:-1;;;;;14630:56:173;;14655:6;14663:8;14673:12;14630:56;;;;;;;;:::i;:::-;;;;;;;;14716:2;-1:-1:-1;;;;;14701:26:173;14710:4;-1:-1:-1;;;;;14701:26:173;;14720:6;14701:26;;;;13410:25:211;;13398:2;13383:18;;13365:76;14701:26:173;;;;;;;;14310:424;14123:611;;;;;;:::o;16871:676::-;17138:79;;-1:-1:-1;;;17138:79:173;;-1:-1:-1;;;;;6381:32:211;;17138:79:173;;;6363:51:211;1573:34:173;6430:18:211;;;6423:34;17116:19:173;;1227:42;;17138:41;;6336:18:211;;17138:79:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17116:101;-1:-1:-1;;;;;;17231:25:173;;;17227:314;;17272:96;;-1:-1:-1;;;17272:96:173;;-1:-1:-1;;;;;17272:44:173;;;;;:96;;17317:8;;17327:4;;17333:2;;17337:6;;17345:8;;17355:12;;17272:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17227:314;;;17389:19;17385:156;;;-1:-1:-1;;;;;17433:13:173;;1087:20:178;1133:8;17424:106:173;;;;-1:-1:-1;;;17424:106:173;;10176:2:211;17424:106:173;;;10158:21:211;10215:2;10195:18;;;10188:30;10254:34;10234:18;;;10227:62;10325:34;10305:18;;;10298:62;-1:-1:-1;;;10376:19:211;;;10369:44;10430:19;;17424:106:173;10148:307:211;17424:106:173;17106:441;16871:676;;;;;;;:::o;12351:650::-;-1:-1:-1;;;;;12573:18:173;;12565:65;;;;-1:-1:-1;;;12565:65:173;;8155:2:211;12565:65:173;;;8137:21:211;8194:2;8174:18;;;8167:30;8233:34;8213:18;;;8206:62;-1:-1:-1;;;8284:18:211;;;8277:32;8326:19;;12565:65:173;8127:224:211;12565:65:173;-1:-1:-1;;;;;12648:16:173;;12640:61;;;;-1:-1:-1;;;12640:61:173;;12701:2:211;12640:61:173;;;12683:21:211;;;12720:18;;;12713:30;12779:34;12759:18;;;12752:62;12831:18;;12640:61:173;12673:182:211;12640:61:173;719:10:180;12754:69:173;719:10:180;12782:4:173;12788:2;12792:6;12800:8;12810:12;12754:17;:69::i;:::-;12834:57;12840:8;12850:4;12856:2;12860:6;12868:8;12878:12;12834:5;:57::i;:::-;12902:92;12922:8;12932:4;12938:2;12942:6;12950:8;12960:12;12974:19;12902;:92::i;13306:811::-;-1:-1:-1;;;;;13470:18:173;;13462:65;;;;-1:-1:-1;;;13462:65:173;;8966:2:211;13462:65:173;;;8948:21:211;9005:2;8985:18;;;8978:30;9044:34;9024:18;;;9017:62;-1:-1:-1;;;9095:18:211;;;9088:32;9137:19;;13462:65:173;8938:224:211;13462:65:173;719:10:180;13580:73:173;719:10:180;13608:4:173;13538:16;13626:6;13634:4;13640:12;13580:17;:73::i;:::-;-1:-1:-1;;;;;13787:15:173;;13765:19;13787:15;;;;;;;;;;;13820:21;;;;13812:69;;;;-1:-1:-1;;;13812:69:173;;12297:2:211;13812:69:173;;;12279:21:211;12336:2;12316:18;;;12309:30;12375:34;12355:18;;;12348:62;-1:-1:-1;;;12426:18:211;;;12419:33;12469:19;;13812:69:173;12269:225:211;13812:69:173;-1:-1:-1;;;;;13915:15:173;;:9;:15;;;;;;;;;;13933:20;;;13915:38;;13973:12;:22;;13947:6;;13915:9;13973:22;;13947:6;;13973:22;:::i;:::-;;;;;;;;14028:4;-1:-1:-1;;;;;14011:50:173;14018:8;-1:-1:-1;;;;;14011:50:173;;14034:6;14042:4;14048:12;14011:50;;;;;;;;:::i;:::-;;;;;;;;14076:34;;13410:25:211;;;14099:1:173;;-1:-1:-1;;;;;14076:34:173;;;;;13398:2:211;13383:18;14076:34:173;;;;;;;13452:665;;13306:811;;;;:::o;14:718:211:-;56:5;109:3;102:4;94:6;90:17;86:27;76:2;;127:1;124;117:12;76:2;163:6;150:20;189:18;226:2;222;219:10;216:2;;;232:18;;:::i;:::-;307:2;301:9;275:2;361:13;;-1:-1:-1;;357:22:211;;;381:2;353:31;349:40;337:53;;;405:18;;;425:22;;;402:46;399:2;;;451:18;;:::i;:::-;491:10;487:2;480:22;526:2;518:6;511:18;572:3;565:4;560:2;552:6;548:15;544:26;541:35;538:2;;;589:1;586;579:12;538:2;653;646:4;638:6;634:17;627:4;619:6;615:17;602:54;700:1;693:4;688:2;680:6;676:15;672:26;665:37;720:6;711:15;;;;;;66:666;;;;:::o;737:247::-;796:6;849:2;837:9;828:7;824:23;820:32;817:2;;;865:1;862;855:12;817:2;904:9;891:23;923:31;948:5;923:31;:::i;989:251::-;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:2;;;1128:1;1125;1118:12;1080:2;1160:9;1154:16;1179:31;1204:5;1179:31;:::i;1245:388::-;1313:6;1321;1374:2;1362:9;1353:7;1349:23;1345:32;1342:2;;;1390:1;1387;1380:12;1342:2;1429:9;1416:23;1448:31;1473:5;1448:31;:::i;:::-;1498:5;-1:-1:-1;1555:2:211;1540:18;;1527:32;1568:33;1527:32;1568:33;:::i;:::-;1620:7;1610:17;;;1332:301;;;;;:::o;1638:456::-;1715:6;1723;1731;1784:2;1772:9;1763:7;1759:23;1755:32;1752:2;;;1800:1;1797;1790:12;1752:2;1839:9;1826:23;1858:31;1883:5;1858:31;:::i;:::-;1908:5;-1:-1:-1;1965:2:211;1950:18;;1937:32;1978:33;1937:32;1978:33;:::i;:::-;1742:352;;2030:7;;-1:-1:-1;;;2084:2:211;2069:18;;;;2056:32;;1742:352::o;2099:885::-;2212:6;2220;2228;2236;2244;2297:3;2285:9;2276:7;2272:23;2268:33;2265:2;;;2314:1;2311;2304:12;2265:2;2353:9;2340:23;2372:31;2397:5;2372:31;:::i;:::-;2422:5;-1:-1:-1;2479:2:211;2464:18;;2451:32;2492:33;2451:32;2492:33;:::i;:::-;2544:7;-1:-1:-1;2598:2:211;2583:18;;2570:32;;-1:-1:-1;2653:2:211;2638:18;;2625:32;2676:18;2706:14;;;2703:2;;;2733:1;2730;2723:12;2703:2;2756:49;2797:7;2788:6;2777:9;2773:22;2756:49;:::i;:::-;2746:59;;2858:3;2847:9;2843:19;2830:33;2814:49;;2888:2;2878:8;2875:16;2872:2;;;2904:1;2901;2894:12;2872:2;;2927:51;2970:7;2959:8;2948:9;2944:24;2927:51;:::i;:::-;2917:61;;;2255:729;;;;;;;;:::o;2989:315::-;3057:6;3065;3118:2;3106:9;3097:7;3093:23;3089:32;3086:2;;;3134:1;3131;3124:12;3086:2;3173:9;3160:23;3192:31;3217:5;3192:31;:::i;:::-;3242:5;3294:2;3279:18;;;;3266:32;;-1:-1:-1;;;3076:228:211:o;3309:523::-;3395:6;3403;3411;3464:2;3452:9;3443:7;3439:23;3435:32;3432:2;;;3480:1;3477;3470:12;3432:2;3519:9;3506:23;3538:31;3563:5;3538:31;:::i;:::-;3588:5;-1:-1:-1;3640:2:211;3625:18;;3612:32;;-1:-1:-1;3695:2:211;3680:18;;3667:32;3722:18;3711:30;;3708:2;;;3754:1;3751;3744:12;3708:2;3777:49;3818:7;3809:6;3798:9;3794:22;3777:49;:::i;:::-;3767:59;;;3422:410;;;;;:::o;3837:743::-;3941:6;3949;3957;3965;4018:3;4006:9;3997:7;3993:23;3989:33;3986:2;;;4035:1;4032;4025:12;3986:2;4074:9;4061:23;4093:31;4118:5;4093:31;:::i;:::-;4143:5;-1:-1:-1;4195:2:211;4180:18;;4167:32;;-1:-1:-1;4250:2:211;4235:18;;4222:32;4273:18;4303:14;;;4300:2;;;4330:1;4327;4320:12;4300:2;4353:49;4394:7;4385:6;4374:9;4370:22;4353:49;:::i;:::-;4343:59;;4455:2;4444:9;4440:18;4427:32;4411:48;;4484:2;4474:8;4471:16;4468:2;;;4500:1;4497;4490:12;4468:2;;4523:51;4566:7;4555:8;4544:9;4540:24;4523:51;:::i;:::-;4513:61;;;3976:604;;;;;;;:::o;4585:388::-;4662:6;4670;4723:2;4711:9;4702:7;4698:23;4694:32;4691:2;;;4739:1;4736;4729:12;4691:2;4775:9;4762:23;4752:33;;4836:2;4825:9;4821:18;4808:32;4863:18;4855:6;4852:30;4849:2;;;4895:1;4892;4885:12;4849:2;4918:49;4959:7;4950:6;4939:9;4935:22;4918:49;:::i;:::-;4908:59;;;4681:292;;;;;:::o;4978:471::-;5019:3;5057:5;5051:12;5084:6;5079:3;5072:19;5109:1;5119:162;5133:6;5130:1;5127:13;5119:162;;;5195:4;5251:13;;;5247:22;;5241:29;5223:11;;;5219:20;;5212:59;5148:12;5119:162;;;5299:6;5296:1;5293:13;5290:2;;;5365:1;5358:4;5349:6;5344:3;5340:16;5336:27;5329:38;5290:2;-1:-1:-1;5431:2:211;5410:15;-1:-1:-1;;5406:29:211;5397:39;;;;5438:4;5393:50;;5027:422;-1:-1:-1;;5027:422:211:o;5454:730::-;-1:-1:-1;;;;;5797:15:211;;;5779:34;;5849:15;;;5844:2;5829:18;;5822:43;5901:15;;5896:2;5881:18;;5874:43;5948:2;5933:18;;5926:34;;;5997:3;5991;5976:19;;5969:32;;;5722:4;;6024:45;;6049:19;;6041:6;6024:45;:::i;:::-;6118:9;6110:6;6106:22;6100:3;6089:9;6085:19;6078:51;6146:32;6171:6;6163;6146:32;:::i;:::-;6138:40;5731:453;-1:-1:-1;;;;;;;;;5731:453:211:o;6468:658::-;6639:2;6691:21;;;6761:13;;6664:18;;;6783:22;;;6610:4;;6639:2;6862:15;;;;6836:2;6821:18;;;6610:4;6905:195;6919:6;6916:1;6913:13;6905:195;;;6984:13;;-1:-1:-1;;;;;6980:39:211;6968:52;;7075:15;;;;7040:12;;;;7016:1;6934:9;6905:195;;;-1:-1:-1;7117:3:211;;6619:507;-1:-1:-1;;;;;;6619:507:211:o;7323:219::-;7472:2;7461:9;7454:21;7435:4;7492:44;7532:2;7521:9;7517:18;7509:6;7492:44;:::i;10460:400::-;10662:2;10644:21;;;10701:2;10681:18;;;10674:30;10740:34;10735:2;10720:18;;10713:62;-1:-1:-1;;;10806:2:211;10791:18;;10784:34;10850:3;10835:19;;10634:226::o;10865:408::-;11067:2;11049:21;;;11106:2;11086:18;;;11079:30;11145:34;11140:2;11125:18;;11118:62;-1:-1:-1;;;11211:2:211;11196:18;;11189:42;11263:3;11248:19;;11039:234::o;13446:448::-;13667:6;13656:9;13649:25;13710:2;13705;13694:9;13690:18;13683:30;13630:4;13736:44;13776:2;13765:9;13761:18;13753:6;13736:44;:::i;:::-;13828:9;13820:6;13816:22;13811:2;13800:9;13796:18;13789:50;13856:32;13881:6;13873;13856:32;:::i;:::-;13848:40;13639:255;-1:-1:-1;;;;;;13639:255:211:o;14088:128::-;14128:3;14159:1;14155:6;14152:1;14149:13;14146:2;;;14165:18;;:::i;:::-;-1:-1:-1;14201:9:211;;14136:80::o;14221:125::-;14261:4;14289:1;14286;14283:8;14280:2;;;14294:18;;:::i;:::-;-1:-1:-1;14331:9:211;;14270:76::o;14351:380::-;14430:1;14426:12;;;;14473;;;14494:2;;14548:4;14540:6;14536:17;14526:27;;14494:2;14601;14593:6;14590:14;14570:18;14567:38;14564:2;;;14647:10;14642:3;14638:20;14635:1;14628:31;14682:4;14679:1;14672:15;14710:4;14707:1;14700:15;14564:2;;14406:325;;;:::o;14736:127::-;14797:10;14792:3;14788:20;14785:1;14778:31;14828:4;14825:1;14818:15;14852:4;14849:1;14842:15;14868:127;14929:10;14924:3;14920:20;14917:1;14910:31;14960:4;14957:1;14950:15;14984:4;14981:1;14974:15;15000:131;-1:-1:-1;;;;;15075:31:211;;15065:42;;15055:2;;15121:1;15118;15111:12;15055:2;15045:86;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "constructor": {
        "details": "`defaultOperators` may be an empty array."
      },
      "decimals()": {
        "details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}. This implementation always returns `1`."
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
      }
    },
    "version": 1
  },
  "offset": [
    1073,
    18324
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x171A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x171A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47A DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4A6 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH2 0x542 DUP7 DUP4 PUSH2 0x53D DUP8 DUP6 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x570 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD94 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x586 CALLER DUP7 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF68 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x171A JUMP JUMPDEST PUSH2 0x703 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x761 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x78D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x826 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x826 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x856 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x940 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x983 CALLER DUP6 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x9AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x104B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x104B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBF2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCDE SWAP1 DUP5 SWAP1 PUSH2 0x16EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD83 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE48 SWAP2 SWAP1 PUSH2 0x12A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE8D SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF5E JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF5E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x101F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x102E DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x103C DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xC25 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST CALLER PUSH2 0x10BC DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1160 SWAP1 DUP5 SWAP1 PUSH2 0x1703 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122B PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1253 JUMPI PUSH2 0x1253 PUSH2 0x176B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x856 DUP2 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x856 DUP2 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12E4 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x12F4 DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x131F DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x132F DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1363 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1373 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A3 DUP10 DUP4 DUP11 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C6 DUP9 DUP3 DUP10 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13F1 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x141F DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144E DUP7 DUP3 DUP8 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1479 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A9 DUP9 DUP4 DUP10 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14CC DUP8 DUP3 DUP9 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1515 DUP6 DUP3 DUP7 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1545 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1529 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x15A7 SWAP1 DUP4 ADD DUP6 PUSH2 0x151F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x15B9 DUP2 DUP6 PUSH2 0x151F JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1607 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15E2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x856 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x16CF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x151F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16E1 DUP2 DUP6 PUSH2 0x151F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FE PUSH2 0x1755 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1715 JUMPI PUSH2 0x1715 PUSH2 0x1755 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x172E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x174F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xBE 0xC7 SSTORE 0xEE 0xB4 0xB8 PUSH26 0x15650C09A5C8A508C89F8CEFB7BDF0DF3CCF91EAA7CCAFB6473 PUSH16 0x6C634300080600330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "5": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "CALLVALUE",
      "path": "173"
    },
    "6": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "7": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "8": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "12": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "173"
    },
    "16": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "17": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "POP",
      "path": "173"
    },
    "18": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "21": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "LT",
      "path": "173"
    },
    "22": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "26": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "CALLDATALOAD",
      "path": "173"
    },
    "29": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "SHR",
      "path": "173"
    },
    "32": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "33": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x959B8C3F"
    },
    "38": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "GT",
      "path": "173"
    },
    "39": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "43": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "44": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xD95B6371"
    },
    "49": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "GT",
      "path": "173"
    },
    "50": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "54": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "55": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xD95B6371"
    },
    "60": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "61": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x22B"
    },
    "64": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "65": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "66": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "72": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x23E"
    },
    "75": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "76": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "77": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xFAD8B32A"
    },
    "82": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "83": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "87": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "88": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xFC673C4F"
    },
    "93": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "94": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "98": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "99": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xFE9D9303"
    },
    "104": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "105": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x29D"
    },
    "108": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "109": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "112": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "173"
    },
    "113": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "114": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "115": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x959B8C3F"
    },
    "120": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "121": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1EA"
    },
    "124": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "125": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "126": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "132": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1FD"
    },
    "135": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "136": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "137": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x9BD9BBC6"
    },
    "142": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "143": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x205"
    },
    "146": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "147": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "148": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "154": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x218"
    },
    "157": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "158": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "161": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "173"
    },
    "162": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "163": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "164": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "GT",
      "path": "173"
    },
    "170": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "174": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "175": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "181": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "185": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "186": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "192": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x196"
    },
    "195": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "196": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "197": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x556F0DC7"
    },
    "202": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "203": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1A5"
    },
    "206": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "207": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "208": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x62AD1B83"
    },
    "213": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "214": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1AC"
    },
    "217": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "218": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "219": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "225": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1C1"
    },
    "228": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "229": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "232": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "173"
    },
    "233": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "234": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "235": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x6E48538"
    },
    "240": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "241": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "245": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "246": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "252": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x139"
    },
    "255": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "256": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "257": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "263": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x14E"
    },
    "266": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "267": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "268": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "173"
    },
    "274": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x171"
    },
    "277": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "278": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "279": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "173"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "173"
    },
    "283": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "284": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x123"
    },
    "287": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x2B0"
    },
    "290": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMP",
      "path": "173"
    },
    "291": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "292": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "294": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "295": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x130"
    },
    "298": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "299": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "300": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x15C6"
    },
    "303": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMP",
      "path": "173"
    },
    "304": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "305": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "307": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "308": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "DUP1",
      "path": "173"
    },
    "309": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "310": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SUB",
      "path": "173"
    },
    "311": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "312": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "RETURN",
      "path": "173"
    },
    "313": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "314": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x141"
    },
    "317": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x312"
    },
    "320": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMP",
      "path": "173"
    },
    "321": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "322": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "324": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "325": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x130"
    },
    "328": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "329": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "330": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1613"
    },
    "333": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMP",
      "path": "173"
    },
    "334": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "335": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x161"
    },
    "338": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x15C"
    },
    "341": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "342": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "344": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x13D3"
    },
    "347": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMP",
      "path": "173"
    },
    "348": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "349": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x39B"
    },
    "352": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMP",
      "path": "173"
    },
    "353": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "354": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x130"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "370": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3864,
        3876
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 0,
      "value": "0x1"
    },
    "372": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3864,
        3876
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "373": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "374": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "377": {
      "op": "SWAP1"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x130"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x161"
    },
    "391": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x191"
    },
    "394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "395": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x12FF"
    },
    "400": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMP",
      "path": "173"
    },
    "401": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "402": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3B3"
    },
    "405": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMP",
      "path": "173"
    },
    "406": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "407": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "409": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "410": {
      "fn": "ERC777.decimals",
      "offset": [
        3480,
        3482
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 1,
      "value": "0x12"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x130"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC777.granularity",
      "offset": [
        3604,
        3699
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "422": {
      "fn": "ERC777.granularity",
      "offset": [
        3691,
        3692
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 2,
      "value": "0x1"
    },
    "424": {
      "fn": "ERC777.granularity",
      "offset": [
        3604,
        3699
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x175"
    },
    "427": {
      "fn": "ERC777.granularity",
      "offset": [
        3604,
        3699
      ],
      "op": "JUMP",
      "path": "173"
    },
    "428": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BF"
    },
    "432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BA"
    },
    "435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1340"
    },
    "441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMP",
      "path": "173"
    },
    "442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x57C"
    },
    "446": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMP",
      "path": "173"
    },
    "447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "STOP",
      "path": "173"
    },
    "449": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "450": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x175"
    },
    "453": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "457": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "459": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x128C"
    },
    "462": {
      "fn": "ERC777.balanceOf",
      "jump": "i",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMP",
      "path": "173"
    },
    "463": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "AND",
      "path": "173",
      "statement": 3
    },
    "473": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4078,
        4085
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "476": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "DUP2",
      "path": "173"
    },
    "477": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "478": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "480": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "DUP2",
      "path": "173"
    },
    "481": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "482": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "483": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "486": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "487": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "488": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "489": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMP",
      "path": "173"
    },
    "490": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BF"
    },
    "494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1F8"
    },
    "497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x128C"
    },
    "503": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMP",
      "path": "173"
    },
    "504": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "505": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x5B8"
    },
    "508": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMP",
      "path": "173"
    },
    "509": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "510": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x141"
    },
    "513": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x6D6"
    },
    "516": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3121,
        3223
      ],
      "op": "JUMP",
      "path": "173"
    },
    "517": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "518": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BF"
    },
    "521": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x213"
    },
    "524": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "525": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "527": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x13FF"
    },
    "530": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMP",
      "path": "173"
    },
    "531": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "532": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x6E5"
    },
    "535": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMP",
      "path": "173"
    },
    "536": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "537": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x161"
    },
    "540": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "544": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x13D3"
    },
    "549": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMP",
      "path": "173"
    },
    "550": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "551": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x708"
    },
    "554": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMP",
      "path": "173"
    },
    "555": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x161"
    },
    "559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x239"
    },
    "562": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x12C6"
    },
    "568": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMP",
      "path": "173"
    },
    "569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x7BB"
    },
    "573": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMP",
      "path": "173"
    },
    "574": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "575": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x175"
    },
    "578": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "582": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x12C6"
    },
    "587": {
      "fn": "ERC777.allowance",
      "jump": "i",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMP",
      "path": "173"
    },
    "588": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "SWAP2",
      "path": "173",
      "statement": 4
    },
    "598": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP3",
      "path": "173"
    },
    "599": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "AND",
      "path": "173"
    },
    "600": {
      "fn": "ERC777.allowance",
      "offset": [
        8159,
        8166
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "603": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP2",
      "path": "173"
    },
    "604": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "605": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8196
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x8"
    },
    "607": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "610": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP2",
      "path": "173"
    },
    "611": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "612": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP1",
      "path": "173"
    },
    "615": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP4",
      "path": "173"
    },
    "616": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "617": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "618": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "619": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP5",
      "path": "173"
    },
    "620": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "AND",
      "path": "173"
    },
    "621": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "DUP3",
      "path": "173"
    },
    "622": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "623": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "624": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "625": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "626": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "627": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "628": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "629": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "630": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMP",
      "path": "173"
    },
    "631": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "632": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BF"
    },
    "635": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "639": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x128C"
    },
    "644": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMP",
      "path": "173"
    },
    "645": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "646": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x85D"
    },
    "649": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMP",
      "path": "173"
    },
    "650": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "651": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BF"
    },
    "654": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x298"
    },
    "657": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "658": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "660": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1458"
    },
    "663": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMP",
      "path": "173"
    },
    "664": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "665": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x979"
    },
    "668": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMP",
      "path": "173"
    },
    "669": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "670": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1BF"
    },
    "673": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "CALLDATASIZE",
      "path": "173"
    },
    "677": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x14D8"
    },
    "682": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMP",
      "path": "173"
    },
    "683": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "684": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x9B1"
    },
    "687": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMP",
      "path": "173"
    },
    "688": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "689": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6835,
        6851
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6870,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 5,
      "value": "0x4"
    },
    "693": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "173"
    },
    "694": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "695": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "173"
    },
    "696": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "698": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MUL",
      "path": "173"
    },
    "699": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "701": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "173"
    },
    "702": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "705": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "706": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "173"
    },
    "707": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "173"
    },
    "708": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "711": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "173"
    },
    "712": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "713": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "714": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "715": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "173"
    },
    "716": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "173"
    },
    "717": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "718": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "720": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "173"
    },
    "721": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP3",
      "path": "173"
    },
    "722": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "173"
    },
    "723": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "724": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "173"
    },
    "725": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "726": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x308"
    },
    "729": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "730": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MUL",
      "path": "173"
    },
    "733": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP3",
      "path": "173"
    },
    "734": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "173"
    },
    "735": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "736": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "737": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "740": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "742": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "745": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "746": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "747": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "173"
    },
    "748": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "AND",
      "path": "173"
    },
    "758": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "173"
    },
    "759": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "760": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1"
    },
    "762": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "763": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "764": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "173"
    },
    "765": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "766": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "173"
    },
    "769": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "173"
    },
    "770": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP4",
      "path": "173"
    },
    "771": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "GT",
      "path": "173"
    },
    "772": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x2EA"
    },
    "775": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "776": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "777": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "173"
    },
    "778": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "173"
    },
    "779": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "173"
    },
    "780": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "173"
    },
    "781": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "173"
    },
    "782": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "783": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "173"
    },
    "784": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "785": {
      "fn": "ERC777.defaultOperators",
      "jump": "o",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMP",
      "path": "173"
    },
    "786": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "787": {
      "fn": "ERC777.name",
      "offset": [
        3021,
        3034
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x60"
    },
    "789": {
      "fn": "ERC777.name",
      "offset": [
        3053,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 6,
      "value": "0x2"
    },
    "791": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "792": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "793": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x321"
    },
    "796": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "797": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x171A"
    },
    "800": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMP",
      "path": "173"
    },
    "801": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "802": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "803": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1F"
    },
    "805": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "806": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "809": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "810": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DIV",
      "path": "173"
    },
    "811": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MUL",
      "path": "173"
    },
    "812": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "815": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "818": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "819": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "173"
    },
    "820": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "821": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "824": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "825": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "826": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "827": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "828": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "173"
    },
    "829": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "173"
    },
    "830": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "831": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "833": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "834": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP3",
      "path": "173"
    },
    "835": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "836": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "837": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x34D"
    },
    "840": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "841": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x171A"
    },
    "844": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMP",
      "path": "173"
    },
    "845": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "846": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "847": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "848": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x308"
    },
    "851": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "852": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "853": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1F"
    },
    "855": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "LT",
      "path": "173"
    },
    "856": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x36F"
    },
    "859": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "860": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x100"
    },
    "863": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "864": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP4",
      "path": "173"
    },
    "865": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "866": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DIV",
      "path": "173"
    },
    "867": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MUL",
      "path": "173"
    },
    "868": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP4",
      "path": "173"
    },
    "869": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "870": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "871": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "874": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "875": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x308"
    },
    "878": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMP",
      "path": "173"
    },
    "879": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "880": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP3",
      "path": "173"
    },
    "881": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "882": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "883": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "884": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "887": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "889": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "892": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "893": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "894": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "173"
    },
    "895": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "896": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "173"
    },
    "897": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "898": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "899": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1"
    },
    "901": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "902": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "903": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "905": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "173"
    },
    "906": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "173"
    },
    "907": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP4",
      "path": "173"
    },
    "908": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "GT",
      "path": "173"
    },
    "909": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x37D"
    },
    "912": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "915": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP6",
      "path": "173"
    },
    "916": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "SWAP5",
      "path": "173"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC777.name",
      "jump": "o",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMP",
      "path": "173"
    },
    "923": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "924": {
      "fn": "ERC777.approve",
      "offset": [
        8440,
        8444
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180",
      "statement": 7
    },
    "927": {
      "fn": "ERC777.approve",
      "offset": [
        8495,
        8527
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 8,
      "value": "0x3A9"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "180"
    },
    "931": {
      "fn": "ERC777.approve",
      "offset": [
        8512,
        8519
      ],
      "op": "DUP6",
      "path": "173"
    },
    "932": {
      "fn": "ERC777.approve",
      "offset": [
        8521,
        8526
      ],
      "op": "DUP6",
      "path": "173"
    },
    "933": {
      "fn": "ERC777.approve",
      "offset": [
        8495,
        8503
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x9D0"
    },
    "936": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8495,
        8527
      ],
      "op": "JUMP",
      "path": "173"
    },
    "937": {
      "fn": "ERC777.approve",
      "offset": [
        8495,
        8527
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "ERC777.approve",
      "offset": [
        8544,
        8548
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 9,
      "value": "0x1"
    },
    "941": {
      "fn": "ERC777.approve",
      "offset": [
        8544,
        8548
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "942": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "ERC777.approve",
      "jump": "o",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMP",
      "path": "173"
    },
    "947": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "948": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9065,
        9069
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9089,
        9112
      ],
      "op": "DUP4",
      "path": "173",
      "statement": 10
    },
    "959": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9089,
        9112
      ],
      "op": "AND",
      "path": "173"
    },
    "960": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3E4"
    },
    "963": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "964": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "966": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "DUP2",
      "path": "173"
    },
    "975": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "976": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "978": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "ADD",
      "path": "173"
    },
    "979": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "982": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "983": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1626"
    },
    "986": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMP",
      "path": "173"
    },
    "987": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "988": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "991": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "DUP1",
      "path": "173"
    },
    "992": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "993": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SUB",
      "path": "173"
    },
    "994": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "995": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "173"
    },
    "996": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9171,
        9191
      ],
      "op": "DUP5",
      "path": "173",
      "statement": 11
    },
    "1006": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9171,
        9191
      ],
      "op": "AND",
      "path": "173"
    },
    "1007": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x449"
    },
    "1010": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "1011": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1022": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1025": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "1027": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1028": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "ADD",
      "path": "173"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "1096": {
      "op": "JUMP"
    },
    "1097": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1098": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9260
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1101": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9275
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1102": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9275
      ],
      "op": "POP",
      "path": "173"
    },
    "1103": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 12,
      "value": "0x47A"
    },
    "1106": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9304,
        9311
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1107": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9313,
        9319
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1108": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9321,
        9330
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1109": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9332,
        9338
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1110": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1112": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1113": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1114": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1116": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "ADD",
      "path": "173"
    },
    "1117": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1119": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1120": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1121": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1123": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1124": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1125": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "POP",
      "path": "173"
    },
    "1126": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1128": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1129": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1130": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1132": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "ADD",
      "path": "173"
    },
    "1133": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1135": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1136": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1137": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1139": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1140": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1141": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "POP",
      "path": "173"
    },
    "1142": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9303
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xAF7"
    },
    "1145": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9286,
        9347
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1146": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1147": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 13,
      "value": "0x4A6"
    },
    "1150": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9364,
        9371
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1151": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9373,
        9379
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1152": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9381,
        9390
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1153": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9392,
        9398
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1154": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1156": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1157": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1158": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1160": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "ADD",
      "path": "173"
    },
    "1161": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1163": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1164": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1165": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1168": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1169": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "POP",
      "path": "173"
    },
    "1170": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1172": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1173": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1174": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "ADD",
      "path": "173"
    },
    "1177": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1180": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1181": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1184": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1185": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "POP",
      "path": "173"
    },
    "1186": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9363
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xC2E"
    },
    "1189": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9358,
        9407
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1190": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9407
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1200": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1201": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "AND",
      "path": "173"
    },
    "1202": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9418,
        9442
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1204": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1205": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1206": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1207": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9456
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x8"
    },
    "1209": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1211": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1212": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1213": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1214": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1216": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1217": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1218": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9464
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1219": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "1220": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1221": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "AND",
      "path": "173"
    },
    "1222": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1223": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1224": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "1225": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1226": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1227": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1228": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9445,
        9473
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "1229": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9491,
        9517
      ],
      "op": "DUP4",
      "path": "173",
      "statement": 14
    },
    "1230": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9491,
        9517
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1231": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9491,
        9517
      ],
      "op": "LT",
      "path": "173"
    },
    "1232": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9491,
        9517
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "1233": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x52E"
    },
    "1236": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "1237": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1239": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1248": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "1253": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1254": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "ADD",
      "path": "173"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH9",
      "value": "0x616C6C6F77616E6365"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "1325": {
      "op": "JUMP"
    },
    "1326": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9483,
        9563
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1327": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9573,
        9625
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 15,
      "value": "0x542"
    },
    "1330": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9582,
        9588
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1331": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9590,
        9597
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1332": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9599,
        9624
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x53D"
    },
    "1335": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9618,
        9624
      ],
      "op": "DUP8",
      "path": "173"
    },
    "1336": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9599,
        9615
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1337": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9599,
        9624
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1703"
    },
    "1340": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9599,
        9624
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1341": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9599,
        9624
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1342": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9573,
        9581
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x9D0"
    },
    "1345": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9573,
        9625
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1346": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9573,
        9625
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1347": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 16,
      "value": "0x570"
    },
    "1350": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9656,
        9663
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1351": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9665,
        9671
      ],
      "op": "DUP8",
      "path": "173"
    },
    "1352": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9673,
        9682
      ],
      "op": "DUP8",
      "path": "173"
    },
    "1353": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9684,
        9690
      ],
      "op": "DUP8",
      "path": "173"
    },
    "1354": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1356": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1357": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1358": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "ADD",
      "path": "173"
    },
    "1361": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1363": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1364": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1365": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1367": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1368": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1369": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "POP",
      "path": "173"
    },
    "1370": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1372": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1373": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1374": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1376": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "ADD",
      "path": "173"
    },
    "1377": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1379": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1380": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1381": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1383": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1384": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1385": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "POP",
      "path": "173"
    },
    "1386": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9700,
        9705
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9655
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xD94"
    },
    "1391": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9636,
        9706
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1392": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9724,
        9728
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 17,
      "value": "0x1"
    },
    "1396": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9724,
        9728
      ],
      "op": "SWAP6",
      "path": "173"
    },
    "1397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "SWAP5",
      "path": "173"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "ERC777.transferFrom",
      "jump": "o",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1404": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1405": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7225,
        7260
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 18,
      "value": "0x586"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1409": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7253,
        7259
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1410": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7225,
        7238
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x7BB"
    },
    "1413": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7225,
        7260
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1414": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7225,
        7260
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1415": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x5A2"
    },
    "1418": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "1419": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1421": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1430": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1431": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "1433": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "ADD",
      "path": "173"
    },
    "1434": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "1437": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x166A"
    },
    "1441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7217,
        7309
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7319,
        7377
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 19,
      "value": "0x5B1"
    },
    "1446": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7325,
        7331
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7333,
        7342
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7344,
        7350
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1449": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7352,
        7356
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1450": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7358,
        7370
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1451": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7372,
        7376
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1"
    },
    "1453": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7319,
        7324
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xF68"
    },
    "1456": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7319,
        7377
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1457": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7319,
        7377
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1458": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "173"
    },
    "1459": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "173"
    },
    "1460": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "173"
    },
    "1461": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "173"
    },
    "1462": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "173"
    },
    "1463": {
      "fn": "ERC777.operatorSend",
      "jump": "o",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1464": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1465": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "DUP3",
      "path": "173",
      "statement": 20
    },
    "1475": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "AND",
      "path": "173"
    },
    "1476": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "EQ",
      "path": "173"
    },
    "1477": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "1478": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x61D"
    },
    "1481": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "1482": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1484": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1493": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1496": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "1498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1499": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "ADD",
      "path": "173"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1503": {
      "op": "DUP1"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617574686F72697A696E672073656C66206173206F706572"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "MSTORE"
    },
    "1545": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1575": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "AND",
      "path": "173"
    },
    "1576": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1578": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1579": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1580": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1581": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6008
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x5"
    },
    "1583": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1585": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1586": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1589": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1590": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "1591": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0xFF"
    },
    "1593": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "AND",
      "path": "173"
    },
    "1594": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "1595": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x66E"
    },
    "1598": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "1599": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1600": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 21,
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1603": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1604": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1605": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6065
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x7"
    },
    "1607": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1609": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1610": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1611": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1612": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1614": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1615": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1616": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "op": "SUB"
    },
    "1625": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1626": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "AND",
      "path": "173"
    },
    "1627": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "DUP5",
      "path": "173"
    },
    "1628": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1629": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1630": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "1631": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1632": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1633": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1634": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1635": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1638": {
      "op": "NOT"
    },
    "1639": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "AND",
      "path": "173"
    },
    "1640": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1641": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "1642": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x69D"
    },
    "1645": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1646": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1647": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1648": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 22,
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1651": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1652": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1653": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6130
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x6"
    },
    "1655": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1658": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1659": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1660": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1663": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1664": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "DUP6",
      "path": "173"
    },
    "1674": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "AND",
      "path": "173"
    },
    "1675": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "DUP5",
      "path": "173"
    },
    "1676": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1677": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1678": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "1679": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1680": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1681": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "1682": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1683": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1686": {
      "op": "NOT"
    },
    "1687": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "AND",
      "path": "173"
    },
    "1688": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6157,
        6161
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1"
    },
    "1690": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "OR",
      "path": "173"
    },
    "1691": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1692": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "1693": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1694": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 23,
      "value": "0x40"
    },
    "1696": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1697": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1698": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "180"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1708": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "AND",
      "path": "173"
    },
    "1709": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1710": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
    },
    "1743": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1744": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1746": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1747": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "LOG3",
      "path": "173"
    },
    "1748": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "POP",
      "path": "173"
    },
    "1749": {
      "fn": "ERC777.authorizeOperator",
      "jump": "o",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1750": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1751": {
      "fn": "ERC777.symbol",
      "offset": [
        3177,
        3190
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x60"
    },
    "1753": {
      "fn": "ERC777.symbol",
      "offset": [
        3209,
        3216
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 24,
      "value": "0x3"
    },
    "1755": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1756": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "1757": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x321"
    },
    "1760": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1761": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x171A"
    },
    "1764": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3202,
        3216
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1765": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1766": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 25,
      "value": "0x703"
    },
    "1769": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1770": {
      "fn": "ERC777.send",
      "offset": [
        4415,
        4424
      ],
      "op": "DUP5",
      "path": "173"
    },
    "1771": {
      "fn": "ERC777.send",
      "offset": [
        4426,
        4432
      ],
      "op": "DUP5",
      "path": "173"
    },
    "1772": {
      "fn": "ERC777.send",
      "offset": [
        4434,
        4438
      ],
      "op": "DUP5",
      "path": "173"
    },
    "1773": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1775": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1776": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1777": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1779": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "ADD",
      "path": "173"
    },
    "1780": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1782": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1783": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1784": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1786": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1787": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1788": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "POP",
      "path": "173"
    },
    "1789": {
      "fn": "ERC777.send",
      "offset": [
        4444,
        4448
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1"
    },
    "1791": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4400
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xF68"
    },
    "1794": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4395,
        4449
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1795": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1796": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "POP",
      "path": "173"
    },
    "1797": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "POP",
      "path": "173"
    },
    "1798": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "POP",
      "path": "173"
    },
    "1799": {
      "fn": "ERC777.send",
      "jump": "o",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1800": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1801": {
      "fn": "ERC777.transfer",
      "offset": [
        4773,
        4777
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "ERC777.transfer",
      "offset": [
        4797,
        4820
      ],
      "op": "DUP4",
      "path": "173",
      "statement": 26
    },
    "1812": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4797,
        4820
      ],
      "op": "AND",
      "path": "173"
    },
    "1813": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x730"
    },
    "1816": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "1817": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1819": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1828": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1829": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "1831": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "ADD",
      "path": "173"
    },
    "1832": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "1835": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1836": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1626"
    },
    "1839": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4789,
        4861
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1840": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1841": {
      "fn": "ERC777.transfer",
      "offset": [
        4872,
        4884
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1843": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1844": {
      "fn": "ERC777.transfer",
      "offset": [
        4872,
        4899
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "1845": {
      "fn": "ERC777.transfer",
      "offset": [
        4872,
        4899
      ],
      "op": "POP",
      "path": "173"
    },
    "1846": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 27,
      "value": "0x761"
    },
    "1849": {
      "fn": "ERC777.transfer",
      "offset": [
        4928,
        4932
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1850": {
      "fn": "ERC777.transfer",
      "offset": [
        4934,
        4938
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1851": {
      "fn": "ERC777.transfer",
      "offset": [
        4940,
        4949
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1852": {
      "fn": "ERC777.transfer",
      "offset": [
        4951,
        4957
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1853": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1855": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1856": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1857": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1859": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "ADD",
      "path": "173"
    },
    "1860": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1862": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1863": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1864": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1866": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1867": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1868": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "POP",
      "path": "173"
    },
    "1869": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1871": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1872": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1873": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1875": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "ADD",
      "path": "173"
    },
    "1876": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1878": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1879": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1880": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1882": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1883": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1884": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "POP",
      "path": "173"
    },
    "1885": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4927
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xAF7"
    },
    "1888": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4910,
        4966
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1889": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1890": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 28,
      "value": "0x78D"
    },
    "1893": {
      "fn": "ERC777.transfer",
      "offset": [
        4983,
        4987
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1894": {
      "fn": "ERC777.transfer",
      "offset": [
        4989,
        4993
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1895": {
      "fn": "ERC777.transfer",
      "offset": [
        4995,
        5004
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1896": {
      "fn": "ERC777.transfer",
      "offset": [
        5006,
        5012
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1897": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1899": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1900": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1901": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1903": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "ADD",
      "path": "173"
    },
    "1904": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1906": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1907": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1908": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1910": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1911": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1912": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "POP",
      "path": "173"
    },
    "1913": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1916": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1917": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1919": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "ADD",
      "path": "173"
    },
    "1920": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1922": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1923": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1924": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1926": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1927": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1928": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "POP",
      "path": "173"
    },
    "1929": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        4982
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xC2E"
    },
    "1932": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4977,
        5021
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1933": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1934": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 29,
      "value": "0x3A9"
    },
    "1937": {
      "fn": "ERC777.transfer",
      "offset": [
        5052,
        5056
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1938": {
      "fn": "ERC777.transfer",
      "offset": [
        5058,
        5062
      ],
      "op": "DUP3",
      "path": "173"
    },
    "1939": {
      "fn": "ERC777.transfer",
      "offset": [
        5064,
        5073
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1940": {
      "fn": "ERC777.transfer",
      "offset": [
        5075,
        5081
      ],
      "op": "DUP7",
      "path": "173"
    },
    "1941": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1943": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1944": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1945": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "ADD",
      "path": "173"
    },
    "1948": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1950": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1951": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1952": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1954": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1955": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1956": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "POP",
      "path": "173"
    },
    "1957": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1959": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "1960": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1961": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "1963": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "ADD",
      "path": "173"
    },
    "1964": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "1966": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1967": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "173"
    },
    "1968": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1970": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP2",
      "path": "173"
    },
    "1971": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "1972": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "POP",
      "path": "173"
    },
    "1973": {
      "fn": "ERC777.transfer",
      "offset": [
        5091,
        5096
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1975": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5051
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xD94"
    },
    "1978": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        5032,
        5097
      ],
      "op": "JUMP",
      "path": "173"
    },
    "1979": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "1980": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5546,
        5550
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "1982": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5593,
        5604
      ],
      "op": "DUP2",
      "path": "173",
      "statement": 30
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5604
      ],
      "op": "AND",
      "path": "173"
    },
    "1992": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5589
      ],
      "op": "DUP4",
      "path": "173"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "op": "SUB"
    },
    "2001": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5604
      ],
      "op": "AND",
      "path": "173"
    },
    "2002": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5604
      ],
      "op": "EQ",
      "path": "173"
    },
    "2003": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5701
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2004": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5701
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x826"
    },
    "2007": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5701
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2018": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "AND",
      "path": "173"
    },
    "2019": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2021": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2022": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2023": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2024": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5638
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x5"
    },
    "2026": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2029": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2031": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2032": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2033": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "2034": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0xFF"
    },
    "2036": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "AND",
      "path": "173"
    },
    "2037": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2038": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2039": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x826"
    },
    "2042": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2053": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2054": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "AND",
      "path": "173"
    },
    "2055": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2057": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2058": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2059": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2060": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5677
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x7"
    },
    "2062": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2064": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2065": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2066": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2067": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2070": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2071": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2072": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "2073": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "DUP8",
      "path": "173"
    },
    "2074": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "AND",
      "path": "173"
    },
    "2075": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2076": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2077": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "2078": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2079": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2080": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2081": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "2082": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0xFF"
    },
    "2084": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "AND",
      "path": "173"
    },
    "2085": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5652,
        5700
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2086": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2087": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2088": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x856"
    },
    "2091": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "op": "SUB"
    },
    "2101": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2102": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2103": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "AND",
      "path": "173"
    },
    "2104": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2106": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2107": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2108": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2109": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5727
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x6"
    },
    "2111": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2113": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2114": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2115": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2116": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2119": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2120": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2121": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "2122": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "DUP8",
      "path": "173"
    },
    "2123": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "AND",
      "path": "173"
    },
    "2124": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2125": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2126": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "2127": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2128": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2129": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2130": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "2131": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0xFF"
    },
    "2133": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "AND",
      "path": "173"
    },
    "2134": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2135": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5750
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "2136": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "fn": "ERC777.isOperatorFor",
      "jump": "o",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2141": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "DUP2",
      "path": "173",
      "statement": 31
    },
    "2151": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "AND",
      "path": "173"
    },
    "2152": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "2153": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "EQ",
      "path": "173"
    },
    "2154": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2155": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x8C0"
    },
    "2158": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2159": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2170": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "2175": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2176": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "ADD",
      "path": "173"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH32",
      "value": "0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "2239": {
      "op": "JUMP"
    },
    "2240": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2250": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "AND",
      "path": "173"
    },
    "2251": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2254": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2255": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2256": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6478
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x5"
    },
    "2258": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2260": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2261": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2263": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2264": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2265": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "2266": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0xFF"
    },
    "2268": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "AND",
      "path": "173"
    },
    "2269": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2270": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x914"
    },
    "2273": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "2275": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 32,
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2278": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2279": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2280": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6528
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x7"
    },
    "2282": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2285": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2286": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2287": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2289": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2290": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2291": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "DUP6",
      "path": "173"
    },
    "2301": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "AND",
      "path": "173"
    },
    "2302": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2303": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2304": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2305": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "2306": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2307": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2308": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2309": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2310": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2313": {
      "op": "NOT"
    },
    "2314": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "AND",
      "path": "173"
    },
    "2315": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6555,
        6559
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1"
    },
    "2317": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "OR",
      "path": "173"
    },
    "2318": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2319": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "2320": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x940"
    },
    "2323": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2324": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "2326": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 33,
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2329": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2330": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2331": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6607
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x6"
    },
    "2333": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2335": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2336": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2337": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2338": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2340": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2341": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2342": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "DUP6",
      "path": "173"
    },
    "2352": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "AND",
      "path": "173"
    },
    "2353": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2354": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2355": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2356": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "2357": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2358": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2359": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2360": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2361": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2364": {
      "op": "NOT"
    },
    "2365": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "AND",
      "path": "173"
    },
    "2366": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2367": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "2368": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2369": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 34,
      "value": "0x40"
    },
    "2371": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2372": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "2373": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "180"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2383": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "AND",
      "path": "173"
    },
    "2384": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2385": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
    },
    "2418": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2419": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2421": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2422": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "LOG3",
      "path": "173"
    },
    "2423": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "POP",
      "path": "173"
    },
    "2424": {
      "fn": "ERC777.revokeOperator",
      "jump": "o",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2425": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2426": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7686,
        7722
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 35,
      "value": "0x983"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "2430": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7714,
        7721
      ],
      "op": "DUP6",
      "path": "173"
    },
    "2431": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7686,
        7699
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x7BB"
    },
    "2434": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7686,
        7722
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2435": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7686,
        7722
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2436": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x99F"
    },
    "2439": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2440": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2451": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2452": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "2454": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "ADD",
      "path": "173"
    },
    "2455": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "2458": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2459": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x166A"
    },
    "2462": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7678,
        7771
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2463": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2464": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7781,
        7823
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 36,
      "value": "0x9AB"
    },
    "2467": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7787,
        7794
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2468": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7796,
        7802
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2469": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7804,
        7808
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2470": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7810,
        7822
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2471": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7781,
        7786
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x104B"
    },
    "2474": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7781,
        7823
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2475": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7781,
        7823
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2476": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "173"
    },
    "2477": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "173"
    },
    "2478": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "173"
    },
    "2479": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "173"
    },
    "2480": {
      "fn": "ERC777.operatorBurn",
      "jump": "o",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2481": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2482": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 37,
      "value": "0x9CC"
    },
    "2485": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "2486": {
      "fn": "ERC777.burn",
      "offset": [
        5359,
        5365
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2487": {
      "fn": "ERC777.burn",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2488": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2490": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2491": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2492": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2494": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "ADD",
      "path": "173"
    },
    "2495": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2497": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2498": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2499": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2501": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2502": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2503": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "POP",
      "path": "173"
    },
    "2504": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5344
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x104B"
    },
    "2507": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5339,
        5376
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2508": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2509": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "POP",
      "path": "173"
    },
    "2510": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "POP",
      "path": "173"
    },
    "2511": {
      "fn": "ERC777.burn",
      "jump": "o",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2512": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "fn": "ERC777._approve",
      "offset": [
        14995,
        15015
      ],
      "op": "DUP4",
      "path": "173",
      "statement": 38
    },
    "2522": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14995,
        15015
      ],
      "op": "AND",
      "path": "173"
    },
    "2523": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xA34"
    },
    "2526": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2527": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2538": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2541": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "2543": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2544": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "ADD",
      "path": "173"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "MSTORE"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "2611": {
      "op": "JUMP"
    },
    "2612": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC777._approve",
      "offset": [
        15075,
        15096
      ],
      "op": "DUP3",
      "path": "173",
      "statement": 39
    },
    "2622": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15075,
        15096
      ],
      "op": "AND",
      "path": "173"
    },
    "2623": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xA96"
    },
    "2626": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2627": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2629": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2638": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2644": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "ADD",
      "path": "173"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F766520746F20746865207A65726F2061646472"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "2709": {
      "op": "JUMP"
    },
    "2710": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2717": {
      "op": "SHL"
    },
    "2718": {
      "op": "SUB"
    },
    "2719": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP4",
      "path": "173",
      "statement": 40
    },
    "2720": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2721": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "AND",
      "path": "173"
    },
    "2722": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2725": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2726": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2727": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15158
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x8"
    },
    "2729": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2731": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2732": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2733": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2734": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2736": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2737": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2738": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2739": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP5",
      "path": "173"
    },
    "2740": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP8",
      "path": "173"
    },
    "2741": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "AND",
      "path": "173"
    },
    "2742": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2743": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP5",
      "path": "173"
    },
    "2744": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2745": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP5",
      "path": "173"
    },
    "2746": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2747": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2748": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "2749": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2750": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2751": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "2752": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15183
      ],
      "op": "DUP6",
      "path": "173"
    },
    "2753": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15183
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2754": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15183
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "2755": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP1",
      "path": "173",
      "statement": 41
    },
    "2756": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2757": {
      "op": "DUP5"
    },
    "2758": {
      "op": "DUP2"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2793": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2797": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2798": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2799": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "2800": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SUB",
      "path": "173"
    },
    "2801": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2802": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "LOG3",
      "path": "173"
    },
    "2803": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "POP",
      "path": "173"
    },
    "2804": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "POP",
      "path": "173"
    },
    "2805": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "POP",
      "path": "173"
    },
    "2806": {
      "fn": "ERC777._approve",
      "jump": "o",
      "offset": [
        14872,
        15237
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2807": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2808": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2810": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2820": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "op": "DUP7"
    },
    "2830": {
      "op": "AND"
    },
    "2831": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "2833": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2834": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "173"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "offset": [
        1476,
        1507
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15919,
        15938
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2876": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15919,
        15938
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2877": {
      "offset": [
        1227,
        1269
      ],
      "op": "PUSH20",
      "path": "173",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "2898": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        1227,
        1269
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2899": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        15982
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xAABBB8CA"
    },
    "2904": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        15982
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "2910": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2912": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2913": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2914": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP4",
      "path": "173"
    },
    "2915": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SUB",
      "path": "173"
    },
    "2916": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2917": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP7",
      "path": "173"
    },
    "2918": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2919": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "EXTCODESIZE",
      "path": "173"
    },
    "2920": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2921": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2922": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2923": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xB73"
    },
    "2926": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2927": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2929": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2930": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "REVERT",
      "path": "173"
    },
    "2931": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2932": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "173"
    },
    "2933": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "GAS",
      "path": "173"
    },
    "2934": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "STATICCALL",
      "path": "173"
    },
    "2935": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2936": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2937": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "2938": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xB87"
    },
    "2941": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "2942": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "2943": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2945": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2946": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATACOPY",
      "path": "173"
    },
    "2947": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "2948": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "2950": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "REVERT",
      "path": "173"
    },
    "2951": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2952": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "173"
    },
    "2953": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "173"
    },
    "2954": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "173"
    },
    "2955": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "173"
    },
    "2956": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2958": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "2959": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "2960": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1F"
    },
    "2962": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "NOT",
      "path": "173"
    },
    "2963": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1F"
    },
    "2965": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2966": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "173"
    },
    "2967": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "AND",
      "path": "173"
    },
    "2968": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP3",
      "path": "173"
    },
    "2969": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "173"
    },
    "2970": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "173"
    },
    "2971": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "2973": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "2974": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "173"
    },
    "2975": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2976": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "173"
    },
    "2977": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2978": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xBAB"
    },
    "2981": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "2982": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2983": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x12A9"
    },
    "2986": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMP",
      "path": "173"
    },
    "2987": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "2988": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15919,
        16019
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "2989": {
      "op": "POP"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16033,
        16058
      ],
      "op": "DUP2",
      "path": "173"
    },
    "2999": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16033,
        16058
      ],
      "op": "AND",
      "path": "173"
    },
    "3000": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16033,
        16058
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3001": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16029,
        16176
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xC25"
    },
    "3004": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16029,
        16176
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3005": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 42,
      "value": "0x40"
    },
    "3007": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3008": {
      "op": "PUSH4",
      "value": "0x3AD5CBC1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3017": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "op": "SUB"
    },
    "3026": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3027": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "AND",
      "path": "173"
    },
    "3028": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3029": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0x75AB9782"
    },
    "3034": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3035": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xBF2"
    },
    "3038": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3039": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16114,
        16122
      ],
      "op": "DUP11",
      "path": "173"
    },
    "3040": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16114,
        16122
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3041": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16124,
        16128
      ],
      "op": "DUP11",
      "path": "173"
    },
    "3042": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16124,
        16128
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3043": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16130,
        16132
      ],
      "op": "DUP11",
      "path": "173"
    },
    "3044": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16130,
        16132
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3045": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16134,
        16140
      ],
      "op": "DUP11",
      "path": "173"
    },
    "3046": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16134,
        16140
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3047": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16142,
        16150
      ],
      "op": "DUP11",
      "path": "173"
    },
    "3048": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16142,
        16150
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3049": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16152,
        16164
      ],
      "op": "DUP11",
      "path": "173"
    },
    "3050": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16152,
        16164
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3051": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "3053": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ADD",
      "path": "173"
    },
    "3054": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x156C"
    },
    "3057": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3058": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3059": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3061": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3063": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3064": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3065": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP4",
      "path": "173"
    },
    "3066": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "SUB",
      "path": "173"
    },
    "3067": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3068": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3070": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3071": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3072": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "EXTCODESIZE",
      "path": "173"
    },
    "3073": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3074": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3075": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3076": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xC0C"
    },
    "3079": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3080": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3082": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3083": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "REVERT",
      "path": "173"
    },
    "3084": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3085": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "173"
    },
    "3086": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "GAS",
      "path": "173"
    },
    "3087": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "CALL",
      "path": "173"
    },
    "3088": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3089": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3090": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3091": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xC20"
    },
    "3094": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3095": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3096": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3098": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3099": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "RETURNDATACOPY",
      "path": "173"
    },
    "3100": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3101": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3103": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "REVERT",
      "path": "173"
    },
    "3104": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3105": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "173"
    },
    "3106": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "173"
    },
    "3107": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "173"
    },
    "3108": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "173"
    },
    "3109": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16029,
        16176
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3110": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15909,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3111": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3112": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3113": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3114": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3115": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3116": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "173"
    },
    "3117": {
      "fn": "ERC777._callTokensToSend",
      "jump": "o",
      "offset": [
        15710,
        16182
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3118": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "op": "SUB"
    },
    "3127": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "DUP6",
      "path": "173"
    },
    "3128": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "AND",
      "path": "173"
    },
    "3129": {
      "fn": "ERC777._move",
      "offset": [
        14379,
        14398
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3131": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3132": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3133": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3134": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "3136": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3137": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3138": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3139": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3141": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3142": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "3143": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "3144": {
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "DUP4",
      "path": "173",
      "statement": 43
    },
    "3145": {
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3146": {
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "LT",
      "path": "173"
    },
    "3147": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3148": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xCA7"
    },
    "3151": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3152": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3154": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3161": {
      "op": "SHL"
    },
    "3162": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3163": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "3168": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3169": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "ADD",
      "path": "173"
    },
    "3170": {
      "op": "MSTORE"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3175": {
      "op": "DUP3"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "MSTORE"
    },
    "3178": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3213": {
      "op": "DUP3"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "op": "MSTORE"
    },
    "3216": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "3238": {
      "op": "JUMP"
    },
    "3239": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "SUB"
    },
    "3248": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP1",
      "path": "173",
      "statement": 44
    },
    "3249": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3250": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "AND",
      "path": "173"
    },
    "3251": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14542
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3253": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3254": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3255": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3256": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "3258": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3259": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3260": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3261": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3263": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3264": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3265": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "3266": {
      "fn": "ERC777._move",
      "offset": [
        14551,
        14571
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3267": {
      "fn": "ERC777._move",
      "offset": [
        14551,
        14571
      ],
      "op": "DUP6",
      "path": "173"
    },
    "3268": {
      "fn": "ERC777._move",
      "offset": [
        14551,
        14571
      ],
      "op": "SUB",
      "path": "173"
    },
    "3269": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14571
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3270": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14571
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "3271": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "SWAP2",
      "path": "173",
      "statement": 45
    },
    "3272": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3273": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "AND",
      "path": "173"
    },
    "3274": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3275": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3276": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3277": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3278": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "3279": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3280": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "3281": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "DUP7",
      "path": "173"
    },
    "3282": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "3283": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14542
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3284": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xCDE"
    },
    "3287": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3288": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "DUP5",
      "path": "173"
    },
    "3289": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3290": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x16EB"
    },
    "3293": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14591,
        14614
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3294": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3295": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "3296": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "POP",
      "path": "173"
    },
    "3297": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "POP",
      "path": "173"
    },
    "3298": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3299": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3300": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "3301": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "POP",
      "path": "173"
    },
    "3302": {
      "fn": "ERC777._move",
      "offset": [
        14651,
        14653
      ],
      "op": "DUP5",
      "path": "173",
      "statement": 46
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3309": {
      "op": "SHL"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "AND",
      "path": "173"
    },
    "3312": {
      "fn": "ERC777._move",
      "offset": [
        14645,
        14649
      ],
      "op": "DUP7",
      "path": "173"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "AND",
      "path": "173"
    },
    "3322": {
      "fn": "ERC777._move",
      "offset": [
        14635,
        14643
      ],
      "op": "DUP9",
      "path": "173"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "op": "SUB"
    },
    "3331": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "AND",
      "path": "173"
    },
    "3332": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
    },
    "3365": {
      "fn": "ERC777._move",
      "offset": [
        14655,
        14661
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3366": {
      "fn": "ERC777._move",
      "offset": [
        14663,
        14671
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3367": {
      "fn": "ERC777._move",
      "offset": [
        14673,
        14685
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3368": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3370": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3371": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xD36"
    },
    "3374": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "3375": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "3376": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "3377": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3378": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x16B6"
    },
    "3381": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14630,
        14686
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3382": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3383": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3385": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3386": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3387": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "3388": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SUB",
      "path": "173"
    },
    "3389": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3390": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "LOG4",
      "path": "173"
    },
    "3391": {
      "fn": "ERC777._move",
      "offset": [
        14716,
        14718
      ],
      "op": "DUP5",
      "path": "173",
      "statement": 47
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "op": "SUB"
    },
    "3400": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "AND",
      "path": "173"
    },
    "3401": {
      "fn": "ERC777._move",
      "offset": [
        14710,
        14714
      ],
      "op": "DUP7",
      "path": "173"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3408": {
      "op": "SHL"
    },
    "3409": {
      "op": "SUB"
    },
    "3410": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "AND",
      "path": "173"
    },
    "3411": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3444": {
      "fn": "ERC777._move",
      "offset": [
        14720,
        14726
      ],
      "op": "DUP7",
      "path": "173"
    },
    "3445": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3447": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3448": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xD83"
    },
    "3451": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3456": {
      "op": "ADD"
    },
    "3457": {
      "op": "SWAP1"
    },
    "3458": {
      "op": "JUMP"
    },
    "3459": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3460": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3462": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3463": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3464": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "3465": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SUB",
      "path": "173"
    },
    "3466": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3467": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "LOG3",
      "path": "173"
    },
    "3468": {
      "fn": "ERC777._move",
      "offset": [
        14310,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3469": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3470": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3471": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3472": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3473": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3474": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "173"
    },
    "3475": {
      "fn": "ERC777._move",
      "jump": "o",
      "offset": [
        14123,
        14734
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3476": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3477": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3479": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3480": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3487": {
      "op": "SHL"
    },
    "3488": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3489": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3496": {
      "op": "SHL"
    },
    "3497": {
      "op": "SUB"
    },
    "3498": {
      "op": "DUP7"
    },
    "3499": {
      "op": "AND"
    },
    "3500": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "3502": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3503": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "173"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "offset": [
        1573,
        1607
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3540": {
      "op": "DUP3"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "MSTORE"
    },
    "3543": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17116,
        17135
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3545": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17116,
        17135
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3546": {
      "offset": [
        1227,
        1269
      ],
      "op": "PUSH20",
      "path": "173",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3567": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        1227,
        1269
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3568": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17179
      ],
      "op": "PUSH4",
      "path": "173",
      "value": "0xAABBB8CA"
    },
    "3573": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17179
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3576": {
      "op": "ADD"
    },
    "3577": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "3579": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3581": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3582": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3583": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP4",
      "path": "173"
    },
    "3584": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SUB",
      "path": "173"
    },
    "3585": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3586": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP7",
      "path": "173"
    },
    "3587": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3588": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "EXTCODESIZE",
      "path": "173"
    },
    "3589": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3590": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3591": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3592": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xE10"
    },
    "3595": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3596": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3598": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3599": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "REVERT",
      "path": "173"
    },
    "3600": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3601": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "173"
    },
    "3602": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "GAS",
      "path": "173"
    },
    "3603": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "STATICCALL",
      "path": "173"
    },
    "3604": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3605": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3606": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3607": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xE24"
    },
    "3610": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3611": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3612": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3614": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3615": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATACOPY",
      "path": "173"
    },
    "3616": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3617": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3619": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "REVERT",
      "path": "173"
    },
    "3620": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3621": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "173"
    },
    "3622": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "173"
    },
    "3623": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "173"
    },
    "3624": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "173"
    },
    "3625": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3627": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3628": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3629": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1F"
    },
    "3631": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "NOT",
      "path": "173"
    },
    "3632": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x1F"
    },
    "3634": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3635": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "173"
    },
    "3636": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "AND",
      "path": "173"
    },
    "3637": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3638": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "173"
    },
    "3639": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3640": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3642": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3643": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "173"
    },
    "3644": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3645": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "173"
    },
    "3646": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3647": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xE48"
    },
    "3650": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "3651": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3652": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x12A9"
    },
    "3655": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3656": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3657": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17116,
        17217
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3665": {
      "op": "SHL"
    },
    "3666": {
      "op": "SUB"
    },
    "3667": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17231,
        17256
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3668": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17231,
        17256
      ],
      "op": "AND",
      "path": "173"
    },
    "3669": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17231,
        17256
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3670": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xEC4"
    },
    "3673": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3674": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 48,
      "value": "0x40"
    },
    "3676": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3677": {
      "op": "PUSH3",
      "value": "0x23DE29"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3683": {
      "op": "SHL"
    },
    "3684": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3685": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "op": "SUB"
    },
    "3694": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3695": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "AND",
      "path": "173"
    },
    "3696": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3697": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "PUSH3",
      "path": "173",
      "value": "0x23DE29"
    },
    "3701": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3702": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xE8D"
    },
    "3705": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3706": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17317,
        17325
      ],
      "op": "DUP12",
      "path": "173"
    },
    "3707": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17317,
        17325
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3708": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17327,
        17331
      ],
      "op": "DUP12",
      "path": "173"
    },
    "3709": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17327,
        17331
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3710": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17333,
        17335
      ],
      "op": "DUP12",
      "path": "173"
    },
    "3711": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17333,
        17335
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3712": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17337,
        17343
      ],
      "op": "DUP12",
      "path": "173"
    },
    "3713": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17337,
        17343
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3714": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17345,
        17353
      ],
      "op": "DUP12",
      "path": "173"
    },
    "3715": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17345,
        17353
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3716": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17355,
        17367
      ],
      "op": "DUP12",
      "path": "173"
    },
    "3717": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17355,
        17367
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "3718": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "3720": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ADD",
      "path": "173"
    },
    "3721": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x156C"
    },
    "3724": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3725": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3726": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3728": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3730": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3731": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3732": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP4",
      "path": "173"
    },
    "3733": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "SUB",
      "path": "173"
    },
    "3734": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3735": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3737": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP8",
      "path": "173"
    },
    "3738": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3739": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "EXTCODESIZE",
      "path": "173"
    },
    "3740": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3741": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3742": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3743": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xEA7"
    },
    "3746": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3747": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3749": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3750": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "REVERT",
      "path": "173"
    },
    "3751": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3752": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "173"
    },
    "3753": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "GAS",
      "path": "173"
    },
    "3754": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "CALL",
      "path": "173"
    },
    "3755": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3756": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3757": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3758": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xEBB"
    },
    "3761": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3762": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3763": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3765": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "173"
    },
    "3766": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "RETURNDATACOPY",
      "path": "173"
    },
    "3767": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "RETURNDATASIZE",
      "path": "173"
    },
    "3768": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "3770": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "REVERT",
      "path": "173"
    },
    "3771": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3772": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "173"
    },
    "3773": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "173"
    },
    "3774": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "173"
    },
    "3775": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "173"
    },
    "3776": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xF5E"
    },
    "3779": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3780": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3781": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17389,
        17408
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3782": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17385,
        17541
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "3783": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17385,
        17541
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xF5E"
    },
    "3786": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17385,
        17541
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "op": "SUB"
    },
    "3795": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17433,
        17446
      ],
      "op": "DUP7",
      "path": "173",
      "statement": 49
    },
    "3796": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17433,
        17446
      ],
      "op": "AND",
      "path": "173"
    },
    "3797": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "178"
    },
    "3798": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "178",
      "statement": 50
    },
    "3799": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xF5E"
    },
    "3802": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3803": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3805": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3814": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3817": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "3819": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3820": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "ADD",
      "path": "173"
    },
    "3821": {
      "op": "MSTORE"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3826": {
      "op": "DUP3"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "PUSH32",
      "value": "0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3864": {
      "op": "DUP3"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "MSTORE"
    },
    "3867": {
      "op": "PUSH32",
      "value": "0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3902": {
      "op": "DUP3"
    },
    "3903": {
      "op": "ADD"
    },
    "3904": {
      "op": "MSTORE"
    },
    "3905": {
      "op": "PUSH13",
      "value": "0x1AD95B9CD49958DA5C1A595B9D"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3924": {
      "op": "DUP3"
    },
    "3925": {
      "op": "ADD"
    },
    "3926": {
      "op": "MSTORE"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "3933": {
      "op": "JUMP"
    },
    "3934": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3935": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17106,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3936": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3937": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3938": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3939": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3940": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3941": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3942": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "173"
    },
    "3943": {
      "fn": "ERC777._callTokensReceived",
      "jump": "o",
      "offset": [
        16871,
        17547
      ],
      "op": "JUMP",
      "path": "173"
    },
    "3944": {
      "fn": "ERC777._send",
      "offset": [
        12351,
        13001
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "fn": "ERC777._send",
      "offset": [
        12573,
        12591
      ],
      "op": "DUP7",
      "path": "173",
      "statement": 51
    },
    "3954": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12573,
        12591
      ],
      "op": "AND",
      "path": "173"
    },
    "3955": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xFC9"
    },
    "3958": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "3959": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "3961": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "3962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3968": {
      "op": "SHL"
    },
    "3969": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "DUP2",
      "path": "173"
    },
    "3970": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3973": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "3975": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "DUP3",
      "path": "173"
    },
    "3976": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "ADD",
      "path": "173"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3982": {
      "op": "DUP3"
    },
    "3983": {
      "op": "ADD"
    },
    "3984": {
      "op": "MSTORE"
    },
    "3985": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "MSTORE"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4031": {
      "op": "DUP3"
    },
    "4032": {
      "op": "ADD"
    },
    "4033": {
      "op": "MSTORE"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "4040": {
      "op": "JUMP"
    },
    "4041": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "SUB"
    },
    "4050": {
      "fn": "ERC777._send",
      "offset": [
        12648,
        12664
      ],
      "op": "DUP6",
      "path": "173",
      "statement": 52
    },
    "4051": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12648,
        12664
      ],
      "op": "AND",
      "path": "173"
    },
    "4052": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x101F"
    },
    "4055": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "4056": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4058": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4067": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4070": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "4072": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "DUP3",
      "path": "173"
    },
    "4073": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "ADD",
      "path": "173"
    },
    "4074": {
      "op": "DUP2"
    },
    "4075": {
      "op": "SWAP1"
    },
    "4076": {
      "op": "MSTORE"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4079": {
      "op": "DUP3"
    },
    "4080": {
      "op": "ADD"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4117": {
      "op": "DUP3"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "MSTORE"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4122": {
      "op": "ADD"
    },
    "4123": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "4126": {
      "op": "JUMP"
    },
    "4127": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4128": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "4129": {
      "fn": "ERC777._send",
      "offset": [
        12754,
        12823
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 53,
      "value": "0x102E"
    },
    "4132": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "180"
    },
    "4133": {
      "fn": "ERC777._send",
      "offset": [
        12782,
        12786
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4134": {
      "fn": "ERC777._send",
      "offset": [
        12788,
        12790
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4135": {
      "fn": "ERC777._send",
      "offset": [
        12792,
        12798
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4136": {
      "fn": "ERC777._send",
      "offset": [
        12800,
        12808
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4137": {
      "fn": "ERC777._send",
      "offset": [
        12810,
        12822
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4138": {
      "fn": "ERC777._send",
      "offset": [
        12754,
        12771
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xAF7"
    },
    "4141": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12754,
        12823
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4142": {
      "fn": "ERC777._send",
      "offset": [
        12754,
        12823
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4143": {
      "fn": "ERC777._send",
      "offset": [
        12834,
        12891
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 54,
      "value": "0x103C"
    },
    "4146": {
      "fn": "ERC777._send",
      "offset": [
        12840,
        12848
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4147": {
      "fn": "ERC777._send",
      "offset": [
        12850,
        12854
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4148": {
      "fn": "ERC777._send",
      "offset": [
        12856,
        12858
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4149": {
      "fn": "ERC777._send",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4150": {
      "fn": "ERC777._send",
      "offset": [
        12868,
        12876
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4151": {
      "fn": "ERC777._send",
      "offset": [
        12878,
        12890
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4152": {
      "fn": "ERC777._send",
      "offset": [
        12834,
        12839
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xC2E"
    },
    "4155": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12834,
        12891
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4156": {
      "fn": "ERC777._send",
      "offset": [
        12834,
        12891
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4157": {
      "fn": "ERC777._send",
      "offset": [
        12902,
        12994
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 55,
      "value": "0xC25"
    },
    "4160": {
      "fn": "ERC777._send",
      "offset": [
        12922,
        12930
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4161": {
      "fn": "ERC777._send",
      "offset": [
        12932,
        12936
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4162": {
      "fn": "ERC777._send",
      "offset": [
        12938,
        12940
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4163": {
      "fn": "ERC777._send",
      "offset": [
        12942,
        12948
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4164": {
      "fn": "ERC777._send",
      "offset": [
        12950,
        12958
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4165": {
      "fn": "ERC777._send",
      "offset": [
        12960,
        12972
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4166": {
      "fn": "ERC777._send",
      "offset": [
        12974,
        12993
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4167": {
      "fn": "ERC777._send",
      "offset": [
        12902,
        12921
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xD94"
    },
    "4170": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12902,
        12994
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4171": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "op": "SUB"
    },
    "4180": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13488
      ],
      "op": "DUP5",
      "path": "173",
      "statement": 56
    },
    "4181": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13488
      ],
      "op": "AND",
      "path": "173"
    },
    "4182": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x10AC"
    },
    "4185": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "4186": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4188": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4195": {
      "op": "SHL"
    },
    "4196": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4197": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4200": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "4202": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "DUP3",
      "path": "173"
    },
    "4203": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "ADD",
      "path": "173"
    },
    "4204": {
      "op": "MSTORE"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4209": {
      "op": "DUP3"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "MSTORE"
    },
    "4212": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4247": {
      "op": "DUP3"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4255": {
      "op": "SHL"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4258": {
      "op": "DUP3"
    },
    "4259": {
      "op": "ADD"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "4267": {
      "op": "JUMP"
    },
    "4268": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4269": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "4270": {
      "fn": "ERC777._burn",
      "offset": [
        13580,
        13653
      ],
      "op": "PUSH2",
      "path": "173",
      "statement": 57,
      "value": "0x10BC"
    },
    "4273": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "180"
    },
    "4274": {
      "fn": "ERC777._burn",
      "offset": [
        13608,
        13612
      ],
      "op": "DUP7",
      "path": "173"
    },
    "4275": {
      "fn": "ERC777._burn",
      "offset": [
        13538,
        13554
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "4277": {
      "fn": "ERC777._burn",
      "offset": [
        13626,
        13632
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4278": {
      "fn": "ERC777._burn",
      "offset": [
        13634,
        13638
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4279": {
      "fn": "ERC777._burn",
      "offset": [
        13640,
        13652
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4280": {
      "fn": "ERC777._burn",
      "offset": [
        13580,
        13597
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0xAF7"
    },
    "4283": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13580,
        13653
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4284": {
      "fn": "ERC777._burn",
      "offset": [
        13580,
        13653
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "op": "SUB"
    },
    "4293": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "DUP6",
      "path": "173"
    },
    "4294": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "AND",
      "path": "173"
    },
    "4295": {
      "fn": "ERC777._burn",
      "offset": [
        13765,
        13784
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "4297": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4298": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4299": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4300": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "4302": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4303": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4304": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4305": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4307": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4308": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "4309": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "4310": {
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "DUP5",
      "path": "173",
      "statement": 58
    },
    "4311": {
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4312": {
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "LT",
      "path": "173"
    },
    "4313": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "ISZERO",
      "path": "173"
    },
    "4314": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1131"
    },
    "4317": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "JUMPI",
      "path": "173"
    },
    "4318": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4320": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4327": {
      "op": "SHL"
    },
    "4328": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4329": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4332": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x4"
    },
    "4334": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "DUP3",
      "path": "173"
    },
    "4335": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "ADD",
      "path": "173"
    },
    "4336": {
      "op": "MSTORE"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "ADD"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4379": {
      "op": "DUP3"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "MSTORE"
    },
    "4382": {
      "op": "PUSH3",
      "value": "0x6E6365"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4391": {
      "op": "DUP3"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x3DB"
    },
    "4400": {
      "op": "JUMP"
    },
    "4401": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4408": {
      "op": "SHL"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP7",
      "path": "173",
      "statement": 59
    },
    "4411": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "AND",
      "path": "173"
    },
    "4412": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13924
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "4414": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4415": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4416": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4417": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x20"
    },
    "4419": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4420": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4421": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "MSTORE",
      "path": "173"
    },
    "4422": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4424": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4425": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "KECCAK256",
      "path": "173"
    },
    "4426": {
      "fn": "ERC777._burn",
      "offset": [
        13933,
        13953
      ],
      "op": "DUP7",
      "path": "173"
    },
    "4427": {
      "fn": "ERC777._burn",
      "offset": [
        13933,
        13953
      ],
      "op": "DUP4",
      "path": "173"
    },
    "4428": {
      "fn": "ERC777._burn",
      "offset": [
        13933,
        13953
      ],
      "op": "SUB",
      "path": "173"
    },
    "4429": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13953
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4430": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13953
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "4431": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13985
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 60,
      "value": "0x1"
    },
    "4433": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "DUP1",
      "path": "173"
    },
    "4434": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SLOAD",
      "path": "173"
    },
    "4435": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4436": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "4437": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13924
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4438": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1160"
    },
    "4441": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4442": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "DUP5",
      "path": "173"
    },
    "4443": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4444": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x1703"
    },
    "4447": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13973,
        13995
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4448": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4449": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "4450": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "POP",
      "path": "173"
    },
    "4451": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "POP",
      "path": "173"
    },
    "4452": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "DUP2",
      "path": "173"
    },
    "4453": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4454": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SSTORE",
      "path": "173"
    },
    "4455": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "POP",
      "path": "173"
    },
    "4456": {
      "fn": "ERC777._burn",
      "offset": [
        14028,
        14032
      ],
      "op": "DUP6",
      "path": "173",
      "statement": 61
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "op": "SUB"
    },
    "4465": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "AND",
      "path": "173"
    },
    "4466": {
      "fn": "ERC777._burn",
      "offset": [
        14018,
        14026
      ],
      "op": "DUP3",
      "path": "173"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4473": {
      "op": "SHL"
    },
    "4474": {
      "op": "SUB"
    },
    "4475": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "AND",
      "path": "173"
    },
    "4476": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
    },
    "4509": {
      "fn": "ERC777._burn",
      "offset": [
        14034,
        14040
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4510": {
      "fn": "ERC777._burn",
      "offset": [
        14042,
        14046
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4511": {
      "fn": "ERC777._burn",
      "offset": [
        14048,
        14060
      ],
      "op": "DUP8",
      "path": "173"
    },
    "4512": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4514": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4515": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x11AE"
    },
    "4518": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP4",
      "path": "173"
    },
    "4519": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP3",
      "path": "173"
    },
    "4520": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "4521": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4522": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH2",
      "path": "173",
      "value": "0x16B6"
    },
    "4525": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        14011,
        14061
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4526": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "JUMPDEST",
      "path": "173"
    },
    "4527": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4529": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4530": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "DUP1",
      "path": "173"
    },
    "4531": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "4532": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SUB",
      "path": "173"
    },
    "4533": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4534": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "LOG3",
      "path": "173"
    },
    "4535": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "PUSH1",
      "path": "173",
      "statement": 62,
      "value": "0x40"
    },
    "4537": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4538": {
      "op": "DUP6"
    },
    "4539": {
      "op": "DUP2"
    },
    "4540": {
      "op": "MSTORE"
    },
    "4541": {
      "fn": "ERC777._burn",
      "offset": [
        14099,
        14100
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x0"
    },
    "4543": {
      "fn": "ERC777._burn",
      "offset": [
        14099,
        14100
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4550": {
      "op": "SHL"
    },
    "4551": {
      "op": "SUB"
    },
    "4552": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "DUP9",
      "path": "173"
    },
    "4553": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "AND",
      "path": "173"
    },
    "4554": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4555": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "PUSH32",
      "path": "173",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4588": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "PUSH1",
      "path": "173",
      "value": "0x40"
    },
    "4594": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "MLOAD",
      "path": "173"
    },
    "4595": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "DUP1",
      "path": "173"
    },
    "4596": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP2",
      "path": "173"
    },
    "4597": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SUB",
      "path": "173"
    },
    "4598": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP1",
      "path": "173"
    },
    "4599": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "LOG3",
      "path": "173"
    },
    "4600": {
      "fn": "ERC777._burn",
      "offset": [
        13452,
        14117
      ],
      "op": "POP",
      "path": "173"
    },
    "4601": {
      "fn": "ERC777._burn",
      "offset": [
        13452,
        14117
      ],
      "op": "POP",
      "path": "173"
    },
    "4602": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "173"
    },
    "4603": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "173"
    },
    "4604": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "173"
    },
    "4605": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "173"
    },
    "4606": {
      "fn": "ERC777._burn",
      "jump": "o",
      "offset": [
        13306,
        14117
      ],
      "op": "JUMP",
      "path": "173"
    },
    "4607": {
      "op": "JUMPDEST"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4613": {
      "op": "DUP4"
    },
    "4614": {
      "op": "ADD"
    },
    "4615": {
      "op": "SLT"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4619": {
      "op": "JUMPI"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "DUP1"
    },
    "4623": {
      "op": "REVERT"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "CALLDATALOAD"
    },
    "4627": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4636": {
      "op": "DUP1"
    },
    "4637": {
      "op": "DUP3"
    },
    "4638": {
      "op": "GT"
    },
    "4639": {
      "op": "ISZERO"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x122B"
    },
    "4643": {
      "op": "JUMPI"
    },
    "4644": {
      "op": "PUSH2",
      "value": "0x122B"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0x176B"
    },
    "4650": {
      "jump": "i",
      "op": "JUMP"
    },
    "4651": {
      "op": "JUMPDEST"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4654": {
      "op": "MLOAD"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4657": {
      "op": "DUP4"
    },
    "4658": {
      "op": "ADD"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4661": {
      "op": "NOT"
    },
    "4662": {
      "op": "SWAP1"
    },
    "4663": {
      "op": "DUP2"
    },
    "4664": {
      "op": "AND"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4667": {
      "op": "ADD"
    },
    "4668": {
      "op": "AND"
    },
    "4669": {
      "op": "DUP2"
    },
    "4670": {
      "op": "ADD"
    },
    "4671": {
      "op": "SWAP1"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "DUP3"
    },
    "4674": {
      "op": "GT"
    },
    "4675": {
      "op": "DUP2"
    },
    "4676": {
      "op": "DUP4"
    },
    "4677": {
      "op": "LT"
    },
    "4678": {
      "op": "OR"
    },
    "4679": {
      "op": "ISZERO"
    },
    "4680": {
      "op": "PUSH2",
      "value": "0x1253"
    },
    "4683": {
      "op": "JUMPI"
    },
    "4684": {
      "op": "PUSH2",
      "value": "0x1253"
    },
    "4687": {
      "op": "PUSH2",
      "value": "0x176B"
    },
    "4690": {
      "jump": "i",
      "op": "JUMP"
    },
    "4691": {
      "op": "JUMPDEST"
    },
    "4692": {
      "op": "DUP2"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4695": {
      "op": "MSTORE"
    },
    "4696": {
      "op": "DUP4"
    },
    "4697": {
      "op": "DUP2"
    },
    "4698": {
      "op": "MSTORE"
    },
    "4699": {
      "op": "DUP7"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4702": {
      "op": "DUP6"
    },
    "4703": {
      "op": "DUP9"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "ADD"
    },
    "4706": {
      "op": "GT"
    },
    "4707": {
      "op": "ISZERO"
    },
    "4708": {
      "op": "PUSH2",
      "value": "0x126C"
    },
    "4711": {
      "op": "JUMPI"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4714": {
      "op": "DUP1"
    },
    "4715": {
      "op": "REVERT"
    },
    "4716": {
      "op": "JUMPDEST"
    },
    "4717": {
      "op": "DUP4"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4720": {
      "op": "DUP8"
    },
    "4721": {
      "op": "ADD"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4724": {
      "op": "DUP4"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "op": "CALLDATACOPY"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4731": {
      "op": "DUP6"
    },
    "4732": {
      "op": "DUP4"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "MSTORE"
    },
    "4736": {
      "op": "DUP1"
    },
    "4737": {
      "op": "SWAP5"
    },
    "4738": {
      "op": "POP"
    },
    "4739": {
      "op": "POP"
    },
    "4740": {
      "op": "POP"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "op": "SWAP3"
    },
    "4744": {
      "op": "SWAP2"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "jump": "o",
      "op": "JUMP"
    },
    "4748": {
      "op": "JUMPDEST"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4753": {
      "op": "DUP3"
    },
    "4754": {
      "op": "DUP5"
    },
    "4755": {
      "op": "SUB"
    },
    "4756": {
      "op": "SLT"
    },
    "4757": {
      "op": "ISZERO"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x129E"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4764": {
      "op": "DUP1"
    },
    "4765": {
      "op": "REVERT"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "DUP2"
    },
    "4768": {
      "op": "CALLDATALOAD"
    },
    "4769": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "4772": {
      "op": "DUP2"
    },
    "4773": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4776": {
      "jump": "i",
      "op": "JUMP"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4782": {
      "op": "DUP3"
    },
    "4783": {
      "op": "DUP5"
    },
    "4784": {
      "op": "SUB"
    },
    "4785": {
      "op": "SLT"
    },
    "4786": {
      "op": "ISZERO"
    },
    "4787": {
      "op": "PUSH2",
      "value": "0x12BB"
    },
    "4790": {
      "op": "JUMPI"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4793": {
      "op": "DUP1"
    },
    "4794": {
      "op": "REVERT"
    },
    "4795": {
      "op": "JUMPDEST"
    },
    "4796": {
      "op": "DUP2"
    },
    "4797": {
      "op": "MLOAD"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "4801": {
      "op": "DUP2"
    },
    "4802": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4805": {
      "jump": "i",
      "op": "JUMP"
    },
    "4806": {
      "op": "JUMPDEST"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4812": {
      "op": "DUP4"
    },
    "4813": {
      "op": "DUP6"
    },
    "4814": {
      "op": "SUB"
    },
    "4815": {
      "op": "SLT"
    },
    "4816": {
      "op": "ISZERO"
    },
    "4817": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4820": {
      "op": "JUMPI"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4823": {
      "op": "DUP1"
    },
    "4824": {
      "op": "REVERT"
    },
    "4825": {
      "op": "JUMPDEST"
    },
    "4826": {
      "op": "DUP3"
    },
    "4827": {
      "op": "CALLDATALOAD"
    },
    "4828": {
      "op": "PUSH2",
      "value": "0x12E4"
    },
    "4831": {
      "op": "DUP2"
    },
    "4832": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4835": {
      "jump": "i",
      "op": "JUMP"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "SWAP2"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4841": {
      "op": "DUP4"
    },
    "4842": {
      "op": "ADD"
    },
    "4843": {
      "op": "CALLDATALOAD"
    },
    "4844": {
      "op": "PUSH2",
      "value": "0x12F4"
    },
    "4847": {
      "op": "DUP2"
    },
    "4848": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4851": {
      "jump": "i",
      "op": "JUMP"
    },
    "4852": {
      "op": "JUMPDEST"
    },
    "4853": {
      "op": "DUP1"
    },
    "4854": {
      "op": "SWAP2"
    },
    "4855": {
      "op": "POP"
    },
    "4856": {
      "op": "POP"
    },
    "4857": {
      "op": "SWAP3"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "op": "SWAP3"
    },
    "4860": {
      "op": "SWAP1"
    },
    "4861": {
      "op": "POP"
    },
    "4862": {
      "jump": "o",
      "op": "JUMP"
    },
    "4863": {
      "op": "JUMPDEST"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4866": {
      "op": "DUP1"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4871": {
      "op": "DUP5"
    },
    "4872": {
      "op": "DUP7"
    },
    "4873": {
      "op": "SUB"
    },
    "4874": {
      "op": "SLT"
    },
    "4875": {
      "op": "ISZERO"
    },
    "4876": {
      "op": "PUSH2",
      "value": "0x1314"
    },
    "4879": {
      "op": "JUMPI"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "DUP1"
    },
    "4883": {
      "op": "REVERT"
    },
    "4884": {
      "op": "JUMPDEST"
    },
    "4885": {
      "op": "DUP4"
    },
    "4886": {
      "op": "CALLDATALOAD"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x131F"
    },
    "4890": {
      "op": "DUP2"
    },
    "4891": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4894": {
      "jump": "i",
      "op": "JUMP"
    },
    "4895": {
      "op": "JUMPDEST"
    },
    "4896": {
      "op": "SWAP3"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4900": {
      "op": "DUP5"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "CALLDATALOAD"
    },
    "4903": {
      "op": "PUSH2",
      "value": "0x132F"
    },
    "4906": {
      "op": "DUP2"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4910": {
      "jump": "i",
      "op": "JUMP"
    },
    "4911": {
      "op": "JUMPDEST"
    },
    "4912": {
      "op": "SWAP3"
    },
    "4913": {
      "op": "SWAP6"
    },
    "4914": {
      "op": "SWAP3"
    },
    "4915": {
      "op": "SWAP5"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "op": "POP"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4921": {
      "op": "SWAP2"
    },
    "4922": {
      "op": "SWAP1"
    },
    "4923": {
      "op": "SWAP2"
    },
    "4924": {
      "op": "ADD"
    },
    "4925": {
      "op": "CALLDATALOAD"
    },
    "4926": {
      "op": "SWAP1"
    },
    "4927": {
      "jump": "o",
      "op": "JUMP"
    },
    "4928": {
      "op": "JUMPDEST"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4931": {
      "op": "DUP1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4934": {
      "op": "DUP1"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4939": {
      "op": "DUP7"
    },
    "4940": {
      "op": "DUP9"
    },
    "4941": {
      "op": "SUB"
    },
    "4942": {
      "op": "SLT"
    },
    "4943": {
      "op": "ISZERO"
    },
    "4944": {
      "op": "PUSH2",
      "value": "0x1358"
    },
    "4947": {
      "op": "JUMPI"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4950": {
      "op": "DUP1"
    },
    "4951": {
      "op": "REVERT"
    },
    "4952": {
      "op": "JUMPDEST"
    },
    "4953": {
      "op": "DUP6"
    },
    "4954": {
      "op": "CALLDATALOAD"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x1363"
    },
    "4958": {
      "op": "DUP2"
    },
    "4959": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4962": {
      "jump": "i",
      "op": "JUMP"
    },
    "4963": {
      "op": "JUMPDEST"
    },
    "4964": {
      "op": "SWAP5"
    },
    "4965": {
      "op": "POP"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4968": {
      "op": "DUP7"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "CALLDATALOAD"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x1373"
    },
    "4974": {
      "op": "DUP2"
    },
    "4975": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "4978": {
      "jump": "i",
      "op": "JUMP"
    },
    "4979": {
      "op": "JUMPDEST"
    },
    "4980": {
      "op": "SWAP4"
    },
    "4981": {
      "op": "POP"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4984": {
      "op": "DUP7"
    },
    "4985": {
      "op": "ADD"
    },
    "4986": {
      "op": "CALLDATALOAD"
    },
    "4987": {
      "op": "SWAP3"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4991": {
      "op": "DUP7"
    },
    "4992": {
      "op": "ADD"
    },
    "4993": {
      "op": "CALLDATALOAD"
    },
    "4994": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5003": {
      "op": "DUP1"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "GT"
    },
    "5006": {
      "op": "ISZERO"
    },
    "5007": {
      "op": "PUSH2",
      "value": "0x1397"
    },
    "5010": {
      "op": "JUMPI"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5013": {
      "op": "DUP1"
    },
    "5014": {
      "op": "REVERT"
    },
    "5015": {
      "op": "JUMPDEST"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x13A3"
    },
    "5019": {
      "op": "DUP10"
    },
    "5020": {
      "op": "DUP4"
    },
    "5021": {
      "op": "DUP11"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5026": {
      "jump": "i",
      "op": "JUMP"
    },
    "5027": {
      "op": "JUMPDEST"
    },
    "5028": {
      "op": "SWAP4"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5032": {
      "op": "DUP9"
    },
    "5033": {
      "op": "ADD"
    },
    "5034": {
      "op": "CALLDATALOAD"
    },
    "5035": {
      "op": "SWAP2"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "DUP1"
    },
    "5038": {
      "op": "DUP3"
    },
    "5039": {
      "op": "GT"
    },
    "5040": {
      "op": "ISZERO"
    },
    "5041": {
      "op": "PUSH2",
      "value": "0x13B9"
    },
    "5044": {
      "op": "JUMPI"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5047": {
      "op": "DUP1"
    },
    "5048": {
      "op": "REVERT"
    },
    "5049": {
      "op": "JUMPDEST"
    },
    "5050": {
      "op": "POP"
    },
    "5051": {
      "op": "PUSH2",
      "value": "0x13C6"
    },
    "5054": {
      "op": "DUP9"
    },
    "5055": {
      "op": "DUP3"
    },
    "5056": {
      "op": "DUP10"
    },
    "5057": {
      "op": "ADD"
    },
    "5058": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5061": {
      "jump": "i",
      "op": "JUMP"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "SWAP2"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "op": "SWAP3"
    },
    "5067": {
      "op": "SWAP6"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "SWAP3"
    },
    "5070": {
      "op": "SWAP6"
    },
    "5071": {
      "op": "SWAP1"
    },
    "5072": {
      "op": "SWAP4"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "jump": "o",
      "op": "JUMP"
    },
    "5075": {
      "op": "JUMPDEST"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5078": {
      "op": "DUP1"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5081": {
      "op": "DUP4"
    },
    "5082": {
      "op": "DUP6"
    },
    "5083": {
      "op": "SUB"
    },
    "5084": {
      "op": "SLT"
    },
    "5085": {
      "op": "ISZERO"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x13E6"
    },
    "5089": {
      "op": "JUMPI"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5092": {
      "op": "DUP1"
    },
    "5093": {
      "op": "REVERT"
    },
    "5094": {
      "op": "JUMPDEST"
    },
    "5095": {
      "op": "DUP3"
    },
    "5096": {
      "op": "CALLDATALOAD"
    },
    "5097": {
      "op": "PUSH2",
      "value": "0x13F1"
    },
    "5100": {
      "op": "DUP2"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "5104": {
      "jump": "i",
      "op": "JUMP"
    },
    "5105": {
      "op": "JUMPDEST"
    },
    "5106": {
      "op": "SWAP5"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5109": {
      "op": "SWAP4"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "op": "SWAP4"
    },
    "5112": {
      "op": "ADD"
    },
    "5113": {
      "op": "CALLDATALOAD"
    },
    "5114": {
      "op": "SWAP4"
    },
    "5115": {
      "op": "POP"
    },
    "5116": {
      "op": "POP"
    },
    "5117": {
      "op": "POP"
    },
    "5118": {
      "jump": "o",
      "op": "JUMP"
    },
    "5119": {
      "op": "JUMPDEST"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5122": {
      "op": "DUP1"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5127": {
      "op": "DUP5"
    },
    "5128": {
      "op": "DUP7"
    },
    "5129": {
      "op": "SUB"
    },
    "5130": {
      "op": "SLT"
    },
    "5131": {
      "op": "ISZERO"
    },
    "5132": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5135": {
      "op": "JUMPI"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5138": {
      "op": "DUP1"
    },
    "5139": {
      "op": "REVERT"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "op": "DUP4"
    },
    "5142": {
      "op": "CALLDATALOAD"
    },
    "5143": {
      "op": "PUSH2",
      "value": "0x141F"
    },
    "5146": {
      "op": "DUP2"
    },
    "5147": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "5150": {
      "jump": "i",
      "op": "JUMP"
    },
    "5151": {
      "op": "JUMPDEST"
    },
    "5152": {
      "op": "SWAP3"
    },
    "5153": {
      "op": "POP"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5156": {
      "op": "DUP5"
    },
    "5157": {
      "op": "ADD"
    },
    "5158": {
      "op": "CALLDATALOAD"
    },
    "5159": {
      "op": "SWAP2"
    },
    "5160": {
      "op": "POP"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5163": {
      "op": "DUP5"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "CALLDATALOAD"
    },
    "5166": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5175": {
      "op": "DUP2"
    },
    "5176": {
      "op": "GT"
    },
    "5177": {
      "op": "ISZERO"
    },
    "5178": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "5181": {
      "op": "JUMPI"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5184": {
      "op": "DUP1"
    },
    "5185": {
      "op": "REVERT"
    },
    "5186": {
      "op": "JUMPDEST"
    },
    "5187": {
      "op": "PUSH2",
      "value": "0x144E"
    },
    "5190": {
      "op": "DUP7"
    },
    "5191": {
      "op": "DUP3"
    },
    "5192": {
      "op": "DUP8"
    },
    "5193": {
      "op": "ADD"
    },
    "5194": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5197": {
      "jump": "i",
      "op": "JUMP"
    },
    "5198": {
      "op": "JUMPDEST"
    },
    "5199": {
      "op": "SWAP2"
    },
    "5200": {
      "op": "POP"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "op": "SWAP3"
    },
    "5203": {
      "op": "POP"
    },
    "5204": {
      "op": "SWAP3"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "SWAP3"
    },
    "5207": {
      "jump": "o",
      "op": "JUMP"
    },
    "5208": {
      "op": "JUMPDEST"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5211": {
      "op": "DUP1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5214": {
      "op": "DUP1"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5217": {
      "op": "DUP6"
    },
    "5218": {
      "op": "DUP8"
    },
    "5219": {
      "op": "SUB"
    },
    "5220": {
      "op": "SLT"
    },
    "5221": {
      "op": "ISZERO"
    },
    "5222": {
      "op": "PUSH2",
      "value": "0x146E"
    },
    "5225": {
      "op": "JUMPI"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5228": {
      "op": "DUP1"
    },
    "5229": {
      "op": "REVERT"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "DUP5"
    },
    "5232": {
      "op": "CALLDATALOAD"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1479"
    },
    "5236": {
      "op": "DUP2"
    },
    "5237": {
      "op": "PUSH2",
      "value": "0x1781"
    },
    "5240": {
      "jump": "i",
      "op": "JUMP"
    },
    "5241": {
      "op": "JUMPDEST"
    },
    "5242": {
      "op": "SWAP4"
    },
    "5243": {
      "op": "POP"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5246": {
      "op": "DUP6"
    },
    "5247": {
      "op": "ADD"
    },
    "5248": {
      "op": "CALLDATALOAD"
    },
    "5249": {
      "op": "SWAP3"
    },
    "5250": {
      "op": "POP"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5253": {
      "op": "DUP6"
    },
    "5254": {
      "op": "ADD"
    },
    "5255": {
      "op": "CALLDATALOAD"
    },
    "5256": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5265": {
      "op": "DUP1"
    },
    "5266": {
      "op": "DUP3"
    },
    "5267": {
      "op": "GT"
    },
    "5268": {
      "op": "ISZERO"
    },
    "5269": {
      "op": "PUSH2",
      "value": "0x149D"
    },
    "5272": {
      "op": "JUMPI"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5275": {
      "op": "DUP1"
    },
    "5276": {
      "op": "REVERT"
    },
    "5277": {
      "op": "JUMPDEST"
    },
    "5278": {
      "op": "PUSH2",
      "value": "0x14A9"
    },
    "5281": {
      "op": "DUP9"
    },
    "5282": {
      "op": "DUP4"
    },
    "5283": {
      "op": "DUP10"
    },
    "5284": {
      "op": "ADD"
    },
    "5285": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5288": {
      "jump": "i",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "SWAP4"
    },
    "5291": {
      "op": "POP"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5294": {
      "op": "DUP8"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "op": "CALLDATALOAD"
    },
    "5297": {
      "op": "SWAP2"
    },
    "5298": {
      "op": "POP"
    },
    "5299": {
      "op": "DUP1"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "GT"
    },
    "5302": {
      "op": "ISZERO"
    },
    "5303": {
      "op": "PUSH2",
      "value": "0x14BF"
    },
    "5306": {
      "op": "JUMPI"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5309": {
      "op": "DUP1"
    },
    "5310": {
      "op": "REVERT"
    },
    "5311": {
      "op": "JUMPDEST"
    },
    "5312": {
      "op": "POP"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x14CC"
    },
    "5316": {
      "op": "DUP8"
    },
    "5317": {
      "op": "DUP3"
    },
    "5318": {
      "op": "DUP9"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5323": {
      "jump": "i",
      "op": "JUMP"
    },
    "5324": {
      "op": "JUMPDEST"
    },
    "5325": {
      "op": "SWAP2"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "op": "SWAP3"
    },
    "5329": {
      "op": "SWAP6"
    },
    "5330": {
      "op": "SWAP2"
    },
    "5331": {
      "op": "SWAP5"
    },
    "5332": {
      "op": "POP"
    },
    "5333": {
      "op": "SWAP3"
    },
    "5334": {
      "op": "POP"
    },
    "5335": {
      "jump": "o",
      "op": "JUMP"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5339": {
      "op": "DUP1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5342": {
      "op": "DUP4"
    },
    "5343": {
      "op": "DUP6"
    },
    "5344": {
      "op": "SUB"
    },
    "5345": {
      "op": "SLT"
    },
    "5346": {
      "op": "ISZERO"
    },
    "5347": {
      "op": "PUSH2",
      "value": "0x14EB"
    },
    "5350": {
      "op": "JUMPI"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5353": {
      "op": "DUP1"
    },
    "5354": {
      "op": "REVERT"
    },
    "5355": {
      "op": "JUMPDEST"
    },
    "5356": {
      "op": "DUP3"
    },
    "5357": {
      "op": "CALLDATALOAD"
    },
    "5358": {
      "op": "SWAP2"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5362": {
      "op": "DUP4"
    },
    "5363": {
      "op": "ADD"
    },
    "5364": {
      "op": "CALLDATALOAD"
    },
    "5365": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5374": {
      "op": "DUP2"
    },
    "5375": {
      "op": "GT"
    },
    "5376": {
      "op": "ISZERO"
    },
    "5377": {
      "op": "PUSH2",
      "value": "0x1509"
    },
    "5380": {
      "op": "JUMPI"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5383": {
      "op": "DUP1"
    },
    "5384": {
      "op": "REVERT"
    },
    "5385": {
      "op": "JUMPDEST"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x1515"
    },
    "5389": {
      "op": "DUP6"
    },
    "5390": {
      "op": "DUP3"
    },
    "5391": {
      "op": "DUP7"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5396": {
      "jump": "i",
      "op": "JUMP"
    },
    "5397": {
      "op": "JUMPDEST"
    },
    "5398": {
      "op": "SWAP2"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "op": "SWAP3"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "op": "SWAP3"
    },
    "5404": {
      "op": "SWAP1"
    },
    "5405": {
      "op": "POP"
    },
    "5406": {
      "jump": "o",
      "op": "JUMP"
    },
    "5407": {
      "op": "JUMPDEST"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5410": {
      "op": "DUP2"
    },
    "5411": {
      "op": "MLOAD"
    },
    "5412": {
      "op": "DUP1"
    },
    "5413": {
      "op": "DUP5"
    },
    "5414": {
      "op": "MSTORE"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "DUP2"
    },
    "5419": {
      "op": "DUP2"
    },
    "5420": {
      "op": "LT"
    },
    "5421": {
      "op": "ISZERO"
    },
    "5422": {
      "op": "PUSH2",
      "value": "0x1545"
    },
    "5425": {
      "op": "JUMPI"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5428": {
      "op": "DUP2"
    },
    "5429": {
      "op": "DUP6"
    },
    "5430": {
      "op": "ADD"
    },
    "5431": {
      "op": "DUP2"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "MLOAD"
    },
    "5434": {
      "op": "DUP7"
    },
    "5435": {
      "op": "DUP4"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "op": "DUP3"
    },
    "5438": {
      "op": "ADD"
    },
    "5439": {
      "op": "MSTORE"
    },
    "5440": {
      "op": "ADD"
    },
    "5441": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5444": {
      "op": "JUMP"
    },
    "5445": {
      "op": "JUMPDEST"
    },
    "5446": {
      "op": "DUP2"
    },
    "5447": {
      "op": "DUP2"
    },
    "5448": {
      "op": "GT"
    },
    "5449": {
      "op": "ISZERO"
    },
    "5450": {
      "op": "PUSH2",
      "value": "0x1557"
    },
    "5453": {
      "op": "JUMPI"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5458": {
      "op": "DUP4"
    },
    "5459": {
      "op": "DUP8"
    },
    "5460": {
      "op": "ADD"
    },
    "5461": {
      "op": "ADD"
    },
    "5462": {
      "op": "MSTORE"
    },
    "5463": {
      "op": "JUMPDEST"
    },
    "5464": {
      "op": "POP"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5467": {
      "op": "ADD"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5470": {
      "op": "NOT"
    },
    "5471": {
      "op": "AND"
    },
    "5472": {
      "op": "SWAP3"
    },
    "5473": {
      "op": "SWAP1"
    },
    "5474": {
      "op": "SWAP3"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "SWAP3"
    },
    "5480": {
      "op": "SWAP2"
    },
    "5481": {
      "op": "POP"
    },
    "5482": {
      "op": "POP"
    },
    "5483": {
      "jump": "o",
      "op": "JUMP"
    },
    "5484": {
      "op": "JUMPDEST"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "op": "SUB"
    },
    "5493": {
      "op": "DUP8"
    },
    "5494": {
      "op": "DUP2"
    },
    "5495": {
      "op": "AND"
    },
    "5496": {
      "op": "DUP3"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "DUP7"
    },
    "5499": {
      "op": "DUP2"
    },
    "5500": {
      "op": "AND"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5503": {
      "op": "DUP4"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "MSTORE"
    },
    "5506": {
      "op": "DUP6"
    },
    "5507": {
      "op": "AND"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5510": {
      "op": "DUP3"
    },
    "5511": {
      "op": "ADD"
    },
    "5512": {
      "op": "MSTORE"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5515": {
      "op": "DUP2"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "DUP5"
    },
    "5518": {
      "op": "SWAP1"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5524": {
      "op": "DUP3"
    },
    "5525": {
      "op": "ADD"
    },
    "5526": {
      "op": "DUP2"
    },
    "5527": {
      "op": "SWAP1"
    },
    "5528": {
      "op": "MSTORE"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5531": {
      "op": "SWAP1"
    },
    "5532": {
      "op": "PUSH2",
      "value": "0x15A7"
    },
    "5535": {
      "op": "SWAP1"
    },
    "5536": {
      "op": "DUP4"
    },
    "5537": {
      "op": "ADD"
    },
    "5538": {
      "op": "DUP6"
    },
    "5539": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5542": {
      "jump": "i",
      "op": "JUMP"
    },
    "5543": {
      "op": "JUMPDEST"
    },
    "5544": {
      "op": "DUP3"
    },
    "5545": {
      "op": "DUP2"
    },
    "5546": {
      "op": "SUB"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5549": {
      "op": "DUP5"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "MSTORE"
    },
    "5552": {
      "op": "PUSH2",
      "value": "0x15B9"
    },
    "5555": {
      "op": "DUP2"
    },
    "5556": {
      "op": "DUP6"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5560": {
      "jump": "i",
      "op": "JUMP"
    },
    "5561": {
      "op": "JUMPDEST"
    },
    "5562": {
      "op": "SWAP10"
    },
    "5563": {
      "op": "SWAP9"
    },
    "5564": {
      "op": "POP"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "op": "POP"
    },
    "5567": {
      "op": "POP"
    },
    "5568": {
      "op": "POP"
    },
    "5569": {
      "op": "POP"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "POP"
    },
    "5573": {
      "jump": "o",
      "op": "JUMP"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "DUP3"
    },
    "5579": {
      "op": "MSTORE"
    },
    "5580": {
      "op": "DUP3"
    },
    "5581": {
      "op": "MLOAD"
    },
    "5582": {
      "op": "DUP3"
    },
    "5583": {
      "op": "DUP3"
    },
    "5584": {
      "op": "ADD"
    },
    "5585": {
      "op": "DUP2"
    },
    "5586": {
      "op": "SWAP1"
    },
    "5587": {
      "op": "MSTORE"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5590": {
      "op": "SWAP2"
    },
    "5591": {
      "op": "SWAP1"
    },
    "5592": {
      "op": "DUP5"
    },
    "5593": {
      "op": "DUP3"
    },
    "5594": {
      "op": "ADD"
    },
    "5595": {
      "op": "SWAP1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5598": {
      "op": "DUP6"
    },
    "5599": {
      "op": "ADD"
    },
    "5600": {
      "op": "SWAP1"
    },
    "5601": {
      "op": "DUP5"
    },
    "5602": {
      "op": "JUMPDEST"
    },
    "5603": {
      "op": "DUP2"
    },
    "5604": {
      "op": "DUP2"
    },
    "5605": {
      "op": "LT"
    },
    "5606": {
      "op": "ISZERO"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x1607"
    },
    "5610": {
      "op": "JUMPI"
    },
    "5611": {
      "op": "DUP4"
    },
    "5612": {
      "op": "MLOAD"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "op": "SUB"
    },
    "5621": {
      "op": "AND"
    },
    "5622": {
      "op": "DUP4"
    },
    "5623": {
      "op": "MSTORE"
    },
    "5624": {
      "op": "SWAP3"
    },
    "5625": {
      "op": "DUP5"
    },
    "5626": {
      "op": "ADD"
    },
    "5627": {
      "op": "SWAP3"
    },
    "5628": {
      "op": "SWAP2"
    },
    "5629": {
      "op": "DUP5"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "SWAP2"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "op": "PUSH2",
      "value": "0x15E2"
    },
    "5638": {
      "op": "JUMP"
    },
    "5639": {
      "op": "JUMPDEST"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "SWAP1"
    },
    "5642": {
      "op": "SWAP7"
    },
    "5643": {
      "op": "SWAP6"
    },
    "5644": {
      "op": "POP"
    },
    "5645": {
      "op": "POP"
    },
    "5646": {
      "op": "POP"
    },
    "5647": {
      "op": "POP"
    },
    "5648": {
      "op": "POP"
    },
    "5649": {
      "op": "POP"
    },
    "5650": {
      "jump": "o",
      "op": "JUMP"
    },
    "5651": {
      "op": "JUMPDEST"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5654": {
      "op": "DUP2"
    },
    "5655": {
      "op": "MSTORE"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5663": {
      "op": "DUP4"
    },
    "5664": {
      "op": "ADD"
    },
    "5665": {
      "op": "DUP5"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5669": {
      "jump": "i",
      "op": "JUMP"
    },
    "5670": {
      "op": "JUMPDEST"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5673": {
      "op": "DUP1"
    },
    "5674": {
      "op": "DUP3"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5678": {
      "op": "SWAP1"
    },
    "5679": {
      "op": "DUP3"
    },
    "5680": {
      "op": "ADD"
    },
    "5681": {
      "op": "MSTORE"
    },
    "5682": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5717": {
      "op": "DUP3"
    },
    "5718": {
      "op": "ADD"
    },
    "5719": {
      "op": "MSTORE"
    },
    "5720": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5730": {
      "op": "DUP3"
    },
    "5731": {
      "op": "ADD"
    },
    "5732": {
      "op": "MSTORE"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5735": {
      "op": "ADD"
    },
    "5736": {
      "op": "SWAP1"
    },
    "5737": {
      "jump": "o",
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5741": {
      "op": "DUP1"
    },
    "5742": {
      "op": "DUP3"
    },
    "5743": {
      "op": "MSTORE"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5746": {
      "op": "SWAP1"
    },
    "5747": {
      "op": "DUP3"
    },
    "5748": {
      "op": "ADD"
    },
    "5749": {
      "op": "MSTORE"
    },
    "5750": {
      "op": "PUSH32",
      "value": "0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5785": {
      "op": "DUP3"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "op": "PUSH12",
      "value": "0x39103337B9103437B63232B9"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5803": {
      "op": "SHL"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5806": {
      "op": "DUP3"
    },
    "5807": {
      "op": "ADD"
    },
    "5808": {
      "op": "MSTORE"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5811": {
      "op": "ADD"
    },
    "5812": {
      "op": "SWAP1"
    },
    "5813": {
      "jump": "o",
      "op": "JUMP"
    },
    "5814": {
      "op": "JUMPDEST"
    },
    "5815": {
      "op": "DUP4"
    },
    "5816": {
      "op": "DUP2"
    },
    "5817": {
      "op": "MSTORE"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5822": {
      "op": "DUP3"
    },
    "5823": {
      "op": "ADD"
    },
    "5824": {
      "op": "MSTORE"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5827": {
      "op": "PUSH2",
      "value": "0x16CF"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5832": {
      "op": "DUP4"
    },
    "5833": {
      "op": "ADD"
    },
    "5834": {
      "op": "DUP6"
    },
    "5835": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5838": {
      "jump": "i",
      "op": "JUMP"
    },
    "5839": {
      "op": "JUMPDEST"
    },
    "5840": {
      "op": "DUP3"
    },
    "5841": {
      "op": "DUP2"
    },
    "5842": {
      "op": "SUB"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5845": {
      "op": "DUP5"
    },
    "5846": {
      "op": "ADD"
    },
    "5847": {
      "op": "MSTORE"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "5851": {
      "op": "DUP2"
    },
    "5852": {
      "op": "DUP6"
    },
    "5853": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5856": {
      "jump": "i",
      "op": "JUMP"
    },
    "5857": {
      "op": "JUMPDEST"
    },
    "5858": {
      "op": "SWAP7"
    },
    "5859": {
      "op": "SWAP6"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "op": "POP"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "POP"
    },
    "5866": {
      "jump": "o",
      "op": "JUMP"
    },
    "5867": {
      "op": "JUMPDEST"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5870": {
      "op": "DUP3"
    },
    "5871": {
      "op": "NOT"
    },
    "5872": {
      "op": "DUP3"
    },
    "5873": {
      "op": "GT"
    },
    "5874": {
      "op": "ISZERO"
    },
    "5875": {
      "op": "PUSH2",
      "value": "0x16FE"
    },
    "5878": {
      "op": "JUMPI"
    },
    "5879": {
      "op": "PUSH2",
      "value": "0x16FE"
    },
    "5882": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "5885": {
      "jump": "i",
      "op": "JUMP"
    },
    "5886": {
      "op": "JUMPDEST"
    },
    "5887": {
      "op": "POP"
    },
    "5888": {
      "op": "ADD"
    },
    "5889": {
      "op": "SWAP1"
    },
    "5890": {
      "jump": "o",
      "op": "JUMP"
    },
    "5891": {
      "op": "JUMPDEST"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5894": {
      "op": "DUP3"
    },
    "5895": {
      "op": "DUP3"
    },
    "5896": {
      "op": "LT"
    },
    "5897": {
      "op": "ISZERO"
    },
    "5898": {
      "op": "PUSH2",
      "value": "0x1715"
    },
    "5901": {
      "op": "JUMPI"
    },
    "5902": {
      "op": "PUSH2",
      "value": "0x1715"
    },
    "5905": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "5908": {
      "jump": "i",
      "op": "JUMP"
    },
    "5909": {
      "op": "JUMPDEST"
    },
    "5910": {
      "op": "POP"
    },
    "5911": {
      "op": "SUB"
    },
    "5912": {
      "op": "SWAP1"
    },
    "5913": {
      "jump": "o",
      "op": "JUMP"
    },
    "5914": {
      "op": "JUMPDEST"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5917": {
      "op": "DUP2"
    },
    "5918": {
      "op": "DUP2"
    },
    "5919": {
      "op": "SHR"
    },
    "5920": {
      "op": "SWAP1"
    },
    "5921": {
      "op": "DUP3"
    },
    "5922": {
      "op": "AND"
    },
    "5923": {
      "op": "DUP1"
    },
    "5924": {
      "op": "PUSH2",
      "value": "0x172E"
    },
    "5927": {
      "op": "JUMPI"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5930": {
      "op": "DUP3"
    },
    "5931": {
      "op": "AND"
    },
    "5932": {
      "op": "SWAP2"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "JUMPDEST"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5937": {
      "op": "DUP3"
    },
    "5938": {
      "op": "LT"
    },
    "5939": {
      "op": "DUP2"
    },
    "5940": {
      "op": "EQ"
    },
    "5941": {
      "op": "ISZERO"
    },
    "5942": {
      "op": "PUSH2",
      "value": "0x174F"
    },
    "5945": {
      "op": "JUMPI"
    },
    "5946": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5953": {
      "op": "SHL"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5956": {
      "op": "MSTORE"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5966": {
      "op": "REVERT"
    },
    "5967": {
      "op": "JUMPDEST"
    },
    "5968": {
      "op": "POP"
    },
    "5969": {
      "op": "SWAP2"
    },
    "5970": {
      "op": "SWAP1"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "jump": "o",
      "op": "JUMP"
    },
    "5973": {
      "op": "JUMPDEST"
    },
    "5974": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5981": {
      "op": "SHL"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5989": {
      "op": "MSTORE"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5994": {
      "op": "REVERT"
    },
    "5995": {
      "op": "JUMPDEST"
    },
    "5996": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6003": {
      "op": "SHL"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6006": {
      "op": "MSTORE"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6009": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6011": {
      "op": "MSTORE"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6016": {
      "op": "REVERT"
    },
    "6017": {
      "op": "JUMPDEST"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6024": {
      "op": "SHL"
    },
    "6025": {
      "op": "SUB"
    },
    "6026": {
      "op": "DUP2"
    },
    "6027": {
      "op": "AND"
    },
    "6028": {
      "op": "DUP2"
    },
    "6029": {
      "op": "EQ"
    },
    "6030": {
      "op": "PUSH2",
      "value": "0x1796"
    },
    "6033": {
      "op": "JUMPI"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6036": {
      "op": "DUP1"
    },
    "6037": {
      "op": "REVERT"
    },
    "6038": {
      "op": "JUMPDEST"
    },
    "6039": {
      "op": "POP"
    },
    "6040": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0f3aefeb93481d066d46d4a3ea5e4cf809b93565",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC777/ERC777.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return\n            operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators cannot\n     * call `transferFrom` (unless they have allowance), and accounts with\n     * allowance cannot call `operatorSend` (unless they are operators).\n     *\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n     */\n    function transferFrom(\n        address holder,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) internal virtual {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) internal virtual {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(\n        address holder,\n        address spender,\n        uint256 value\n    ) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1073:17251:173:-:0;;;2301:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2433:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2456:17:173;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2484:42:173;;;;:22;;:42;;;;;:::i;:::-;;2541:9;2536:126;2560:17;:24;2556:1;:28;2536:126;;;2647:4;2605:17;:39;2623:17;2641:1;2623:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2605:39:173;;;;;;;;;;;-1:-1:-1;2605:39:173;:46;;-1:-1:-1;;2605:46:173;;;;;;;;;;2586:3;;;;:::i;:::-;;;;2536:126;;;-1:-1:-1;2703:97:173;;-1:-1:-1;;;2703:97:173;;2753:4;2703:97;;;2455:34:211;;;2760:24:173;2505:18:211;;;2498:34;2548:18;;;2541:43;1227:42:173;;2703:41;;2390:18:211;;2703:97:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2810:96:173;;-1:-1:-1;;;2810:96:173;;2860:4;2810:96;;;2455:34:211;;;2867:23:173;2505:18:211;;;2498:34;2548:18;;;2541:43;1227:42:173;;-1:-1:-1;2810:41:173;;-1:-1:-1;2390:18:211;;2810:96:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:612;;;1073:17251;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1073:17251:173;;;-1:-1:-1;1073:17251:173;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1073:17251:173;-1:-1:-1;;;;;1073:17251:173;;;;;;;;;;;-1:-1:-1;1073:17251:173;;;;;;;;;;;;;;;;;;;;;14:695:211;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;187:26:211;;184:2;;;216:18;;:::i;:::-;255:4;283:53;326:2;307:13;;-1:-1:-1;;303:27:211;299:36;;283:53;:::i;:::-;361:2;352:7;345:19;405:3;400:2;395;387:6;383:15;379:24;376:33;373:2;;;422:1;419;412:12;373:2;444:1;454:134;468:2;465:1;462:9;454:134;;;557:14;;;553:23;;547:30;525:15;;;521:24;;514:64;479:10;;454:134;;;606:2;603:1;600:9;597:2;;;666:1;661:2;656;647:7;643:16;639:25;632:36;597:2;-1:-1:-1;696:7:211;78:631;-1:-1:-1;;;;;78:631:211:o;714:1496::-;847:6;855;863;916:2;904:9;895:7;891:23;887:32;884:2;;;932:1;929;922:12;884:2;959:16;;-1:-1:-1;;;;;1024:14:211;;;1021:2;;;1051:1;1048;1041:12;1021:2;1074:61;1127:7;1118:6;1107:9;1103:22;1074:61;:::i;:::-;1064:71;;1154:2;1144:12;;1202:2;1191:9;1187:18;1181:25;1231:2;1221:8;1218:16;1215:2;;;1247:1;1244;1237:12;1215:2;1270:63;1325:7;1314:8;1303:9;1299:24;1270:63;:::i;:::-;1260:73;;;1379:2;1368:9;1364:18;1358:25;1408:2;1398:8;1395:16;1392:2;;;1424:1;1421;1414:12;1392:2;1447:24;;1502:4;1494:13;;1490:27;-1:-1:-1;1480:2:211;;1531:1;1528;1521:12;1480:2;1560;1554:9;1582:2;1578;1575:10;1572:2;;;1588:18;;:::i;:::-;1634:2;1631:1;1627:10;1617:20;;1657:28;1681:2;1677;1673:11;1657:28;:::i;:::-;1719:15;;;1750:12;;;;1782:11;;;1812;;;1808:20;;1805:33;-1:-1:-1;1802:2:211;;;1851:1;1848;1841:12;1802:2;1873:1;1864:10;;1894:1;1883:12;;1904:276;1920:2;1915:3;1912:11;1904:276;;;1982:10;;-1:-1:-1;;;;;2025:31:211;;2015:42;;2005:2;;2071:1;2068;2061:12;2005:2;2088:18;;1942:1;1933:11;;;;;2126:12;;;;2158;;1904:276;;;1908:3;2199:5;2189:15;;;;;;;;874:1336;;;;;:::o;2595:275::-;2666:2;2660:9;2731:2;2712:13;;-1:-1:-1;;2708:27:211;2696:40;;-1:-1:-1;;;;;2751:34:211;;2787:22;;;2748:62;2745:2;;;2813:18;;:::i;:::-;2849:2;2842:22;2640:230;;-1:-1:-1;2640:230:211:o;2875:380::-;2954:1;2950:12;;;;2997;;;3018:2;;3072:4;3064:6;3060:17;3050:27;;3018:2;3125;3117:6;3114:14;3094:18;3091:38;3088:2;;;3171:10;3166:3;3162:20;3159:1;3152:31;3206:4;3203:1;3196:15;3234:4;3231:1;3224:15;3088:2;;2930:325;;;:::o;3260:232::-;3299:3;-1:-1:-1;;3320:17:211;;3317:2;;;3379:10;3374:3;3370:20;3367:1;3360:31;3414:4;3411:1;3404:15;3442:4;3439:1;3432:15;3317:2;-1:-1:-1;3484:1:211;3473:13;;3307:185::o;3497:127::-;3558:10;3553:3;3549:20;3546:1;3539:31;3589:4;3586:1;3579:15;3613:4;3610:1;3603:15;3629:127;3690:10;3685:3;3681:20;3678:1;3671:31;3721:4;3718:1;3711:15;3745:4;3742:1;3735:15;3661:95;1073:17251:173;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/token/ERC777/ERC777.sol",
  "type": "contract"
}