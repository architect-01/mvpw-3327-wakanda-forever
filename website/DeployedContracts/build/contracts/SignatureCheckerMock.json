{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignatureNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "109": "contracts/OpenZepellin/contracts/mocks/SignatureCheckerMock.sol",
    "185": "contracts/OpenZepellin/contracts/utils/Strings.sol",
    "187": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol",
    "189": "contracts/OpenZepellin/contracts/utils/cryptography/SignatureChecker.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/SignatureCheckerMock.sol",
    "exportedSymbols": {
      "Address": [
        24338
      ],
      "ECDSA": [
        25552
      ],
      "IERC1271": [
        5980
      ],
      "SignatureChecker": [
        25719
      ],
      "SignatureCheckerMock": [
        13225
      ],
      "Strings": [
        24948
      ]
    },
    "id": 13226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13202,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:109"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/SignatureChecker.sol",
        "file": "../utils/cryptography/SignatureChecker.sol",
        "id": 13203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13226,
        "sourceUnit": 25720,
        "src": "58:52:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13225,
        "linearizedBaseContracts": [
          13225
        ],
        "name": "SignatureCheckerMock",
        "nameLocation": "121:20:109",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13206,
            "libraryName": {
              "id": 13204,
              "name": "SignatureChecker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25719,
              "src": "154:16:109"
            },
            "nodeType": "UsingForDirective",
            "src": "148:35:109",
            "typeName": {
              "id": 13205,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:109",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 13223,
              "nodeType": "Block",
              "src": "329:67:109",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13219,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13210,
                        "src": "373:4:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 13220,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13212,
                        "src": "379:9:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 13217,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13208,
                        "src": "346:6:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isValidSignatureNow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25718,
                      "src": "346:26:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes32,bytes memory) view returns (bool)"
                      }
                    },
                    "id": 13221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:43:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13216,
                  "id": 13222,
                  "nodeType": "Return",
                  "src": "339:50:109"
                }
              ]
            },
            "functionSelector": "6ccea652",
            "id": 13224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "198:19:109",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13208,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "235:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13224,
                  "src": "227:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13210,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "259:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13224,
                  "src": "251:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13209,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13212,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "286:9:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13224,
                  "src": "273:22:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13211,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "217:84:109"
            },
            "returnParameters": {
              "id": 13216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13224,
                  "src": "323:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13214,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:6:109"
            },
            "scope": 13225,
            "src": "189:207:109",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13226,
        "src": "112:286:109",
        "usedErrors": []
      }
    ],
    "src": "33:366:109"
  },
  "bytecode": "608060405234801561001057600080fd5b5061053a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004361003e36600461034f565b610057565b604051901515815260200160405180910390f35b600061006d6001600160a01b0385168484610077565b90505b9392505050565b600080600061008685856101c3565b9092509050600081600481111561009f5761009f6104d8565b1480156100bd5750856001600160a01b0316826001600160a01b0316145b156100cd57600192505050610070565b600080876001600160a01b0316631626ba7e60e01b88886040516024016100f592919061046e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516101339190610452565b600060405180830381855afa9150503d806000811461016e576040519150601f19603f3d011682016040523d82523d6000602084013e610173565b606091505b5091509150818015610186575080516020145b80156101b757508051630b135d3f60e11b906101ab9083016020908101908401610428565b6001600160e01b031916145b98975050505050505050565b6000808251604114156101fa5760208301516040840151606085015160001a6101ee87828585610233565b9450945050505061022c565b8251604014156102245760208301516040840151610219868383610320565b93509350505061022c565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561026a5750600090506003610317565b8460ff16601b1415801561028257508460ff16601c14155b156102935750600090506004610317565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156102e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661031057600060019250925050610317565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b0161034187828885610233565b935093505050935093915050565b60008060006060848603121561036457600080fd5b83356001600160a01b038116811461037b57600080fd5b925060208401359150604084013567ffffffffffffffff8082111561039f57600080fd5b818601915086601f8301126103b357600080fd5b8135818111156103c5576103c56104ee565b604051601f8201601f19908116603f011681019083821181831017156103ed576103ed6104ee565b8160405282815289602084870101111561040657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561043a57600080fd5b81516001600160e01b03198116811461007057600080fd5b600082516104648184602087016104a8565b9190910192915050565b82815260406020820152600082518060408401526104938160608501602087016104a8565b601f01601f1916919091016060019392505050565b60005b838110156104c35781810151838201526020016104ab565b838111156104d2576000848401525b50505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220976dc596023759d702842c19348d6d5f9ca8f1512ad0a8b3a85646e5509629b664736f6c63430008060033",
  "bytecodeSha1": "7559e47b3f0b3dbbf3193fb403f44a7bde93ad77",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SignatureCheckerMock",
  "coverageMap": {
    "branches": {
      "109": {},
      "185": {},
      "187": {
        "ECDSA.tryRecover": {
          "11": [
            2539,
            2561,
            false
          ],
          "12": [
            3021,
            3043,
            false
          ],
          "13": [
            6786,
            6865,
            false
          ],
          "14": [
            6956,
            6963,
            false
          ],
          "15": [
            6967,
            6974,
            false
          ],
          "16": [
            7201,
            7221,
            false
          ]
        }
      },
      "189": {
        "SignatureChecker.isValidSignatureNow": {
          "17": [
            1038,
            1073,
            false
          ],
          "18": [
            1077,
            1096,
            false
          ]
        }
      }
    },
    "statements": {
      "109": {
        "SignatureCheckerMock.isValidSignatureNow": {
          "0": [
            339,
            389
          ]
        }
      },
      "185": {},
      "187": {
        "ECDSA.tryRecover": {
          "3": [
            2968,
            3000
          ],
          "4": [
            3373,
            3403
          ],
          "5": [
            3434,
            3490
          ],
          "6": [
            6881,
            6932
          ],
          "7": [
            6990,
            7041
          ],
          "8": [
            7237,
            7287
          ],
          "9": [
            7308,
            7345
          ],
          "10": [
            5114,
            5146
          ]
        }
      },
      "189": {
        "SignatureChecker.isValidSignatureNow": {
          "1": [
            1112,
            1123
          ],
          "2": [
            1308,
            1417
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA",
    "SignatureChecker",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004361003e36600461034f565b610057565b604051901515815260200160405180910390f35b600061006d6001600160a01b0385168484610077565b90505b9392505050565b600080600061008685856101c3565b9092509050600081600481111561009f5761009f6104d8565b1480156100bd5750856001600160a01b0316826001600160a01b0316145b156100cd57600192505050610070565b600080876001600160a01b0316631626ba7e60e01b88886040516024016100f592919061046e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516101339190610452565b600060405180830381855afa9150503d806000811461016e576040519150601f19603f3d011682016040523d82523d6000602084013e610173565b606091505b5091509150818015610186575080516020145b80156101b757508051630b135d3f60e11b906101ab9083016020908101908401610428565b6001600160e01b031916145b98975050505050505050565b6000808251604114156101fa5760208301516040840151606085015160001a6101ee87828585610233565b9450945050505061022c565b8251604014156102245760208301516040840151610219868383610320565b93509350505061022c565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561026a5750600090506003610317565b8460ff16601b1415801561028257508460ff16601c14155b156102935750600090506004610317565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156102e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661031057600060019250925050610317565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b0161034187828885610233565b935093505050935093915050565b60008060006060848603121561036457600080fd5b83356001600160a01b038116811461037b57600080fd5b925060208401359150604084013567ffffffffffffffff8082111561039f57600080fd5b818601915086601f8301126103b357600080fd5b8135818111156103c5576103c56104ee565b604051601f8201601f19908116603f011681019083821181831017156103ed576103ed6104ee565b8160405282815289602084870101111561040657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561043a57600080fd5b81516001600160e01b03198116811461007057600080fd5b600082516104648184602087016104a8565b9190910192915050565b82815260406020820152600082518060408401526104938160608501602087016104a8565b601f01601f1916919091016060019392505050565b60005b838110156104c35781810151838201526020016104ab565b838111156104d2576000848401525b50505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220976dc596023759d702842c19348d6d5f9ca8f1512ad0a8b3a85646e5509629b664736f6c63430008060033",
  "deployedSourceMap": "112:286:109:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:207;;;;;;:::i;:::-;;:::i;:::-;;;1921:14:211;;1914:22;1896:41;;1884:2;1869:18;189:207:109;;;;;;;;323:4;346:43;-1:-1:-1;;;;;346:26:109;;373:4;379:9;346:26;:43::i;:::-;339:50;;189:207;;;;;;:::o;791:633:189:-;927:4;944:17;963:24;991:33;1008:4;1014:9;991:16;:33::i;:::-;943:81;;-1:-1:-1;943:81:189;-1:-1:-1;1047:26:189;1038:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1090:6;-1:-1:-1;;;;;1077:19:189;:9;-1:-1:-1;;;;;1077:19:189;;1038:58;1034:100;;;1119:4;1112:11;;;;;;1034:100;1145:12;1159:19;1182:6;-1:-1:-1;;;;;1182:17:189;1236:34;;;1272:4;1278:9;1213:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1213:75:189;;;;;;;;;;;;;;-1:-1:-1;;;;;1213:75:189;-1:-1:-1;;;;;;1213:75:189;;;;;;;;;;1182:116;;;;1213:75;1182:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:154;;;;1316:7;:30;;;;;1327:6;:13;1344:2;1327:19;1316:30;:100;;;;-1:-1:-1;1350:28:189;;-1:-1:-1;;;1382:34:189;1350:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1350:66:189;;1316:100;1308:109;791:633;-1:-1:-1;;;;;;;;791:633:189:o;2228:1279:187:-;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:187;;-1:-1:-1;3454:35:187;3017:484;2228:1279;;;;;:::o;5744:1608::-;5870:7;;6799:66;6786:79;;6782:161;;;-1:-1:-1;6897:1:187;;-1:-1:-1;6901:30:187;6881:51;;6782:161;6956:1;:7;;6961:2;6956:7;;:18;;;;;6967:1;:7;;6972:2;6967:7;;6956:18;6952:100;;;-1:-1:-1;7006:1:187;;-1:-1:-1;7010:30:187;6990:51;;6952:100;7163:24;;;7146:14;7163:24;;;;;;;;;2632:25:211;;;2705:4;2693:17;;2673:18;;;2666:45;;;;2727:18;;;2720:34;;;2770:18;;;2763:34;;;7163:24:187;;2604:19:211;;7163:24:187;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7163:24:187;;-1:-1:-1;;7163:24:187;;;-1:-1:-1;;;;;;;7201:20:187;;7197:101;;7253:1;7257:29;7237:50;;;;;;;7197:101;7316:6;-1:-1:-1;7324:20:187;;-1:-1:-1;5744:1608:187;;;;;;;;:::o;4774:379::-;4884:7;;-1:-1:-1;;;;;4981:75:187;;5082:3;5078:12;;;5092:2;5074:21;5121:25;5132:4;5074:21;5141:1;4981:75;5121:10;:25::i;:::-;5114:32;;;;;;4774:379;;;;;;:::o;14:1163:211:-;100:6;108;116;169:2;157:9;148:7;144:23;140:32;137:2;;;185:1;182;175:12;137:2;211:23;;-1:-1:-1;;;;;263:31:211;;253:42;;243:2;;309:1;306;299:12;243:2;332:5;-1:-1:-1;384:2:211;369:18;;356:32;;-1:-1:-1;439:2:211;424:18;;411:32;462:18;492:14;;;489:2;;;519:1;516;509:12;489:2;557:6;546:9;542:22;532:32;;602:7;595:4;591:2;587:13;583:27;573:2;;624:1;621;614:12;573:2;660;647:16;682:2;678;675:10;672:2;;;688:18;;:::i;:::-;763:2;757:9;731:2;817:13;;-1:-1:-1;;813:22:211;;;837:2;809:31;805:40;793:53;;;861:18;;;881:22;;;858:46;855:2;;;907:18;;:::i;:::-;947:10;943:2;936:22;982:2;974:6;967:18;1022:7;1017:2;1012;1008;1004:11;1000:20;997:33;994:2;;;1043:1;1040;1033:12;994:2;1099;1094;1090;1086:11;1081:2;1073:6;1069:15;1056:46;1144:1;1139:2;1134;1126:6;1122:15;1118:24;1111:35;1165:6;1155:16;;;;;;;127:1050;;;;;:::o;1182:290::-;1251:6;1304:2;1292:9;1283:7;1279:23;1275:32;1272:2;;;1320:1;1317;1310:12;1272:2;1346:16;;-1:-1:-1;;;;;;1391:32:211;;1381:43;;1371:2;;1438:1;1435;1428:12;1477:274;1606:3;1644:6;1638:13;1660:53;1706:6;1701:3;1694:4;1686:6;1682:17;1660:53;:::i;:::-;1729:16;;;;;1614:137;-1:-1:-1;;1614:137:211:o;1948:452::-;2123:6;2112:9;2105:25;2166:2;2161;2150:9;2146:18;2139:30;2086:4;2198:6;2192:13;2241:6;2236:2;2225:9;2221:18;2214:34;2257:66;2316:6;2311:2;2300:9;2296:18;2291:2;2283:6;2279:15;2257:66;:::i;:::-;2384:2;2363:15;-1:-1:-1;;2359:29:211;2344:45;;;;2391:2;2340:54;;2095:305;-1:-1:-1;;;2095:305:211:o;2808:258::-;2880:1;2890:113;2904:6;2901:1;2898:13;2890:113;;;2980:11;;;2974:18;2961:11;;;2954:39;2926:2;2919:10;2890:113;;;3021:6;3018:1;3015:13;3012:2;;;3056:1;3047:6;3042:3;3038:16;3031:27;3012:2;;2861:205;;;:::o;3071:127::-;3132:10;3127:3;3123:20;3120:1;3113:31;3163:4;3160:1;3153:15;3187:4;3184:1;3177:15;3203:127;3264:10;3259:3;3255:20;3252:1;3245:31;3295:4;3292:1;3285:15;3319:4;3316:1;3309:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    112,
    398
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CCEA652 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x34F JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x6D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x86 DUP6 DUP6 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9F JUMPI PUSH2 0x9F PUSH2 0x4D8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0xBD JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xCD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF5 SWAP3 SWAP2 SWAP1 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x173 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x186 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0x1B7 JUMPI POP DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x1AB SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x1FA JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1EE DUP8 DUP3 DUP6 DUP6 PUSH2 0x233 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x22C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x224 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x219 DUP7 DUP4 DUP4 PUSH2 0x320 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x22C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x26A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x317 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x282 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x293 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x310 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x317 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND PUSH1 0xFF DUP5 SWAP1 SHR PUSH1 0x1B ADD PUSH2 0x341 DUP8 DUP3 DUP9 DUP6 PUSH2 0x233 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C5 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3ED JUMPI PUSH2 0x3ED PUSH2 0x4EE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x464 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x493 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH14 0xC596023759D702842C19348D6D5F SWAP13 0xA8 CALL MLOAD 0x2A 0xD0 0xA8 0xB3 0xA8 JUMP CHAINID 0xE5 POP SWAP7 0x29 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "MSTORE",
      "path": "109"
    },
    "5": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLVALUE",
      "path": "109"
    },
    "6": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "109"
    },
    "7": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "ISZERO",
      "path": "109"
    },
    "8": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "12": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "109"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "REVERT",
      "path": "109"
    },
    "16": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "17": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "POP",
      "path": "109"
    },
    "18": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "109"
    },
    "21": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "LT",
      "path": "109"
    },
    "22": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "26": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLDATALOAD",
      "path": "109"
    },
    "29": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "SHR",
      "path": "109"
    },
    "32": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "109"
    },
    "33": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH4",
      "path": "109",
      "value": "0x6CCEA652"
    },
    "38": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "EQ",
      "path": "109"
    },
    "39": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "109"
    },
    "43": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "44": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "109"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "REVERT",
      "path": "109"
    },
    "48": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "49": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x43"
    },
    "52": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x3E"
    },
    "55": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "CALLDATASIZE",
      "path": "109"
    },
    "56": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x4"
    },
    "58": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x34F"
    },
    "61": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "109"
    },
    "62": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "63": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x57"
    },
    "66": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "109"
    },
    "67": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "68": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "70": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "ISZERO"
    },
    "73": {
      "op": "ISZERO"
    },
    "74": {
      "op": "DUP2"
    },
    "75": {
      "op": "MSTORE"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "78": {
      "op": "ADD"
    },
    "79": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x40"
    },
    "81": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "MLOAD",
      "path": "109"
    },
    "82": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "DUP1",
      "path": "109"
    },
    "83": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP2",
      "path": "109"
    },
    "84": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SUB",
      "path": "109"
    },
    "85": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "86": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "RETURN",
      "path": "109"
    },
    "87": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "88": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        323,
        327
      ],
      "op": "PUSH1",
      "path": "109",
      "value": "0x0"
    },
    "90": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        389
      ],
      "op": "PUSH2",
      "path": "109",
      "statement": 0,
      "value": "0x6D"
    },
    "93": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "97": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "99": {
      "op": "SHL"
    },
    "100": {
      "op": "SUB"
    },
    "101": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "DUP6",
      "path": "109"
    },
    "102": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "AND",
      "path": "109"
    },
    "103": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        373,
        377
      ],
      "op": "DUP5",
      "path": "109"
    },
    "104": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        379,
        388
      ],
      "op": "DUP5",
      "path": "109"
    },
    "105": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "PUSH2",
      "path": "109",
      "value": "0x77"
    },
    "108": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        346,
        389
      ],
      "op": "JUMP",
      "path": "109"
    },
    "109": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        389
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "110": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        339,
        389
      ],
      "op": "SWAP1",
      "path": "109"
    },
    "111": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        339,
        389
      ],
      "op": "POP",
      "path": "109"
    },
    "112": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "109"
    },
    "113": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP4",
      "path": "109"
    },
    "114": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP3",
      "path": "109"
    },
    "115": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "109"
    },
    "116": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "109"
    },
    "117": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "109"
    },
    "118": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "o",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "109"
    },
    "119": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        791,
        1424
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "120": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        927,
        931
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "122": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        944,
        961
      ],
      "op": "DUP1",
      "path": "189"
    },
    "123": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        963,
        987
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "125": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        991,
        1024
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x86"
    },
    "128": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1008,
        1012
      ],
      "op": "DUP6",
      "path": "189"
    },
    "129": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1014,
        1023
      ],
      "op": "DUP6",
      "path": "189"
    },
    "130": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        991,
        1007
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x1C3"
    },
    "133": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        991,
        1024
      ],
      "op": "JUMP",
      "path": "189"
    },
    "134": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        991,
        1024
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "135": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        943,
        1024
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "136": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        943,
        1024
      ],
      "op": "SWAP3",
      "path": "189"
    },
    "137": {
      "op": "POP"
    },
    "138": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        943,
        1024
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1047,
        1073
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "142": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1043
      ],
      "op": "DUP2",
      "path": "189"
    },
    "143": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x4"
    },
    "145": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "DUP2",
      "path": "189"
    },
    "146": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "GT",
      "path": "189"
    },
    "147": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "ISZERO",
      "path": "189"
    },
    "148": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x9F"
    },
    "151": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "JUMPI",
      "path": "189"
    },
    "152": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x9F"
    },
    "155": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x4D8"
    },
    "158": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1038,
        1073
      ],
      "op": "JUMP",
      "path": "189"
    },
    "159": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "160": {
      "branch": 17,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "EQ",
      "path": "189"
    },
    "161": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "DUP1",
      "path": "189"
    },
    "162": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "ISZERO",
      "path": "189"
    },
    "163": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0xBD"
    },
    "166": {
      "branch": 17,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "JUMPI",
      "path": "189"
    },
    "167": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "POP",
      "path": "189"
    },
    "168": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1090,
        1096
      ],
      "op": "DUP6",
      "path": "189"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "op": "SUB"
    },
    "177": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1096
      ],
      "op": "AND",
      "path": "189"
    },
    "178": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1086
      ],
      "op": "DUP3",
      "path": "189"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "185": {
      "op": "SHL"
    },
    "186": {
      "op": "SUB"
    },
    "187": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1096
      ],
      "op": "AND",
      "path": "189"
    },
    "188": {
      "branch": 18,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1096
      ],
      "op": "EQ",
      "path": "189"
    },
    "189": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "190": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "ISZERO",
      "path": "189"
    },
    "191": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0xCD"
    },
    "194": {
      "branch": 18,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "JUMPI",
      "path": "189"
    },
    "195": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1119,
        1123
      ],
      "op": "PUSH1",
      "path": "189",
      "statement": 1,
      "value": "0x1"
    },
    "197": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "SWAP3",
      "path": "189"
    },
    "198": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "POP",
      "path": "189"
    },
    "199": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "POP",
      "path": "189"
    },
    "200": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "POP",
      "path": "189"
    },
    "201": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x70"
    },
    "204": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "JUMP",
      "path": "189"
    },
    "205": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "206": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1145,
        1157
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "208": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1159,
        1178
      ],
      "op": "DUP1",
      "path": "189"
    },
    "209": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1188
      ],
      "op": "DUP8",
      "path": "189"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1199
      ],
      "op": "AND",
      "path": "189"
    },
    "219": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1236,
        1270
      ],
      "op": "PUSH4",
      "path": "189",
      "value": "0x1626BA7E"
    },
    "224": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1236,
        1270
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0xE0"
    },
    "226": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1236,
        1270
      ],
      "op": "SHL",
      "path": "189"
    },
    "227": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1272,
        1276
      ],
      "op": "DUP9",
      "path": "189"
    },
    "228": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1278,
        1287
      ],
      "op": "DUP9",
      "path": "189"
    },
    "229": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x40"
    },
    "231": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "232": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x24"
    },
    "234": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "ADD",
      "path": "189"
    },
    "235": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0xF5"
    },
    "238": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP3",
      "path": "189"
    },
    "239": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "240": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "241": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x46E"
    },
    "244": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1213,
        1288
      ],
      "op": "JUMP",
      "path": "189"
    },
    "245": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "246": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x40"
    },
    "248": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP1",
      "path": "189"
    },
    "249": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "252": {
      "op": "NOT"
    },
    "253": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP2",
      "path": "189"
    },
    "254": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP5",
      "path": "189"
    },
    "255": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SUB",
      "path": "189"
    },
    "256": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "ADD",
      "path": "189"
    },
    "257": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP2",
      "path": "189"
    },
    "258": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MSTORE",
      "path": "189"
    },
    "259": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "260": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP2",
      "path": "189"
    },
    "261": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MSTORE",
      "path": "189"
    },
    "262": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x20"
    },
    "264": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP3",
      "path": "189"
    },
    "265": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "ADD",
      "path": "189"
    },
    "266": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP1",
      "path": "189"
    },
    "267": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "AND",
      "path": "189"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "op": "NOT"
    },
    "286": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "287": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP5",
      "path": "189"
    },
    "288": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "AND",
      "path": "189"
    },
    "289": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP4",
      "path": "189"
    },
    "290": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "291": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP4",
      "path": "189"
    },
    "292": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "OR",
      "path": "189"
    },
    "293": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "294": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP3",
      "path": "189"
    },
    "295": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MSTORE",
      "path": "189"
    },
    "296": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "297": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "298": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x133"
    },
    "301": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "302": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "303": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x452"
    },
    "306": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMP",
      "path": "189"
    },
    "307": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "308": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "310": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x40"
    },
    "312": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "313": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP1",
      "path": "189"
    },
    "314": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP4",
      "path": "189"
    },
    "315": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SUB",
      "path": "189"
    },
    "316": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP2",
      "path": "189"
    },
    "317": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP6",
      "path": "189"
    },
    "318": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "GAS",
      "path": "189"
    },
    "319": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "STATICCALL",
      "path": "189"
    },
    "320": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "321": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "322": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "323": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "189"
    },
    "324": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP1",
      "path": "189"
    },
    "325": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "327": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP2",
      "path": "189"
    },
    "328": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "EQ",
      "path": "189"
    },
    "329": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x16E"
    },
    "332": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPI",
      "path": "189"
    },
    "333": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x40"
    },
    "335": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "336": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "337": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "338": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x1F"
    },
    "340": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "NOT",
      "path": "189"
    },
    "341": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x3F"
    },
    "343": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "189"
    },
    "344": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "ADD",
      "path": "189"
    },
    "345": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "AND",
      "path": "189"
    },
    "346": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP3",
      "path": "189"
    },
    "347": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "ADD",
      "path": "189"
    },
    "348": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x40"
    },
    "350": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MSTORE",
      "path": "189"
    },
    "351": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "189"
    },
    "352": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP3",
      "path": "189"
    },
    "353": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MSTORE",
      "path": "189"
    },
    "354": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "189"
    },
    "355": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "357": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x20"
    },
    "359": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP5",
      "path": "189"
    },
    "360": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "ADD",
      "path": "189"
    },
    "361": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATACOPY",
      "path": "189"
    },
    "362": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x173"
    },
    "365": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMP",
      "path": "189"
    },
    "366": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "367": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x60"
    },
    "369": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "370": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "371": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "372": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "373": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "374": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "375": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "SWAP2",
      "path": "189"
    },
    "376": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "POP",
      "path": "189"
    },
    "377": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1323
      ],
      "op": "DUP2",
      "path": "189",
      "statement": 2
    },
    "378": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "DUP1",
      "path": "189"
    },
    "379": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "ISZERO",
      "path": "189"
    },
    "380": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x186"
    },
    "383": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "JUMPI",
      "path": "189"
    },
    "384": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "POP",
      "path": "189"
    },
    "385": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1327,
        1333
      ],
      "op": "DUP1",
      "path": "189"
    },
    "386": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1327,
        1340
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "387": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1344,
        1346
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x20"
    },
    "389": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1327,
        1346
      ],
      "op": "EQ",
      "path": "189"
    },
    "390": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "391": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "DUP1",
      "path": "189"
    },
    "392": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "ISZERO",
      "path": "189"
    },
    "393": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x1B7"
    },
    "396": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "JUMPI",
      "path": "189"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP1",
      "path": "189"
    },
    "399": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "MLOAD",
      "path": "189"
    },
    "400": {
      "op": "PUSH4",
      "value": "0xB135D3F"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1382,
        1416
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "409": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x1AB"
    },
    "412": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "413": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP4",
      "path": "189"
    },
    "414": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "ADD",
      "path": "189"
    },
    "415": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x20"
    },
    "417": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "418": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP2",
      "path": "189"
    },
    "419": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "ADD",
      "path": "189"
    },
    "420": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "SWAP1",
      "path": "189"
    },
    "421": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP5",
      "path": "189"
    },
    "422": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "ADD",
      "path": "189"
    },
    "423": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "PUSH2",
      "path": "189",
      "value": "0x428"
    },
    "426": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1350,
        1378
      ],
      "op": "JUMP",
      "path": "189"
    },
    "427": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "op": "NOT"
    },
    "437": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1416
      ],
      "op": "AND",
      "path": "189"
    },
    "438": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1416
      ],
      "op": "EQ",
      "path": "189"
    },
    "439": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "JUMPDEST",
      "path": "189"
    },
    "440": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1308,
        1417
      ],
      "op": "SWAP9",
      "path": "189"
    },
    "441": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        791,
        1424
      ],
      "op": "SWAP8",
      "path": "189"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "op": "POP"
    },
    "445": {
      "op": "POP"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "o",
      "offset": [
        791,
        1424
      ],
      "op": "JUMP",
      "path": "189"
    },
    "451": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "452": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2309,
        2316
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "454": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2318,
        2330
      ],
      "op": "DUP1",
      "path": "187"
    },
    "455": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2548
      ],
      "op": "DUP3",
      "path": "187"
    },
    "456": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2555
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "457": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2559,
        2561
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x41"
    },
    "459": {
      "branch": 11,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2561
      ],
      "op": "EQ",
      "path": "187"
    },
    "460": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "461": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1FA"
    },
    "464": {
      "branch": 11,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "465": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2832
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "467": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "DUP4",
      "path": "187"
    },
    "468": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "ADD",
      "path": "187"
    },
    "469": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "470": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2881
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "472": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "DUP5",
      "path": "187"
    },
    "473": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "ADD",
      "path": "187"
    },
    "474": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "475": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2938
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x60"
    },
    "477": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "DUP6",
      "path": "187"
    },
    "478": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "ADD",
      "path": "187"
    },
    "479": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2913,
        2940
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "480": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2577,
        2586
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "482": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "BYTE",
      "path": "187"
    },
    "483": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 3,
      "value": "0x1EE"
    },
    "486": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2986,
        2990
      ],
      "op": "DUP8",
      "path": "187"
    },
    "487": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "DUP3",
      "path": "187"
    },
    "488": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "DUP6",
      "path": "187"
    },
    "489": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "DUP6",
      "path": "187"
    },
    "490": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        2985
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x233"
    },
    "493": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMP",
      "path": "187"
    },
    "494": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "495": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "496": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "187"
    },
    "497": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "498": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "187"
    },
    "499": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "187"
    },
    "500": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "187"
    },
    "501": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "187"
    },
    "502": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x22C"
    },
    "505": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "JUMP",
      "path": "187"
    },
    "506": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "507": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3030
      ],
      "op": "DUP3",
      "path": "187"
    },
    "508": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3037
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "509": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3041,
        3043
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "511": {
      "branch": 12,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3043
      ],
      "op": "EQ",
      "path": "187"
    },
    "512": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "513": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x224"
    },
    "516": {
      "branch": 12,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "517": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3294
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "519": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "DUP4",
      "path": "187"
    },
    "520": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "ADD",
      "path": "187"
    },
    "521": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "522": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3344
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "524": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "DUP5",
      "path": "187"
    },
    "525": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "ADD",
      "path": "187"
    },
    "526": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "527": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 4,
      "value": "0x219"
    },
    "530": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3391,
        3395
      ],
      "op": "DUP7",
      "path": "187"
    },
    "531": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "DUP4",
      "path": "187"
    },
    "532": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "DUP4",
      "path": "187"
    },
    "533": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3390
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x320"
    },
    "536": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMP",
      "path": "187"
    },
    "537": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "538": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "539": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "187"
    },
    "540": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "541": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "187"
    },
    "542": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "187"
    },
    "543": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "187"
    },
    "544": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x22C"
    },
    "547": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "JUMP",
      "path": "187"
    },
    "548": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 5,
      "value": "0x0"
    },
    "552": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3454,
        3489
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x2"
    },
    "556": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "557": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "558": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "187"
    },
    "559": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "560": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "561": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "187"
    },
    "562": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMP",
      "path": "187"
    },
    "563": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "564": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5870,
        5877
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "566": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5870,
        5877
      ],
      "op": "DUP1",
      "path": "187"
    },
    "567": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6799,
        6865
      ],
      "op": "PUSH32",
      "path": "187",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "600": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6786,
        6865
      ],
      "op": "DUP4",
      "path": "187"
    },
    "601": {
      "branch": 13,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6786,
        6865
      ],
      "op": "GT",
      "path": "187"
    },
    "602": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6782,
        6943
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "603": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6782,
        6943
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x26A"
    },
    "606": {
      "branch": 13,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6782,
        6943
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6897,
        6898
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 6,
      "value": "0x0"
    },
    "610": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6897,
        6898
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        6931
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x3"
    },
    "614": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6881,
        6932
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x317"
    },
    "617": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6881,
        6932
      ],
      "op": "JUMP",
      "path": "187"
    },
    "618": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6782,
        6943
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "619": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6957
      ],
      "op": "DUP5",
      "path": "187"
    },
    "620": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6963
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0xFF"
    },
    "622": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6963
      ],
      "op": "AND",
      "path": "187"
    },
    "623": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6961,
        6963
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1B"
    },
    "625": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6963
      ],
      "op": "EQ",
      "path": "187"
    },
    "626": {
      "branch": 14,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6963
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "627": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6974
      ],
      "op": "DUP1",
      "path": "187"
    },
    "628": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6974
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "629": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6974
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x282"
    },
    "632": {
      "branch": 14,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6974
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "633": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6974
      ],
      "op": "POP",
      "path": "187"
    },
    "634": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6967,
        6968
      ],
      "op": "DUP5",
      "path": "187"
    },
    "635": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6967,
        6974
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0xFF"
    },
    "637": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6967,
        6974
      ],
      "op": "AND",
      "path": "187"
    },
    "638": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6972,
        6974
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1C"
    },
    "640": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6967,
        6974
      ],
      "op": "EQ",
      "path": "187"
    },
    "641": {
      "branch": 15,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6967,
        6974
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "642": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6974
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "643": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6952,
        7052
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "644": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6952,
        7052
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x293"
    },
    "647": {
      "branch": 15,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6952,
        7052
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7006,
        7007
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 7,
      "value": "0x0"
    },
    "651": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7006,
        7007
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7010,
        7040
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "655": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6990,
        7041
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x317"
    },
    "658": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6990,
        7041
      ],
      "op": "JUMP",
      "path": "187"
    },
    "659": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6952,
        7052
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "660": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "662": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP1",
      "path": "187"
    },
    "663": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "664": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7160
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "666": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP1",
      "path": "187"
    },
    "667": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP3",
      "path": "187"
    },
    "668": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "669": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "671": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP3",
      "path": "187"
    },
    "672": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "ADD",
      "path": "187"
    },
    "673": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP1",
      "path": "187"
    },
    "674": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP5",
      "path": "187"
    },
    "675": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "676": {
      "op": "DUP10"
    },
    "677": {
      "op": "SWAP1"
    },
    "678": {
      "op": "MSTORE"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "681": {
      "op": "DUP9"
    },
    "682": {
      "op": "AND"
    },
    "683": {
      "op": "SWAP3"
    },
    "684": {
      "op": "DUP3"
    },
    "685": {
      "op": "ADD"
    },
    "686": {
      "op": "SWAP3"
    },
    "687": {
      "op": "SWAP1"
    },
    "688": {
      "op": "SWAP3"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "ADD"
    },
    "694": {
      "op": "DUP7"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "MSTORE"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "699": {
      "op": "DUP2"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "op": "DUP6"
    },
    "702": {
      "op": "SWAP1"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1"
    },
    "706": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "709": {
      "op": "ADD"
    },
    "710": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "712": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "714": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "715": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "717": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP2",
      "path": "187"
    },
    "718": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "SUB",
      "path": "187"
    },
    "719": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "720": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP1",
      "path": "187"
    },
    "721": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP5",
      "path": "187"
    },
    "722": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "SUB",
      "path": "187"
    },
    "723": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "724": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP6",
      "path": "187"
    },
    "725": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "GAS",
      "path": "187"
    },
    "726": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "STATICCALL",
      "path": "187"
    },
    "727": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "728": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP1",
      "path": "187"
    },
    "729": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "730": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x2E7"
    },
    "733": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "734": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "735": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "737": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "DUP1",
      "path": "187"
    },
    "738": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "RETURNDATACOPY",
      "path": "187"
    },
    "739": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "740": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "742": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "REVERT",
      "path": "187"
    },
    "743": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "748": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "751": {
      "op": "NOT"
    },
    "752": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "ADD",
      "path": "187"
    },
    "753": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "754": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7163,
        7187
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "SUB"
    },
    "765": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7201,
        7221
      ],
      "op": "DUP2",
      "path": "187"
    },
    "766": {
      "branch": 16,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7201,
        7221
      ],
      "op": "AND",
      "path": "187"
    },
    "767": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7197,
        7298
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x310"
    },
    "770": {
      "branch": 16,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7197,
        7298
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "771": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7253,
        7254
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 8,
      "value": "0x0"
    },
    "773": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7257,
        7286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1"
    },
    "775": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "776": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "POP",
      "path": "187"
    },
    "777": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "778": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "POP",
      "path": "187"
    },
    "779": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "POP",
      "path": "187"
    },
    "780": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x317"
    },
    "783": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7237,
        7287
      ],
      "op": "JUMP",
      "path": "187"
    },
    "784": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7197,
        7298
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "785": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7316,
        7322
      ],
      "op": "SWAP2",
      "path": "187",
      "statement": 9
    },
    "786": {
      "op": "POP"
    },
    "787": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7324,
        7344
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "789": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7324,
        7344
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "792": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "793": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "POP",
      "path": "187"
    },
    "794": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "795": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "796": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "POP",
      "path": "187"
    },
    "797": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "POP",
      "path": "187"
    },
    "798": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7352
      ],
      "op": "POP",
      "path": "187"
    },
    "799": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5744,
        7352
      ],
      "op": "JUMP",
      "path": "187"
    },
    "800": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "801": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "803": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP1",
      "path": "187"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "op": "SUB"
    },
    "812": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4981,
        5056
      ],
      "op": "DUP4",
      "path": "187"
    },
    "813": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4981,
        5056
      ],
      "op": "AND",
      "path": "187"
    },
    "814": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5082,
        5085
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0xFF"
    },
    "816": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5090
      ],
      "op": "DUP5",
      "path": "187"
    },
    "817": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5090
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "818": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5090
      ],
      "op": "SHR",
      "path": "187"
    },
    "819": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5092,
        5094
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1B"
    },
    "821": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5074,
        5095
      ],
      "op": "ADD",
      "path": "187"
    },
    "822": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5121,
        5146
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 10,
      "value": "0x341"
    },
    "825": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5132,
        5136
      ],
      "op": "DUP8",
      "path": "187"
    },
    "826": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5074,
        5095
      ],
      "op": "DUP3",
      "path": "187"
    },
    "827": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5141,
        5142
      ],
      "op": "DUP9",
      "path": "187"
    },
    "828": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4981,
        5056
      ],
      "op": "DUP6",
      "path": "187"
    },
    "829": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5121,
        5131
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x233"
    },
    "832": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5121,
        5146
      ],
      "op": "JUMP",
      "path": "187"
    },
    "833": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5121,
        5146
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "834": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "835": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "187"
    },
    "836": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "837": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "187"
    },
    "838": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "187"
    },
    "839": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "187"
    },
    "840": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "841": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "POP",
      "path": "187"
    },
    "842": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "843": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "844": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "POP",
      "path": "187"
    },
    "845": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "POP",
      "path": "187"
    },
    "846": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4774,
        5153
      ],
      "op": "JUMP",
      "path": "187"
    },
    "847": {
      "op": "JUMPDEST"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "850": {
      "op": "DUP1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "855": {
      "op": "DUP5"
    },
    "856": {
      "op": "DUP7"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "op": "SLT"
    },
    "859": {
      "op": "ISZERO"
    },
    "860": {
      "op": "PUSH2",
      "value": "0x364"
    },
    "863": {
      "op": "JUMPI"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "866": {
      "op": "DUP1"
    },
    "867": {
      "op": "REVERT"
    },
    "868": {
      "op": "JUMPDEST"
    },
    "869": {
      "op": "DUP4"
    },
    "870": {
      "op": "CALLDATALOAD"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "op": "DUP2"
    },
    "880": {
      "op": "AND"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "EQ"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "889": {
      "op": "DUP1"
    },
    "890": {
      "op": "REVERT"
    },
    "891": {
      "op": "JUMPDEST"
    },
    "892": {
      "op": "SWAP3"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "896": {
      "op": "DUP5"
    },
    "897": {
      "op": "ADD"
    },
    "898": {
      "op": "CALLDATALOAD"
    },
    "899": {
      "op": "SWAP2"
    },
    "900": {
      "op": "POP"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "903": {
      "op": "DUP5"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "op": "CALLDATALOAD"
    },
    "906": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "915": {
      "op": "DUP1"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "GT"
    },
    "918": {
      "op": "ISZERO"
    },
    "919": {
      "op": "PUSH2",
      "value": "0x39F"
    },
    "922": {
      "op": "JUMPI"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "925": {
      "op": "DUP1"
    },
    "926": {
      "op": "REVERT"
    },
    "927": {
      "op": "JUMPDEST"
    },
    "928": {
      "op": "DUP2"
    },
    "929": {
      "op": "DUP7"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "SWAP2"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "op": "DUP7"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "936": {
      "op": "DUP4"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "SLT"
    },
    "939": {
      "op": "PUSH2",
      "value": "0x3B3"
    },
    "942": {
      "op": "JUMPI"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "945": {
      "op": "DUP1"
    },
    "946": {
      "op": "REVERT"
    },
    "947": {
      "op": "JUMPDEST"
    },
    "948": {
      "op": "DUP2"
    },
    "949": {
      "op": "CALLDATALOAD"
    },
    "950": {
      "op": "DUP2"
    },
    "951": {
      "op": "DUP2"
    },
    "952": {
      "op": "GT"
    },
    "953": {
      "op": "ISZERO"
    },
    "954": {
      "op": "PUSH2",
      "value": "0x3C5"
    },
    "957": {
      "op": "JUMPI"
    },
    "958": {
      "op": "PUSH2",
      "value": "0x3C5"
    },
    "961": {
      "op": "PUSH2",
      "value": "0x4EE"
    },
    "964": {
      "jump": "i",
      "op": "JUMP"
    },
    "965": {
      "op": "JUMPDEST"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "968": {
      "op": "MLOAD"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "971": {
      "op": "DUP3"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "975": {
      "op": "NOT"
    },
    "976": {
      "op": "SWAP1"
    },
    "977": {
      "op": "DUP2"
    },
    "978": {
      "op": "AND"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "AND"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "op": "SWAP1"
    },
    "986": {
      "op": "DUP4"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "GT"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "DUP4"
    },
    "991": {
      "op": "LT"
    },
    "992": {
      "op": "OR"
    },
    "993": {
      "op": "ISZERO"
    },
    "994": {
      "op": "PUSH2",
      "value": "0x3ED"
    },
    "997": {
      "op": "JUMPI"
    },
    "998": {
      "op": "PUSH2",
      "value": "0x3ED"
    },
    "1001": {
      "op": "PUSH2",
      "value": "0x4EE"
    },
    "1004": {
      "jump": "i",
      "op": "JUMP"
    },
    "1005": {
      "op": "JUMPDEST"
    },
    "1006": {
      "op": "DUP2"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "DUP3"
    },
    "1011": {
      "op": "DUP2"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "DUP10"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1016": {
      "op": "DUP5"
    },
    "1017": {
      "op": "DUP8"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "ADD"
    },
    "1020": {
      "op": "GT"
    },
    "1021": {
      "op": "ISZERO"
    },
    "1022": {
      "op": "PUSH2",
      "value": "0x406"
    },
    "1025": {
      "op": "JUMPI"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1028": {
      "op": "DUP1"
    },
    "1029": {
      "op": "REVERT"
    },
    "1030": {
      "op": "JUMPDEST"
    },
    "1031": {
      "op": "DUP3"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1034": {
      "op": "DUP7"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "op": "DUP4"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "CALLDATACOPY"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "op": "DUP5"
    },
    "1046": {
      "op": "DUP4"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "DUP1"
    },
    "1051": {
      "op": "SWAP6"
    },
    "1052": {
      "op": "POP"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "op": "POP"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "op": "SWAP3"
    },
    "1059": {
      "op": "POP"
    },
    "1060": {
      "op": "SWAP3"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "op": "SWAP3"
    },
    "1063": {
      "jump": "o",
      "op": "JUMP"
    },
    "1064": {
      "op": "JUMPDEST"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "DUP5"
    },
    "1071": {
      "op": "SUB"
    },
    "1072": {
      "op": "SLT"
    },
    "1073": {
      "op": "ISZERO"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x43A"
    },
    "1077": {
      "op": "JUMPI"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1080": {
      "op": "DUP1"
    },
    "1081": {
      "op": "REVERT"
    },
    "1082": {
      "op": "JUMPDEST"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "MLOAD"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "op": "NOT"
    },
    "1094": {
      "op": "DUP2"
    },
    "1095": {
      "op": "AND"
    },
    "1096": {
      "op": "DUP2"
    },
    "1097": {
      "op": "EQ"
    },
    "1098": {
      "op": "PUSH2",
      "value": "0x70"
    },
    "1101": {
      "op": "JUMPI"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1104": {
      "op": "DUP1"
    },
    "1105": {
      "op": "REVERT"
    },
    "1106": {
      "op": "JUMPDEST"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1109": {
      "op": "DUP3"
    },
    "1110": {
      "op": "MLOAD"
    },
    "1111": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1114": {
      "op": "DUP2"
    },
    "1115": {
      "op": "DUP5"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1118": {
      "op": "DUP8"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1123": {
      "jump": "i",
      "op": "JUMP"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "op": "SWAP2"
    },
    "1126": {
      "op": "SWAP1"
    },
    "1127": {
      "op": "SWAP2"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "SWAP3"
    },
    "1130": {
      "op": "SWAP2"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "jump": "o",
      "op": "JUMP"
    },
    "1134": {
      "op": "JUMPDEST"
    },
    "1135": {
      "op": "DUP3"
    },
    "1136": {
      "op": "DUP2"
    },
    "1137": {
      "op": "MSTORE"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "op": "MSTORE"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP3"
    },
    "1148": {
      "op": "MLOAD"
    },
    "1149": {
      "op": "DUP1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1152": {
      "op": "DUP5"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x493"
    },
    "1158": {
      "op": "DUP2"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1161": {
      "op": "DUP6"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1165": {
      "op": "DUP8"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1170": {
      "jump": "i",
      "op": "JUMP"
    },
    "1171": {
      "op": "JUMPDEST"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1174": {
      "op": "ADD"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1177": {
      "op": "NOT"
    },
    "1178": {
      "op": "AND"
    },
    "1179": {
      "op": "SWAP2"
    },
    "1180": {
      "op": "SWAP1"
    },
    "1181": {
      "op": "SWAP2"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "op": "SWAP4"
    },
    "1187": {
      "op": "SWAP3"
    },
    "1188": {
      "op": "POP"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "jump": "o",
      "op": "JUMP"
    },
    "1192": {
      "op": "JUMPDEST"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "op": "DUP4"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "LT"
    },
    "1199": {
      "op": "ISZERO"
    },
    "1200": {
      "op": "PUSH2",
      "value": "0x4C3"
    },
    "1203": {
      "op": "JUMPI"
    },
    "1204": {
      "op": "DUP2"
    },
    "1205": {
      "op": "DUP2"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "MLOAD"
    },
    "1208": {
      "op": "DUP4"
    },
    "1209": {
      "op": "DUP3"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "MSTORE"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x4AB"
    },
    "1218": {
      "op": "JUMP"
    },
    "1219": {
      "op": "JUMPDEST"
    },
    "1220": {
      "op": "DUP4"
    },
    "1221": {
      "op": "DUP2"
    },
    "1222": {
      "op": "GT"
    },
    "1223": {
      "op": "ISZERO"
    },
    "1224": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1227": {
      "op": "JUMPI"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1230": {
      "op": "DUP5"
    },
    "1231": {
      "op": "DUP5"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "op": "MSTORE"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "jump": "o",
      "op": "JUMP"
    },
    "1240": {
      "op": "JUMPDEST"
    },
    "1241": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1251": {
      "op": "MSTORE"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1256": {
      "op": "MSTORE"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1261": {
      "op": "REVERT"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1283": {
      "op": "REVERT"
    }
  },
  "sha1": "9c65a2a647015c763080192c89b8da94a84e1af7",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/SignatureChecker.sol\";\n\ncontract SignatureCheckerMock {\n    using SignatureChecker for address;\n\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) public view returns (bool) {\n        return signer.isValidSignatureNow(hash, signature);\n    }\n}\n",
  "sourceMap": "112:286:109:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/SignatureCheckerMock.sol",
  "type": "contract"
}