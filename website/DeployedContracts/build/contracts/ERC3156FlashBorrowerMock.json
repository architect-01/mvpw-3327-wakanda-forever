{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "enableReturn",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "enableApprove",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "BalanceOf",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TotalSupply",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "146": "contracts/OpenZepellin/contracts/token/ERC20/IERC20.sol",
    "178": "contracts/OpenZepellin/contracts/utils/Address.sol",
    "30": "contracts/OpenZepellin/contracts/interfaces/IERC3156FlashBorrower.sol",
    "76": "contracts/OpenZepellin/contracts/mocks/ERC3156FlashBorrowerMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/ERC3156FlashBorrowerMock.sol",
    "exportedSymbols": {
      "Address": [
        24338
      ],
      "ERC3156FlashBorrowerMock": [
        8845
      ],
      "IERC20": [
        18696
      ],
      "IERC3156FlashBorrower": [
        6130
      ],
      "IERC3156FlashLender": [
        6168
      ]
    },
    "id": 8846,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8715,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:76"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 8716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8846,
        "sourceUnit": 18697,
        "src": "58:35:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/interfaces/IERC3156.sol",
        "file": "../interfaces/IERC3156.sol",
        "id": 8717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8846,
        "sourceUnit": 29977,
        "src": "94:36:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 8718,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8846,
        "sourceUnit": 24339,
        "src": "131:30:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8720,
              "name": "IERC3156FlashBorrower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6130,
              "src": "662:21:76"
            },
            "id": 8721,
            "nodeType": "InheritanceSpecifier",
            "src": "662:21:76"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8719,
          "nodeType": "StructuredDocumentation",
          "src": "163:461:76",
          "text": " @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n Following best practices, always have your contract properly audited before using them to manipulate important funds on\n live networks."
        },
        "fullyImplemented": true,
        "id": 8845,
        "linearizedBaseContracts": [
          8845,
          6130
        ],
        "name": "ERC3156FlashBorrowerMock",
        "nameLocation": "634:24:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8726,
            "mutability": "constant",
            "name": "_RETURN_VALUE",
            "nameLocation": "716:13:76",
            "nodeType": "VariableDeclaration",
            "scope": 8845,
            "src": "690:87:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8722,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
                  "id": 8724,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "742:34:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  },
                  "value": "ERC3156FlashBorrower.onFlashLoan"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
                    "typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
                  }
                ],
                "id": 8723,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "732:9:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 8725,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "732:45:76",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8728,
            "mutability": "immutable",
            "name": "_enableApprove",
            "nameLocation": "799:14:76",
            "nodeType": "VariableDeclaration",
            "scope": 8845,
            "src": "784:29:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8727,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:76",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8730,
            "mutability": "immutable",
            "name": "_enableReturn",
            "nameLocation": "834:13:76",
            "nodeType": "VariableDeclaration",
            "scope": 8845,
            "src": "819:28:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8729,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "819:4:76",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 8738,
            "name": "BalanceOf",
            "nameLocation": "860:9:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8732,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "878:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8738,
                  "src": "870:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8734,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "893:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8738,
                  "src": "885:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8736,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "910:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8738,
                  "src": "902:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:47:76"
            },
            "src": "854:63:76"
          },
          {
            "anonymous": false,
            "id": 8744,
            "name": "TotalSupply",
            "nameLocation": "928:11:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8740,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "948:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8744,
                  "src": "940:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8742,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "963:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8744,
                  "src": "955:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:30:76"
            },
            "src": "922:48:76"
          },
          {
            "body": {
              "id": 8759,
              "nodeType": "Block",
              "src": "1027:85:76",
              "statements": [
                {
                  "expression": {
                    "id": 8753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8751,
                      "name": "_enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8728,
                      "src": "1037:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8752,
                      "name": "enableApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8748,
                      "src": "1054:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1037:30:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8754,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:30:76"
                },
                {
                  "expression": {
                    "id": 8757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8755,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8730,
                      "src": "1077:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8756,
                      "name": "enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8746,
                      "src": "1093:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1077:28:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8758,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:28:76"
                }
              ]
            },
            "id": 8760,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8746,
                  "mutability": "mutable",
                  "name": "enableReturn",
                  "nameLocation": "993:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8760,
                  "src": "988:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8748,
                  "mutability": "mutable",
                  "name": "enableApprove",
                  "nameLocation": "1012:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8760,
                  "src": "1007:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8747,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:4:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:39:76"
            },
            "returnParameters": {
              "id": 8750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:0:76"
            },
            "scope": 8845,
            "src": "976:136:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6129
            ],
            "body": {
              "id": 8843,
              "nodeType": "Block",
              "src": "1307:516:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8777,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1325:3:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1325:10:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8779,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8764,
                          "src": "1339:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1325:19:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1317:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:28:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8782,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:28:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8784,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8764,
                        "src": "1371:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8787,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1386:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8845",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8845",
                              "typeString": "contract ERC3156FlashBorrowerMock"
                            }
                          ],
                          "id": 8786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1378:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1378:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 8795,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1425:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8845",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC3156FlashBorrowerMock_$8845",
                                  "typeString": "contract ERC3156FlashBorrowerMock"
                                }
                              ],
                              "id": 8794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1417:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8793,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1417:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1417:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8790,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8764,
                                "src": "1400:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8789,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18696,
                              "src": "1393:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$18696_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 8791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1393:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$18696",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18635,
                          "src": "1393:23:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 8797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1393:38:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8783,
                      "name": "BalanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8738,
                      "src": "1361:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:71:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8799,
                  "nodeType": "EmitStatement",
                  "src": "1356:76:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8801,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8764,
                        "src": "1459:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8803,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8764,
                                "src": "1473:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8802,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18696,
                              "src": "1466:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$18696_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 8804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1466:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$18696",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18627,
                          "src": "1466:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 8806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:27:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8800,
                      "name": "TotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8744,
                      "src": "1447:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:47:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8808,
                  "nodeType": "EmitStatement",
                  "src": "1442:52:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8809,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8770,
                        "src": "1509:4:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 8810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1509:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1509:15:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8821,
                  "nodeType": "IfStatement",
                  "src": "1505:155:76",
                  "trueBody": {
                    "id": 8820,
                    "nodeType": "Block",
                    "src": "1526:134:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8816,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8764,
                              "src": "1637:5:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8817,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8770,
                              "src": "1644:4:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 8813,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24338,
                              "src": "1616:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$24338_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 8815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24112,
                            "src": "1616:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 8818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:33:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 8819,
                        "nodeType": "ExpressionStatement",
                        "src": "1616:33:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8822,
                    "name": "_enableApprove",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8728,
                    "src": "1674:14:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8834,
                  "nodeType": "IfStatement",
                  "src": "1670:87:76",
                  "trueBody": {
                    "id": 8833,
                    "nodeType": "Block",
                    "src": "1690:67:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8827,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8764,
                              "src": "1726:5:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8828,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8766,
                                "src": "1733:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 8829,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8768,
                                "src": "1742:3:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1733:12:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8824,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8764,
                                  "src": "1711:5:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8823,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18696,
                                "src": "1704:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$18696_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1704:13:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$18696",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18665,
                            "src": "1704:21:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 8831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:42:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8832,
                        "nodeType": "ExpressionStatement",
                        "src": "1704:42:76"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "id": 8835,
                      "name": "_enableReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8730,
                      "src": "1774:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1814:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1806:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8837,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1806:7:76",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1806:10:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 8841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1774:42:76",
                    "trueExpression": {
                      "id": 8836,
                      "name": "_RETURN_VALUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8726,
                      "src": "1790:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 8775,
                  "id": 8842,
                  "nodeType": "Return",
                  "src": "1767:49:76"
                }
              ]
            },
            "functionSelector": "23e30c8b",
            "id": 8844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onFlashLoan",
            "nameLocation": "1127:11:76",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8772,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1280:8:76"
            },
            "parameters": {
              "id": 8771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "1148:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8764,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1187:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "1179:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8766,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1210:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "1202:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8768,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1234:3:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "1226:11:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8770,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1262:4:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "1247:19:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8769,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:134:76"
            },
            "returnParameters": {
              "id": 8775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "1298:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:9:76"
            },
            "scope": 8845,
            "src": "1118:705:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8846,
        "src": "625:1200:76",
        "usedErrors": []
      }
    ],
    "src": "33:1793:76"
  },
  "bytecode": "60c060405234801561001057600080fd5b5060405161079038038061079083398101604081905261002f9161005b565b151560f890811b608052901515901b60a05261008e565b8051801515811461005657600080fd5b919050565b6000806040838503121561006e57600080fd5b61007783610046565b915061008560208401610046565b90509250929050565b60805160f81c60a05160f81c6106d76100b960003960006102f20152600061023201526106d76000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e36600461051b565b610055565b60405190815260200160405180910390f35b6000336001600160a01b0387161461006c57600080fd5b6040516370a0823160e01b815230600482018190527f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b918891906001600160a01b038316906370a082319060240160206040518083038186803b1580156100d257600080fd5b505afa1580156100e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010a91906105e3565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc586876001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018e57600080fd5b505afa1580156101a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c691906105e3565b604080516001600160a01b03909316835260208301919091520160405180910390a181156102305761022e8684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061034992505050565b505b7f0000000000000000000000000000000000000000000000000000000000000000156102f0576001600160a01b03861663095ea7b387610270878961064b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156102b657600080fd5b505af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee91906105c1565b505b7f000000000000000000000000000000000000000000000000000000000000000061031c57600061033e565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b979650505050505050565b606061038b83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610392565b9392505050565b60606103a184846000856103a9565b949350505050565b60608247101561040f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b843b61045d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610406565b600080866001600160a01b0316858760405161047991906105fc565b60006040518083038185875af1925050503d80600081146104b6576040519150601f19603f3d011682016040523d82523d6000602084013e6104bb565b606091505b509150915061033e828286606083156104d557508161038b565b8251156104e55782518084602001fd5b8160405162461bcd60e51b81526004016104069190610618565b80356001600160a01b038116811461051657600080fd5b919050565b60008060008060008060a0878903121561053457600080fd5b61053d876104ff565b955061054b602088016104ff565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561057657600080fd5b818901915089601f83011261058a57600080fd5b81358181111561059957600080fd5b8a60208285010111156105ab57600080fd5b6020830194508093505050509295509295509295565b6000602082840312156105d357600080fd5b8151801515811461038b57600080fd5b6000602082840312156105f557600080fd5b5051919050565b6000825161060e818460208701610671565b9190910192915050565b6020815260008251806020840152610637816040850160208701610671565b601f01601f19169190910160400192915050565b6000821982111561066c57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561068c578181015183820152602001610674565b8381111561069b576000848401525b5050505056fea26469706673582212200e02be81d3db7374a3f8e2ee3f9265752cc97325ebd5fea93193d3358d775ec664736f6c63430008060033",
  "bytecodeSha1": "eeae718e7e623100dfe7546e7d53793a270fb7d7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "ERC3156FlashBorrowerMock",
  "coverageMap": {
    "branches": {
      "146": {},
      "178": {
        "Address.functionCallWithValue": {
          "17": [
            4798,
            4828,
            true
          ]
        },
        "Address.verifyCallResult": {
          "18": [
            7388,
            7395,
            false
          ],
          "19": [
            7529,
            7550,
            false
          ]
        }
      },
      "30": {},
      "76": {
        "ERC3156FlashBorrowerMock.onFlashLoan": {
          "13": [
            1325,
            1344,
            true
          ],
          "14": [
            1509,
            1524,
            false
          ],
          "15": [
            1674,
            1688,
            false
          ],
          "16": [
            1774,
            1787,
            true
          ]
        }
      }
    },
    "statements": {
      "146": {},
      "178": {
        "Address.functionCall": {
          "6": [
            3218,
            3285
          ],
          "7": [
            3671,
            3730
          ]
        },
        "Address.functionCallWithValue": {
          "8": [
            4790,
            4871
          ],
          "9": [
            4881,
            4941
          ],
          "10": [
            5035,
            5093
          ]
        },
        "Address.verifyCallResult": {
          "11": [
            7411,
            7428
          ],
          "12": [
            7855,
            7875
          ]
        }
      },
      "30": {},
      "76": {
        "ERC3156FlashBorrowerMock.onFlashLoan": {
          "0": [
            1317,
            1345
          ],
          "1": [
            1356,
            1432
          ],
          "2": [
            1442,
            1494
          ],
          "3": [
            1616,
            1649
          ],
          "4": [
            1704,
            1746
          ],
          "5": [
            1767,
            1816
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "IERC3156FlashBorrower"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e36600461051b565b610055565b60405190815260200160405180910390f35b6000336001600160a01b0387161461006c57600080fd5b6040516370a0823160e01b815230600482018190527f6ff2acfcb07917b1e80e53f0fe390b467b1151d15b38730a6e08397799c05a8b918891906001600160a01b038316906370a082319060240160206040518083038186803b1580156100d257600080fd5b505afa1580156100e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010a91906105e3565b604080516001600160a01b0394851681529390921660208401529082015260600160405180910390a17f7249fd4c03cce09b30a13d77804b198e2647c0ccd59eadf4de4e7c16099badc586876001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018e57600080fd5b505afa1580156101a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c691906105e3565b604080516001600160a01b03909316835260208301919091520160405180910390a181156102305761022e8684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061034992505050565b505b7f0000000000000000000000000000000000000000000000000000000000000000156102f0576001600160a01b03861663095ea7b387610270878961064b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156102b657600080fd5b505af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee91906105c1565b505b7f000000000000000000000000000000000000000000000000000000000000000061031c57600061033e565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd95b979650505050505050565b606061038b83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610392565b9392505050565b60606103a184846000856103a9565b949350505050565b60608247101561040f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b843b61045d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610406565b600080866001600160a01b0316858760405161047991906105fc565b60006040518083038185875af1925050503d80600081146104b6576040519150601f19603f3d011682016040523d82523d6000602084013e6104bb565b606091505b509150915061033e828286606083156104d557508161038b565b8251156104e55782518084602001fd5b8160405162461bcd60e51b81526004016104069190610618565b80356001600160a01b038116811461051657600080fd5b919050565b60008060008060008060a0878903121561053457600080fd5b61053d876104ff565b955061054b602088016104ff565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561057657600080fd5b818901915089601f83011261058a57600080fd5b81358181111561059957600080fd5b8a60208285010111156105ab57600080fd5b6020830194508093505050509295509295509295565b6000602082840312156105d357600080fd5b8151801515811461038b57600080fd5b6000602082840312156105f557600080fd5b5051919050565b6000825161060e818460208701610671565b9190910192915050565b6020815260008251806020840152610637816040850160208701610671565b601f01601f19169190910160400192915050565b6000821982111561066c57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561068c578181015183820152602001610674565b8381111561069b576000848401525b5050505056fea26469706673582212200e02be81d3db7374a3f8e2ee3f9265752cc97325ebd5fea93193d3358d775ec664736f6c63430008060033",
  "deployedSourceMap": "625:1200:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:705;;;;;;:::i;:::-;;:::i;:::-;;;2837:25:211;;;2825:2;2810:18;1118:705:76;;;;;;;;1298:7;1325:10;-1:-1:-1;;;;;1325:19:76;;;1317:28;;;;;;1393:38;;-1:-1:-1;;;1393:38:76;;1386:4;1393:38;;;1970:51:211;;;1361:71:76;;1371:5;;1386:4;-1:-1:-1;;;;;1393:23:76;;;;;1943:18:211;;1393:38:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1361:71;;;-1:-1:-1;;;;;2290:15:211;;;2272:34;;2342:15;;;;2337:2;2322:18;;2315:43;2374:18;;;2367:34;2222:2;2207:18;1361:71:76;;;;;;;1447:47;1459:5;1473;-1:-1:-1;;;;;1466:25:76;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:47;;;-1:-1:-1;;;;;2604:32:211;;;2586:51;;2668:2;2653:18;;2646:34;;;;2559:18;1447:47:76;;;;;;;1509:15;;1505:155;;1616:33;1637:5;1644:4;;1616:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1616:20:76;;-1:-1:-1;;;1616:33:76:i;:::-;;1505:155;1674:14;1670:87;;;-1:-1:-1;;;;;1704:21:76;;;1711:5;1733:12;1742:3;1733:6;:12;:::i;:::-;1704:42;;-1:-1:-1;;;;;;1704:42:76;;;;;;;-1:-1:-1;;;;;2604:32:211;;;1704:42:76;;;2586:51:211;2653:18;;;2646:34;2559:18;;1704:42:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1670:87;1774:13;:42;;1814:1;1774:42;;;732:45;1774:42;1767:49;1118:705;-1:-1:-1;;;;;;;1118:705:76:o;3119:173:178:-;3194:12;3225:60;3238:6;3246:4;3225:60;;;;;;;;;;;;;;;;;:12;:60::i;:::-;3218:67;3119:173;-1:-1:-1;;;3119:173:178:o;3514:223::-;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;3514:223;-1:-1:-1;;;;3514:223:178:o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:178;;3463:2:211;4790:81:178;;;3445:21:211;3502:2;3482:18;;;3475:30;3541:34;3521:18;;;3514:62;-1:-1:-1;;;3592:18:211;;;3585:36;3638:19;;4790:81:178;;;;;;;;;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:178;;3870:2:211;4881:60:178;;;3852:21:211;3909:2;3889:18;;;3882:30;3948:31;3928:18;;;3921:59;3997:18;;4881:60:178;3842:179:211;4881:60:178;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:178;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;7360;7388:7;7384:516;;;-1:-1:-1;7418:10:178;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:178;;;;;;;;:::i;14:173:211:-;82:20;;-1:-1:-1;;;;;131:31:211;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:877::-;298:6;306;314;322;330;338;391:3;379:9;370:7;366:23;362:33;359:2;;;408:1;405;398:12;359:2;431:29;450:9;431:29;:::i;:::-;421:39;;479:38;513:2;502:9;498:18;479:38;:::i;:::-;469:48;;564:2;553:9;549:18;536:32;526:42;;615:2;604:9;600:18;587:32;577:42;;670:3;659:9;655:19;642:33;694:18;735:2;727:6;724:14;721:2;;;751:1;748;741:12;721:2;789:6;778:9;774:22;764:32;;834:7;827:4;823:2;819:13;815:27;805:2;;856:1;853;846:12;805:2;896;883:16;922:2;914:6;911:14;908:2;;;938:1;935;928:12;908:2;983:7;978:2;969:6;965:2;961:15;957:24;954:37;951:2;;;1004:1;1001;994:12;951:2;1035;1031;1027:11;1017:21;;1057:6;1047:16;;;;;349:720;;;;;;;;:::o;1074:277::-;1141:6;1194:2;1182:9;1173:7;1169:23;1165:32;1162:2;;;1210:1;1207;1200:12;1162:2;1242:9;1236:16;1295:5;1288:13;1281:21;1274:5;1271:32;1261:2;;1317:1;1314;1307:12;1356:184;1426:6;1479:2;1467:9;1458:7;1454:23;1450:32;1447:2;;;1495:1;1492;1485:12;1447:2;-1:-1:-1;1518:16:211;;1437:103;-1:-1:-1;1437:103:211:o;1545:274::-;1674:3;1712:6;1706:13;1728:53;1774:6;1769:3;1762:4;1754:6;1750:17;1728:53;:::i;:::-;1797:16;;;;;1682:137;-1:-1:-1;;1682:137:211:o;2873:383::-;3022:2;3011:9;3004:21;2985:4;3054:6;3048:13;3097:6;3092:2;3081:9;3077:18;3070:34;3113:66;3172:6;3167:2;3156:9;3152:18;3147:2;3139:6;3135:15;3113:66;:::i;:::-;3240:2;3219:15;-1:-1:-1;;3215:29:211;3200:45;;;;3247:2;3196:54;;2994:262;-1:-1:-1;;2994:262:211:o;4026:225::-;4066:3;4097:1;4093:6;4090:1;4087:13;4084:2;;;4142:10;4137:3;4133:20;4130:1;4123:31;4177:4;4174:1;4167:15;4205:4;4202:1;4195:15;4084:2;-1:-1:-1;4236:9:211;;4074:177::o;4256:258::-;4328:1;4338:113;4352:6;4349:1;4346:13;4338:113;;;4428:11;;;4422:18;4409:11;;;4402:39;4374:2;4367:10;4338:113;;;4469:6;4466:1;4463:13;4460:2;;;4504:1;4495:6;4490:3;4486:16;4479:27;4460:2;;4309:205;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY. Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care. This is not an example of how it should be done, and no pattern present in this mock should be considered secure. Following best practices, always have your contract properly audited before using them to manipulate important funds on live networks.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    625,
    1825
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23E30C8B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x6FF2ACFCB07917B1E80E53F0FE390B467B1151D15B38730A6E08397799C05A8B SWAP2 DUP9 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x7249FD4C03CCE09B30A13D77804B198E2647C0CCD59EADF4DE4E7C16099BADC5 DUP7 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 ISZERO PUSH2 0x230 JUMPI PUSH2 0x22E DUP7 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x349 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0x95EA7B3 DUP8 PUSH2 0x270 DUP8 DUP10 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST POP JUMPDEST PUSH32 0x0 PUSH2 0x31C JUMPI PUSH1 0x0 PUSH2 0x33E JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x38B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416464726573733A206C6F772D6C6576656C2063616C6C206661696C65640000 DUP2 MSTORE POP PUSH2 0x392 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3A1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 EXTCODESIZE PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x406 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x33E DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x4D5 JUMPI POP DUP2 PUSH2 0x38B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4E5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53D DUP8 PUSH2 0x4FF JUMP JUMPDEST SWAP6 POP PUSH2 0x54B PUSH1 0x20 DUP9 ADD PUSH2 0x4FF JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x60E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x637 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x68C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x674 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE MUL 0xBE DUP2 0xD3 0xDB PUSH20 0x74A3F8E2EE3F9265752CC97325EBD5FEA93193D3 CALLDATALOAD DUP14 PUSH24 0x5EC664736F6C634300080600330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "5": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "CALLVALUE",
      "path": "76"
    },
    "6": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "76"
    },
    "7": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "8": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "12": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "76"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "REVERT",
      "path": "76"
    },
    "16": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "17": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "POP",
      "path": "76"
    },
    "18": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "21": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "LT",
      "path": "76"
    },
    "22": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "26": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "CALLDATALOAD",
      "path": "76"
    },
    "29": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "SHR",
      "path": "76"
    },
    "32": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "76"
    },
    "33": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x23E30C8B"
    },
    "38": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "EQ",
      "path": "76"
    },
    "39": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "43": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "44": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "DUP1",
      "path": "76"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        625,
        1825
      ],
      "op": "REVERT",
      "path": "76"
    },
    "48": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "49": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x43"
    },
    "52": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x3E"
    },
    "55": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "CALLDATASIZE",
      "path": "76"
    },
    "56": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "58": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x51B"
    },
    "61": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMP",
      "path": "76"
    },
    "62": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "63": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x55"
    },
    "66": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMP",
      "path": "76"
    },
    "67": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "68": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "70": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "DUP2"
    },
    "73": {
      "op": "MSTORE"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "76": {
      "op": "ADD"
    },
    "77": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "79": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "80": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "DUP1",
      "path": "76"
    },
    "81": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "82": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SUB",
      "path": "76"
    },
    "83": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "84": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "RETURN",
      "path": "76"
    },
    "85": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "86": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1298,
        1305
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "88": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1335
      ],
      "op": "CALLER",
      "path": "76",
      "statement": 0
    },
    "89": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "91": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "93": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "95": {
      "op": "SHL"
    },
    "96": {
      "op": "SUB"
    },
    "97": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1344
      ],
      "op": "DUP8",
      "path": "76"
    },
    "98": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1344
      ],
      "op": "AND",
      "path": "76"
    },
    "99": {
      "branch": 13,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1325,
        1344
      ],
      "op": "EQ",
      "path": "76"
    },
    "100": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x6C"
    },
    "103": {
      "branch": 13,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "104": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "106": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "DUP1",
      "path": "76"
    },
    "107": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "REVERT",
      "path": "76"
    },
    "108": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1317,
        1345
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "109": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "statement": 1,
      "value": "0x40"
    },
    "111": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "112": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "119": {
      "op": "SHL"
    },
    "120": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP2",
      "path": "76"
    },
    "121": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "122": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1386,
        1390
      ],
      "op": "ADDRESS",
      "path": "76"
    },
    "123": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "125": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP3",
      "path": "76"
    },
    "126": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "76"
    },
    "127": {
      "op": "DUP2"
    },
    "128": {
      "op": "SWAP1"
    },
    "129": {
      "op": "MSTORE"
    },
    "130": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "PUSH32",
      "path": "76",
      "value": "0x6FF2ACFCB07917B1E80E53F0FE390B467B1151D15B38730A6E08397799C05A8B"
    },
    "163": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "164": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1371,
        1376
      ],
      "op": "DUP9",
      "path": "76"
    },
    "165": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1371,
        1376
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "166": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1386,
        1390
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "173": {
      "op": "SHL"
    },
    "174": {
      "op": "SUB"
    },
    "175": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "DUP4",
      "path": "76"
    },
    "176": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "AND",
      "path": "76"
    },
    "177": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "178": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x70A08231"
    },
    "183": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1416
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "186": {
      "op": "ADD"
    },
    "187": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "189": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "191": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "192": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "193": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP4",
      "path": "76"
    },
    "194": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SUB",
      "path": "76"
    },
    "195": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP2",
      "path": "76"
    },
    "196": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP7",
      "path": "76"
    },
    "197": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "198": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "EXTCODESIZE",
      "path": "76"
    },
    "199": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "200": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "201": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "202": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0xD2"
    },
    "205": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "206": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "208": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "209": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "REVERT",
      "path": "76"
    },
    "210": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "211": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "76"
    },
    "212": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "GAS",
      "path": "76"
    },
    "213": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "STATICCALL",
      "path": "76"
    },
    "214": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "215": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "216": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "217": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0xE6"
    },
    "220": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "221": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "222": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "224": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "225": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATACOPY",
      "path": "76"
    },
    "226": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "227": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "229": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "REVERT",
      "path": "76"
    },
    "230": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "231": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "76"
    },
    "232": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "76"
    },
    "233": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "76"
    },
    "234": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "76"
    },
    "235": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "237": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "238": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "239": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "241": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "NOT",
      "path": "76"
    },
    "242": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "244": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP3",
      "path": "76"
    },
    "245": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "76"
    },
    "246": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "AND",
      "path": "76"
    },
    "247": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP3",
      "path": "76"
    },
    "248": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "76"
    },
    "249": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP1",
      "path": "76"
    },
    "250": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "252": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "253": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "POP",
      "path": "76"
    },
    "254": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "DUP2",
      "path": "76"
    },
    "255": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "ADD",
      "path": "76"
    },
    "256": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "257": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x10A"
    },
    "260": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "261": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "262": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5E3"
    },
    "265": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMP",
      "path": "76"
    },
    "266": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1393,
        1431
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "267": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "269": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "DUP1",
      "path": "76"
    },
    "270": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "277": {
      "op": "SHL"
    },
    "278": {
      "op": "SUB"
    },
    "279": {
      "op": "SWAP5"
    },
    "280": {
      "op": "DUP6"
    },
    "281": {
      "op": "AND"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "SWAP4"
    },
    "285": {
      "op": "SWAP1"
    },
    "286": {
      "op": "SWAP3"
    },
    "287": {
      "op": "AND"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "290": {
      "op": "DUP5"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "op": "SWAP1"
    },
    "294": {
      "op": "DUP3"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "302": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "303": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "DUP1",
      "path": "76"
    },
    "304": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "305": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SUB",
      "path": "76"
    },
    "306": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "307": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1361,
        1432
      ],
      "op": "LOG1",
      "path": "76"
    },
    "308": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "PUSH32",
      "path": "76",
      "statement": 2,
      "value": "0x7249FD4C03CCE09B30A13D77804B198E2647C0CCD59EADF4DE4E7C16099BADC5"
    },
    "341": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1459,
        1464
      ],
      "op": "DUP7",
      "path": "76"
    },
    "342": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1473,
        1478
      ],
      "op": "DUP8",
      "path": "76"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "349": {
      "op": "SHL"
    },
    "350": {
      "op": "SUB"
    },
    "351": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1491
      ],
      "op": "AND",
      "path": "76"
    },
    "352": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1491
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x18160DDD"
    },
    "357": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "359": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "360": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "76"
    },
    "361": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0xFFFFFFFF"
    },
    "366": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "AND",
      "path": "76"
    },
    "367": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0xE0"
    },
    "369": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SHL",
      "path": "76"
    },
    "370": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "76"
    },
    "371": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "372": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "374": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "76"
    },
    "375": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "377": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "379": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "380": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "381": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP4",
      "path": "76"
    },
    "382": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SUB",
      "path": "76"
    },
    "383": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "76"
    },
    "384": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP7",
      "path": "76"
    },
    "385": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "386": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "EXTCODESIZE",
      "path": "76"
    },
    "387": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "388": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "389": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "390": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x18E"
    },
    "393": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "394": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "396": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "397": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "REVERT",
      "path": "76"
    },
    "398": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "399": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "76"
    },
    "400": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "GAS",
      "path": "76"
    },
    "401": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "STATICCALL",
      "path": "76"
    },
    "402": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "403": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "404": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "405": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1A2"
    },
    "408": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "409": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "410": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "412": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "413": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATACOPY",
      "path": "76"
    },
    "414": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "415": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "417": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "REVERT",
      "path": "76"
    },
    "418": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "419": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "76"
    },
    "420": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "76"
    },
    "421": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "76"
    },
    "422": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "76"
    },
    "423": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "425": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "426": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "427": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "429": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "NOT",
      "path": "76"
    },
    "430": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "432": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP3",
      "path": "76"
    },
    "433": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "76"
    },
    "434": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "AND",
      "path": "76"
    },
    "435": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP3",
      "path": "76"
    },
    "436": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "76"
    },
    "437": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP1",
      "path": "76"
    },
    "438": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "440": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "441": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "POP",
      "path": "76"
    },
    "442": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "DUP2",
      "path": "76"
    },
    "443": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "ADD",
      "path": "76"
    },
    "444": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "445": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x1C6"
    },
    "448": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "449": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "450": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5E3"
    },
    "453": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMP",
      "path": "76"
    },
    "454": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1466,
        1493
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "455": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "457": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "DUP1",
      "path": "76"
    },
    "458": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "op": "SUB"
    },
    "467": {
      "op": "SWAP1"
    },
    "468": {
      "op": "SWAP4"
    },
    "469": {
      "op": "AND"
    },
    "470": {
      "op": "DUP4"
    },
    "471": {
      "op": "MSTORE"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "474": {
      "op": "DUP4"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "SWAP2"
    },
    "477": {
      "op": "SWAP1"
    },
    "478": {
      "op": "SWAP2"
    },
    "479": {
      "op": "MSTORE"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "483": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "484": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "DUP1",
      "path": "76"
    },
    "485": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "486": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "SUB",
      "path": "76"
    },
    "487": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "488": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1447,
        1494
      ],
      "op": "LOG1",
      "path": "76"
    },
    "489": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1509,
        1524
      ],
      "op": "DUP2",
      "path": "76"
    },
    "490": {
      "branch": 14,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1509,
        1524
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "491": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1505,
        1660
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x230"
    },
    "494": {
      "branch": 14,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1505,
        1660
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "495": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH2",
      "path": "76",
      "statement": 3,
      "value": "0x22E"
    },
    "498": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1637,
        1642
      ],
      "op": "DUP7",
      "path": "76"
    },
    "499": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1644,
        1648
      ],
      "op": "DUP5",
      "path": "76"
    },
    "500": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1644,
        1648
      ],
      "op": "DUP5",
      "path": "76"
    },
    "501": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "76"
    },
    "502": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "76"
    },
    "503": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "505": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "76"
    },
    "506": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "508": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "76"
    },
    "509": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "510": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DIV",
      "path": "76"
    },
    "511": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MUL",
      "path": "76"
    },
    "512": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "514": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "76"
    },
    "515": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "517": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "518": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "519": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP2",
      "path": "76"
    },
    "520": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "76"
    },
    "521": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "523": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "524": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "76"
    },
    "525": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP4",
      "path": "76"
    },
    "526": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "527": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "528": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "529": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP2",
      "path": "76"
    },
    "530": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP2",
      "path": "76"
    },
    "531": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "532": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "534": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "76"
    },
    "535": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP4",
      "path": "76"
    },
    "536": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP4",
      "path": "76"
    },
    "537": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP1",
      "path": "76"
    },
    "538": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP3",
      "path": "76"
    },
    "539": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "DUP5",
      "path": "76"
    },
    "540": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "CALLDATACOPY",
      "path": "76"
    },
    "541": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "543": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "544": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "ADD",
      "path": "76"
    },
    "545": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "546": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "547": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "548": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1636
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x349"
    },
    "553": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1636
      ],
      "op": "SWAP3",
      "path": "76"
    },
    "554": {
      "op": "POP"
    },
    "555": {
      "op": "POP"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1616,
        1649
      ],
      "op": "JUMP",
      "path": "76"
    },
    "558": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "559": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1616,
        1649
      ],
      "op": "POP",
      "path": "76"
    },
    "560": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1505,
        1660
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "561": {
      "branch": 15,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1674,
        1688
      ],
      "op": "PUSH32",
      "path": "76",
      "value": "0x0"
    },
    "594": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "595": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2F0"
    },
    "598": {
      "branch": 15,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "op": "SUB"
    },
    "607": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1725
      ],
      "op": "DUP7",
      "path": "76",
      "statement": 4
    },
    "608": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1725
      ],
      "op": "AND",
      "path": "76"
    },
    "609": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1725
      ],
      "op": "PUSH4",
      "path": "76",
      "value": "0x95EA7B3"
    },
    "614": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1711,
        1716
      ],
      "op": "DUP8",
      "path": "76"
    },
    "615": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1745
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x270"
    },
    "618": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1742,
        1745
      ],
      "op": "DUP8",
      "path": "76"
    },
    "619": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1739
      ],
      "op": "DUP10",
      "path": "76"
    },
    "620": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1745
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x64B"
    },
    "623": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1733,
        1745
      ],
      "op": "JUMP",
      "path": "76"
    },
    "624": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1733,
        1745
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "625": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "627": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "op": "NOT"
    },
    "637": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0xE0"
    },
    "639": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP6",
      "path": "76"
    },
    "640": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "641": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SHL",
      "path": "76"
    },
    "642": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "AND",
      "path": "76"
    },
    "643": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP2",
      "path": "76"
    },
    "644": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "651": {
      "op": "SHL"
    },
    "652": {
      "op": "SUB"
    },
    "653": {
      "op": "SWAP1"
    },
    "654": {
      "op": "SWAP3"
    },
    "655": {
      "op": "AND"
    },
    "656": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x4"
    },
    "658": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP4",
      "path": "76"
    },
    "659": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "76"
    },
    "660": {
      "op": "MSTORE"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "663": {
      "op": "DUP3"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "op": "MSTORE"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x20"
    },
    "671": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "673": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "674": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "675": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP4",
      "path": "76"
    },
    "676": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SUB",
      "path": "76"
    },
    "677": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP2",
      "path": "76"
    },
    "678": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "680": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP8",
      "path": "76"
    },
    "681": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "682": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "EXTCODESIZE",
      "path": "76"
    },
    "683": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "684": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "685": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "686": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2B6"
    },
    "689": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "690": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "692": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "693": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "REVERT",
      "path": "76"
    },
    "694": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "695": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "696": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "GAS",
      "path": "76"
    },
    "697": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "CALL",
      "path": "76"
    },
    "698": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "699": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "700": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ISZERO",
      "path": "76"
    },
    "701": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2CA"
    },
    "704": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "705": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "706": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "708": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "709": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATACOPY",
      "path": "76"
    },
    "710": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "711": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "713": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "REVERT",
      "path": "76"
    },
    "714": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "715": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "716": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "717": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "718": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "719": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "721": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MLOAD",
      "path": "76"
    },
    "722": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "76"
    },
    "723": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "725": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "NOT",
      "path": "76"
    },
    "726": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x1F"
    },
    "728": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP3",
      "path": "76"
    },
    "729": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "76"
    },
    "730": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "AND",
      "path": "76"
    },
    "731": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP3",
      "path": "76"
    },
    "732": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "76"
    },
    "733": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP1",
      "path": "76"
    },
    "734": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x40"
    },
    "736": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "MSTORE",
      "path": "76"
    },
    "737": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "738": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "DUP2",
      "path": "76"
    },
    "739": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "ADD",
      "path": "76"
    },
    "740": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "741": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x2EE"
    },
    "744": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP2",
      "path": "76"
    },
    "745": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "SWAP1",
      "path": "76"
    },
    "746": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x5C1"
    },
    "749": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "i",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMP",
      "path": "76"
    },
    "750": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "751": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1704,
        1746
      ],
      "op": "POP",
      "path": "76"
    },
    "752": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1670,
        1757
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "753": {
      "branch": 16,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1787
      ],
      "op": "PUSH32",
      "path": "76",
      "statement": 5,
      "value": "0x0"
    },
    "786": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x31C"
    },
    "789": {
      "branch": 16,
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMPI",
      "path": "76"
    },
    "790": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1814,
        1815
      ],
      "op": "PUSH1",
      "path": "76",
      "value": "0x0"
    },
    "792": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "PUSH2",
      "path": "76",
      "value": "0x33E"
    },
    "795": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMP",
      "path": "76"
    },
    "796": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "797": {
      "offset": [
        732,
        777
      ],
      "op": "PUSH32",
      "path": "76",
      "value": "0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
    },
    "830": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1774,
        1816
      ],
      "op": "JUMPDEST",
      "path": "76"
    },
    "831": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1767,
        1816
      ],
      "op": "SWAP8",
      "path": "76"
    },
    "832": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "offset": [
        1118,
        1823
      ],
      "op": "SWAP7",
      "path": "76"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "op": "POP"
    },
    "840": {
      "fn": "ERC3156FlashBorrowerMock.onFlashLoan",
      "jump": "o",
      "offset": [
        1118,
        1823
      ],
      "op": "JUMP",
      "path": "76"
    },
    "841": {
      "fn": "Address.functionCall",
      "offset": [
        3119,
        3292
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "842": {
      "fn": "Address.functionCall",
      "offset": [
        3194,
        3206
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "844": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 6,
      "value": "0x38B"
    },
    "847": {
      "fn": "Address.functionCall",
      "offset": [
        3238,
        3244
      ],
      "op": "DUP4",
      "path": "178"
    },
    "848": {
      "fn": "Address.functionCall",
      "offset": [
        3246,
        3250
      ],
      "op": "DUP4",
      "path": "178"
    },
    "849": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "851": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "852": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "DUP1",
      "path": "178"
    },
    "853": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "855": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "ADD",
      "path": "178"
    },
    "856": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "858": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "859": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "DUP1",
      "path": "178"
    },
    "860": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x1E"
    },
    "862": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "DUP2",
      "path": "178"
    },
    "863": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "864": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x20"
    },
    "866": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "ADD",
      "path": "178"
    },
    "867": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "PUSH32",
      "path": "178",
      "value": "0x416464726573733A206C6F772D6C6576656C2063616C6C206661696C65640000"
    },
    "900": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "DUP2",
      "path": "178"
    },
    "901": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "902": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "POP",
      "path": "178"
    },
    "903": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3237
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x392"
    },
    "906": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3225,
        3285
      ],
      "op": "JUMP",
      "path": "178"
    },
    "907": {
      "fn": "Address.functionCall",
      "offset": [
        3225,
        3285
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "908": {
      "fn": "Address.functionCall",
      "offset": [
        3218,
        3285
      ],
      "op": "SWAP4",
      "path": "178"
    },
    "909": {
      "fn": "Address.functionCall",
      "offset": [
        3119,
        3292
      ],
      "op": "SWAP3",
      "path": "178"
    },
    "910": {
      "op": "POP"
    },
    "911": {
      "op": "POP"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3119,
        3292
      ],
      "op": "JUMP",
      "path": "178"
    },
    "914": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "915": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3659
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "917": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 7,
      "value": "0x3A1"
    },
    "920": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3706
      ],
      "op": "DUP5",
      "path": "178"
    },
    "921": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3712
      ],
      "op": "DUP5",
      "path": "178"
    },
    "922": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3715
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "924": {
      "fn": "Address.functionCall",
      "offset": [
        3717,
        3729
      ],
      "op": "DUP6",
      "path": "178"
    },
    "925": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3699
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x3A9"
    },
    "928": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3678,
        3730
      ],
      "op": "JUMP",
      "path": "178"
    },
    "929": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "930": {
      "fn": "Address.functionCall",
      "offset": [
        3671,
        3730
      ],
      "op": "SWAP5",
      "path": "178"
    },
    "931": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "SWAP4",
      "path": "178"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "op": "POP"
    },
    "935": {
      "op": "POP"
    },
    "936": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMP",
      "path": "178"
    },
    "937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4601,
        5100
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4766,
        4778
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4823,
        4828
      ],
      "op": "DUP3",
      "path": "178",
      "statement": 8
    },
    "941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4819
      ],
      "op": "SELFBALANCE",
      "path": "178"
    },
    "942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4828
      ],
      "op": "LT",
      "path": "178"
    },
    "943": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4828
      ],
      "op": "ISZERO",
      "path": "178"
    },
    "944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x40F"
    },
    "947": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP2",
      "path": "178"
    },
    "959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x4"
    },
    "964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP3",
      "path": "178"
    },
    "965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "ADD",
      "path": "178"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "971": {
      "op": "DUP3"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "op": "MSTORE"
    },
    "974": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1009": {
      "op": "DUP3"
    },
    "1010": {
      "op": "ADD"
    },
    "1011": {
      "op": "MSTORE"
    },
    "1012": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1024": {
      "op": "DUP3"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1036": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "SUB",
      "path": "178"
    },
    "1037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "SWAP1",
      "path": "178"
    },
    "1038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "178"
    },
    "1039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1040": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1041": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "178"
    },
    "1042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 9,
      "value": "0x45D"
    },
    "1045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x4"
    },
    "1062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "ADD",
      "path": "178"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x406"
    },
    "1116": {
      "op": "JUMP"
    },
    "1117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4953,
        4965
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4990
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5000
      ],
      "op": "DUP7",
      "path": "178"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "op": "SUB"
    },
    "1130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5005
      ],
      "op": "AND",
      "path": "178"
    },
    "1131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5013,
        5018
      ],
      "op": "DUP6",
      "path": "178"
    },
    "1132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5020,
        5024
      ],
      "op": "DUP8",
      "path": "178"
    },
    "1133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x479"
    },
    "1139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP1",
      "path": "178"
    },
    "1141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x5FC"
    },
    "1144": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP4",
      "path": "178"
    },
    "1153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SUB",
      "path": "178"
    },
    "1154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP6",
      "path": "178"
    },
    "1156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP8",
      "path": "178"
    },
    "1157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "GAS",
      "path": "178"
    },
    "1158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "CALL",
      "path": "178"
    },
    "1159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP3",
      "path": "178"
    },
    "1160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1163": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "EQ",
      "path": "178"
    },
    "1169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x4B6"
    },
    "1172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1173": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1176": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x1F"
    },
    "1180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "NOT",
      "path": "178"
    },
    "1181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x3F"
    },
    "1183": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1184": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "178"
    },
    "1185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "AND",
      "path": "178"
    },
    "1186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1187": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "178"
    },
    "1188": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1192": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "178"
    },
    "1195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x0"
    },
    "1197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x20"
    },
    "1199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "178"
    },
    "1201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATACOPY",
      "path": "178"
    },
    "1202": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x4BB"
    },
    "1205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "1209": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1213": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "178"
    },
    "1217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5093
      ],
      "op": "PUSH2",
      "path": "178",
      "statement": 10,
      "value": "0x33E"
    },
    "1220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5059,
        5066
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1221": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5068,
        5078
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5080,
        5092
      ],
      "op": "DUP7",
      "path": "178"
    },
    "1223": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7360,
        7372
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x60"
    },
    "1225": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7388,
        7395
      ],
      "op": "DUP4",
      "path": "178"
    },
    "1226": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "ISZERO",
      "path": "178"
    },
    "1227": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x4D5"
    },
    "1230": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1231": {
      "op": "POP"
    },
    "1232": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7418,
        7428
      ],
      "op": "DUP2",
      "path": "178",
      "statement": 11
    },
    "1233": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x38B"
    },
    "1236": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1237": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1238": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1239": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1240": {
      "branch": 19,
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7550
      ],
      "op": "ISZERO",
      "path": "178"
    },
    "1241": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x4E5"
    },
    "1244": {
      "branch": 19,
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPI",
      "path": "178"
    },
    "1245": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7723,
        7733
      ],
      "op": "DUP3",
      "path": "178"
    },
    "1246": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7734
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1247": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7783,
        7798
      ],
      "op": "DUP1",
      "path": "178"
    },
    "1248": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7770,
        7780
      ],
      "op": "DUP5",
      "path": "178"
    },
    "1249": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7766,
        7768
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x20"
    },
    "1251": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7762,
        7781
      ],
      "op": "ADD",
      "path": "178"
    },
    "1252": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7755,
        7799
      ],
      "op": "REVERT",
      "path": "178"
    },
    "1253": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPDEST",
      "path": "178"
    },
    "1254": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7862,
        7874
      ],
      "op": "DUP2",
      "path": "178",
      "statement": 12
    },
    "1255": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x40"
    },
    "1257": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MLOAD",
      "path": "178"
    },
    "1258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "DUP2",
      "path": "178"
    },
    "1266": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MSTORE",
      "path": "178"
    },
    "1267": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "178",
      "value": "0x4"
    },
    "1269": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "ADD",
      "path": "178"
    },
    "1270": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x406"
    },
    "1273": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP2",
      "path": "178"
    },
    "1274": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP1",
      "path": "178"
    },
    "1275": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "178",
      "value": "0x618"
    },
    "1278": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7855,
        7875
      ],
      "op": "JUMP",
      "path": "178"
    },
    "1279": {
      "op": "JUMPDEST"
    },
    "1280": {
      "op": "DUP1"
    },
    "1281": {
      "op": "CALLDATALOAD"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1288": {
      "op": "SHL"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "op": "DUP2"
    },
    "1291": {
      "op": "AND"
    },
    "1292": {
      "op": "DUP2"
    },
    "1293": {
      "op": "EQ"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x516"
    },
    "1297": {
      "op": "JUMPI"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1300": {
      "op": "DUP1"
    },
    "1301": {
      "op": "REVERT"
    },
    "1302": {
      "op": "JUMPDEST"
    },
    "1303": {
      "op": "SWAP2"
    },
    "1304": {
      "op": "SWAP1"
    },
    "1305": {
      "op": "POP"
    },
    "1306": {
      "jump": "o",
      "op": "JUMP"
    },
    "1307": {
      "op": "JUMPDEST"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1310": {
      "op": "DUP1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "op": "DUP1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1316": {
      "op": "DUP1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1319": {
      "op": "DUP8"
    },
    "1320": {
      "op": "DUP10"
    },
    "1321": {
      "op": "SUB"
    },
    "1322": {
      "op": "SLT"
    },
    "1323": {
      "op": "ISZERO"
    },
    "1324": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1327": {
      "op": "JUMPI"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1330": {
      "op": "DUP1"
    },
    "1331": {
      "op": "REVERT"
    },
    "1332": {
      "op": "JUMPDEST"
    },
    "1333": {
      "op": "PUSH2",
      "value": "0x53D"
    },
    "1336": {
      "op": "DUP8"
    },
    "1337": {
      "op": "PUSH2",
      "value": "0x4FF"
    },
    "1340": {
      "jump": "i",
      "op": "JUMP"
    },
    "1341": {
      "op": "JUMPDEST"
    },
    "1342": {
      "op": "SWAP6"
    },
    "1343": {
      "op": "POP"
    },
    "1344": {
      "op": "PUSH2",
      "value": "0x54B"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1349": {
      "op": "DUP9"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "PUSH2",
      "value": "0x4FF"
    },
    "1354": {
      "jump": "i",
      "op": "JUMP"
    },
    "1355": {
      "op": "JUMPDEST"
    },
    "1356": {
      "op": "SWAP5"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1360": {
      "op": "DUP8"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "CALLDATALOAD"
    },
    "1363": {
      "op": "SWAP4"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1367": {
      "op": "DUP8"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "CALLDATALOAD"
    },
    "1370": {
      "op": "SWAP3"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1374": {
      "op": "DUP8"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "op": "CALLDATALOAD"
    },
    "1377": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1386": {
      "op": "DUP1"
    },
    "1387": {
      "op": "DUP3"
    },
    "1388": {
      "op": "GT"
    },
    "1389": {
      "op": "ISZERO"
    },
    "1390": {
      "op": "PUSH2",
      "value": "0x576"
    },
    "1393": {
      "op": "JUMPI"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1396": {
      "op": "DUP1"
    },
    "1397": {
      "op": "REVERT"
    },
    "1398": {
      "op": "JUMPDEST"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "DUP10"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "op": "SWAP2"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "op": "DUP10"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "SLT"
    },
    "1410": {
      "op": "PUSH2",
      "value": "0x58A"
    },
    "1413": {
      "op": "JUMPI"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1416": {
      "op": "DUP1"
    },
    "1417": {
      "op": "REVERT"
    },
    "1418": {
      "op": "JUMPDEST"
    },
    "1419": {
      "op": "DUP2"
    },
    "1420": {
      "op": "CALLDATALOAD"
    },
    "1421": {
      "op": "DUP2"
    },
    "1422": {
      "op": "DUP2"
    },
    "1423": {
      "op": "GT"
    },
    "1424": {
      "op": "ISZERO"
    },
    "1425": {
      "op": "PUSH2",
      "value": "0x599"
    },
    "1428": {
      "op": "JUMPI"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "DUP1"
    },
    "1432": {
      "op": "REVERT"
    },
    "1433": {
      "op": "JUMPDEST"
    },
    "1434": {
      "op": "DUP11"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "op": "DUP3"
    },
    "1438": {
      "op": "DUP6"
    },
    "1439": {
      "op": "ADD"
    },
    "1440": {
      "op": "ADD"
    },
    "1441": {
      "op": "GT"
    },
    "1442": {
      "op": "ISZERO"
    },
    "1443": {
      "op": "PUSH2",
      "value": "0x5AB"
    },
    "1446": {
      "op": "JUMPI"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1449": {
      "op": "DUP1"
    },
    "1450": {
      "op": "REVERT"
    },
    "1451": {
      "op": "JUMPDEST"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1454": {
      "op": "DUP4"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "op": "SWAP5"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "op": "DUP1"
    },
    "1459": {
      "op": "SWAP4"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "op": "SWAP3"
    },
    "1465": {
      "op": "SWAP6"
    },
    "1466": {
      "op": "POP"
    },
    "1467": {
      "op": "SWAP3"
    },
    "1468": {
      "op": "SWAP6"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "op": "SWAP3"
    },
    "1471": {
      "op": "SWAP6"
    },
    "1472": {
      "jump": "o",
      "op": "JUMP"
    },
    "1473": {
      "op": "JUMPDEST"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1478": {
      "op": "DUP3"
    },
    "1479": {
      "op": "DUP5"
    },
    "1480": {
      "op": "SUB"
    },
    "1481": {
      "op": "SLT"
    },
    "1482": {
      "op": "ISZERO"
    },
    "1483": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "1486": {
      "op": "JUMPI"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1489": {
      "op": "DUP1"
    },
    "1490": {
      "op": "REVERT"
    },
    "1491": {
      "op": "JUMPDEST"
    },
    "1492": {
      "op": "DUP2"
    },
    "1493": {
      "op": "MLOAD"
    },
    "1494": {
      "op": "DUP1"
    },
    "1495": {
      "op": "ISZERO"
    },
    "1496": {
      "op": "ISZERO"
    },
    "1497": {
      "op": "DUP2"
    },
    "1498": {
      "op": "EQ"
    },
    "1499": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "1502": {
      "op": "JUMPI"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1505": {
      "op": "DUP1"
    },
    "1506": {
      "op": "REVERT"
    },
    "1507": {
      "op": "JUMPDEST"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1512": {
      "op": "DUP3"
    },
    "1513": {
      "op": "DUP5"
    },
    "1514": {
      "op": "SUB"
    },
    "1515": {
      "op": "SLT"
    },
    "1516": {
      "op": "ISZERO"
    },
    "1517": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1520": {
      "op": "JUMPI"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "REVERT"
    },
    "1525": {
      "op": "JUMPDEST"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "MLOAD"
    },
    "1528": {
      "op": "SWAP2"
    },
    "1529": {
      "op": "SWAP1"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "jump": "o",
      "op": "JUMP"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1535": {
      "op": "DUP3"
    },
    "1536": {
      "op": "MLOAD"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x60E"
    },
    "1540": {
      "op": "DUP2"
    },
    "1541": {
      "op": "DUP5"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1544": {
      "op": "DUP8"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "PUSH2",
      "value": "0x671"
    },
    "1549": {
      "jump": "i",
      "op": "JUMP"
    },
    "1550": {
      "op": "JUMPDEST"
    },
    "1551": {
      "op": "SWAP2"
    },
    "1552": {
      "op": "SWAP1"
    },
    "1553": {
      "op": "SWAP2"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "SWAP3"
    },
    "1556": {
      "op": "SWAP2"
    },
    "1557": {
      "op": "POP"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "jump": "o",
      "op": "JUMP"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "DUP3"
    },
    "1568": {
      "op": "MLOAD"
    },
    "1569": {
      "op": "DUP1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1572": {
      "op": "DUP5"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1581": {
      "op": "DUP6"
    },
    "1582": {
      "op": "ADD"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1585": {
      "op": "DUP8"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x671"
    },
    "1590": {
      "jump": "i",
      "op": "JUMP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1597": {
      "op": "NOT"
    },
    "1598": {
      "op": "AND"
    },
    "1599": {
      "op": "SWAP2"
    },
    "1600": {
      "op": "SWAP1"
    },
    "1601": {
      "op": "SWAP2"
    },
    "1602": {
      "op": "ADD"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1605": {
      "op": "ADD"
    },
    "1606": {
      "op": "SWAP3"
    },
    "1607": {
      "op": "SWAP2"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "jump": "o",
      "op": "JUMP"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1614": {
      "op": "DUP3"
    },
    "1615": {
      "op": "NOT"
    },
    "1616": {
      "op": "DUP3"
    },
    "1617": {
      "op": "GT"
    },
    "1618": {
      "op": "ISZERO"
    },
    "1619": {
      "op": "PUSH2",
      "value": "0x66C"
    },
    "1622": {
      "op": "JUMPI"
    },
    "1623": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1633": {
      "op": "MSTORE"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1643": {
      "op": "REVERT"
    },
    "1644": {
      "op": "JUMPDEST"
    },
    "1645": {
      "op": "POP"
    },
    "1646": {
      "op": "ADD"
    },
    "1647": {
      "op": "SWAP1"
    },
    "1648": {
      "jump": "o",
      "op": "JUMP"
    },
    "1649": {
      "op": "JUMPDEST"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1652": {
      "op": "JUMPDEST"
    },
    "1653": {
      "op": "DUP4"
    },
    "1654": {
      "op": "DUP2"
    },
    "1655": {
      "op": "LT"
    },
    "1656": {
      "op": "ISZERO"
    },
    "1657": {
      "op": "PUSH2",
      "value": "0x68C"
    },
    "1660": {
      "op": "JUMPI"
    },
    "1661": {
      "op": "DUP2"
    },
    "1662": {
      "op": "DUP2"
    },
    "1663": {
      "op": "ADD"
    },
    "1664": {
      "op": "MLOAD"
    },
    "1665": {
      "op": "DUP4"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1671": {
      "op": "ADD"
    },
    "1672": {
      "op": "PUSH2",
      "value": "0x674"
    },
    "1675": {
      "op": "JUMP"
    },
    "1676": {
      "op": "JUMPDEST"
    },
    "1677": {
      "op": "DUP4"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "GT"
    },
    "1680": {
      "op": "ISZERO"
    },
    "1681": {
      "op": "PUSH2",
      "value": "0x69B"
    },
    "1684": {
      "op": "JUMPI"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1687": {
      "op": "DUP5"
    },
    "1688": {
      "op": "DUP5"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "MSTORE"
    },
    "1691": {
      "op": "JUMPDEST"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "70e2acb810a354baeaa45bc6b54d6a65e8d99abb",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20.sol\";\nimport \"../interfaces/IERC3156.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev WARNING: this IERC3156FlashBorrower mock implementation is for testing purposes ONLY.\n * Writing a secure flash lock borrower is not an easy task, and should be done with the utmost care.\n * This is not an example of how it should be done, and no pattern present in this mock should be considered secure.\n * Following best practices, always have your contract properly audited before using them to manipulate important funds on\n * live networks.\n */\ncontract ERC3156FlashBorrowerMock is IERC3156FlashBorrower {\n    bytes32 internal constant _RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    bool immutable _enableApprove;\n    bool immutable _enableReturn;\n\n    event BalanceOf(address token, address account, uint256 value);\n    event TotalSupply(address token, uint256 value);\n\n    constructor(bool enableReturn, bool enableApprove) {\n        _enableApprove = enableApprove;\n        _enableReturn = enableReturn;\n    }\n\n    function onFlashLoan(\n        address, /*initiator*/\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) public override returns (bytes32) {\n        require(msg.sender == token);\n\n        emit BalanceOf(token, address(this), IERC20(token).balanceOf(address(this)));\n        emit TotalSupply(token, IERC20(token).totalSupply());\n\n        if (data.length > 0) {\n            // WARNING: This code is for testing purposes only! Do not use.\n            Address.functionCall(token, data);\n        }\n\n        if (_enableApprove) {\n            IERC20(token).approve(token, amount + fee);\n        }\n\n        return _enableReturn ? _RETURN_VALUE : bytes32(0);\n    }\n}\n",
  "sourceMap": "625:1200:76:-:0;;;976:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:30;;;;;;;;1077:28;;;;;;;625:1200;;14:164:211;90:13;;139;;132:21;122:32;;112:2;;168:1;165;158:12;112:2;71:107;;;:::o;183:281::-;256:6;264;317:2;305:9;296:7;292:23;288:32;285:2;;;333:1;330;323:12;285:2;356:37;383:9;356:37;:::i;:::-;346:47;;412:46;454:2;443:9;439:18;412:46;:::i;:::-;402:56;;275:189;;;;;:::o;:::-;625:1200:76;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/ERC3156FlashBorrowerMock.sol",
  "type": "contract"
}