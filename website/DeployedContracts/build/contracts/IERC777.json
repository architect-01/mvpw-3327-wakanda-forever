{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "174": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol",
    "exportedSymbols": {
      "IERC777": [
        23966
      ]
    },
    "id": 23967,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23809,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:23:174"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 23810,
          "nodeType": "StructuredDocumentation",
          "src": "118:372:174",
          "text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
        },
        "fullyImplemented": false,
        "id": 23966,
        "linearizedBaseContracts": [
          23966
        ],
        "name": "IERC777",
        "nameLocation": "501:7:174",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 23811,
              "nodeType": "StructuredDocumentation",
              "src": "515:54:174",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 23816,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "583:4:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:2:174"
            },
            "returnParameters": {
              "id": 23815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23816,
                  "src": "613:13:174",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:6:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "612:15:174"
            },
            "scope": 23966,
            "src": "574:54:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23817,
              "nodeType": "StructuredDocumentation",
              "src": "634:102:174",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 23822,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "750:6:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:2:174"
            },
            "returnParameters": {
              "id": 23821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23822,
                  "src": "782:13:174",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23819,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:6:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:15:174"
            },
            "scope": 23966,
            "src": "741:56:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23823,
              "nodeType": "StructuredDocumentation",
              "src": "803:287:174",
              "text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
            },
            "functionSelector": "556f0dc7",
            "id": 23828,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "1104:11:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1115:2:174"
            },
            "returnParameters": {
              "id": 23827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23828,
                  "src": "1141:7:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1140:9:174"
            },
            "scope": 23966,
            "src": "1095:55:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23829,
              "nodeType": "StructuredDocumentation",
              "src": "1156:66:174",
              "text": " @dev Returns the amount of tokens in existence."
            },
            "functionSelector": "18160ddd",
            "id": 23834,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1236:11:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:2:174"
            },
            "returnParameters": {
              "id": 23833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23834,
                  "src": "1273:7:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:9:174"
            },
            "scope": 23966,
            "src": "1227:55:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23835,
              "nodeType": "StructuredDocumentation",
              "src": "1288:83:174",
              "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
            },
            "functionSelector": "70a08231",
            "id": 23842,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1385:9:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23837,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1403:5:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23842,
                  "src": "1395:13:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:15:174"
            },
            "returnParameters": {
              "id": 23841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23840,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23842,
                  "src": "1433:7:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:9:174"
            },
            "scope": 23966,
            "src": "1376:66:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23843,
              "nodeType": "StructuredDocumentation",
              "src": "1448:585:174",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "9bd9bbc6",
            "id": 23852,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "2047:4:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23845,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2069:9:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23852,
                  "src": "2061:17:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23847,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2096:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23852,
                  "src": "2088:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2088:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23849,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2127:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23852,
                  "src": "2112:19:174",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23848,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:86:174"
            },
            "returnParameters": {
              "id": 23851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2146:0:174"
            },
            "scope": 23966,
            "src": "2038:109:174",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23853,
              "nodeType": "StructuredDocumentation",
              "src": "2153:404:174",
              "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
            },
            "functionSelector": "fe9d9303",
            "id": 23860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2571:4:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23855,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2584:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23860,
                  "src": "2576:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23857,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2607:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23860,
                  "src": "2592:19:174",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:37:174"
            },
            "returnParameters": {
              "id": 23859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:174"
            },
            "scope": 23966,
            "src": "2562:60:174",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23861,
              "nodeType": "StructuredDocumentation",
              "src": "2628:249:174",
              "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
            },
            "functionSelector": "d95b6371",
            "id": 23870,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "2891:13:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23863,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2913:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23870,
                  "src": "2905:16:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23865,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "2931:11:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23870,
                  "src": "2923:19:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2904:39:174"
            },
            "returnParameters": {
              "id": 23869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23868,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23870,
                  "src": "2967:4:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23867,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:4:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2966:6:174"
            },
            "scope": 23966,
            "src": "2882:91:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23871,
              "nodeType": "StructuredDocumentation",
              "src": "2979:233:174",
              "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
            },
            "functionSelector": "959b8c3f",
            "id": 23876,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "3226:17:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23873,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3252:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23876,
                  "src": "3244:16:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3243:18:174"
            },
            "returnParameters": {
              "id": 23875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3270:0:174"
            },
            "scope": 23966,
            "src": "3217:54:174",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23877,
              "nodeType": "StructuredDocumentation",
              "src": "3277:261:174",
              "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
            },
            "functionSelector": "fad8b32a",
            "id": 23882,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "3552:14:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23879,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3575:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23882,
                  "src": "3567:16:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3566:18:174"
            },
            "returnParameters": {
              "id": 23881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3593:0:174"
            },
            "scope": 23966,
            "src": "3543:51:174",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23883,
              "nodeType": "StructuredDocumentation",
              "src": "3600:338:174",
              "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
            },
            "functionSelector": "06e48538",
            "id": 23889,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "3952:16:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3968:2:174"
            },
            "returnParameters": {
              "id": 23888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23887,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23889,
                  "src": "3994:16:174",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23885,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3994:7:174",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23886,
                    "nodeType": "ArrayTypeName",
                    "src": "3994:9:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3993:18:174"
            },
            "scope": 23966,
            "src": "3943:69:174",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23890,
              "nodeType": "StructuredDocumentation",
              "src": "4018:714:174",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "62ad1b83",
            "id": 23903,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "4746:12:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23892,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4776:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23903,
                  "src": "4768:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4768:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23894,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4800:9:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23903,
                  "src": "4792:17:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23896,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4827:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23903,
                  "src": "4819:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4819:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23898,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4858:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23903,
                  "src": "4843:19:174",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23897,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4843:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23900,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "4887:12:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23903,
                  "src": "4872:27:174",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23899,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4758:147:174"
            },
            "returnParameters": {
              "id": 23902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4914:0:174"
            },
            "scope": 23966,
            "src": "4737:178:174",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23904,
              "nodeType": "StructuredDocumentation",
              "src": "4921:532:174",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
            },
            "functionSelector": "fc673c4f",
            "id": 23915,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "5467:12:174",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23906,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5497:7:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23915,
                  "src": "5489:15:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5489:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23908,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5522:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23915,
                  "src": "5514:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23910,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5553:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23915,
                  "src": "5538:19:174",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5538:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23912,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5582:12:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23915,
                  "src": "5567:27:174",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23911,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5479:121:174"
            },
            "returnParameters": {
              "id": 23914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:174"
            },
            "scope": 23966,
            "src": "5458:152:174",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 23929,
            "name": "Sent",
            "nameLocation": "5622:4:174",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23917,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5652:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23929,
                  "src": "5636:24:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5636:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23919,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5686:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23929,
                  "src": "5670:20:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23921,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5716:2:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23929,
                  "src": "5700:18:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5700:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23923,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5736:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23929,
                  "src": "5728:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23925,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5758:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23929,
                  "src": "5752:10:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5752:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23927,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5778:12:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23929,
                  "src": "5772:18:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23926,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5772:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5626:170:174"
            },
            "src": "5616:181:174"
          },
          {
            "anonymous": false,
            "id": 23941,
            "name": "Minted",
            "nameLocation": "5809:6:174",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23931,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5832:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23941,
                  "src": "5816:24:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5816:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23933,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5858:2:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23941,
                  "src": "5842:18:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5842:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5870:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23941,
                  "src": "5862:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5862:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23937,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5884:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23941,
                  "src": "5878:10:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23936,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5878:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23939,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5896:12:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23941,
                  "src": "5890:18:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23938,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5890:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5815:94:174"
            },
            "src": "5803:107:174"
          },
          {
            "anonymous": false,
            "id": 23953,
            "name": "Burned",
            "nameLocation": "5922:6:174",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23943,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5945:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23953,
                  "src": "5929:24:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5929:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23945,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5971:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23953,
                  "src": "5955:20:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23947,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5985:6:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23953,
                  "src": "5977:14:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23949,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5999:4:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23953,
                  "src": "5993:10:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23948,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5993:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23951,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "6011:12:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23953,
                  "src": "6005:18:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23950,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:5:174",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5928:96:174"
            },
            "src": "5916:109:174"
          },
          {
            "anonymous": false,
            "id": 23959,
            "name": "AuthorizedOperator",
            "nameLocation": "6037:18:174",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23955,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6072:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23959,
                  "src": "6056:24:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23957,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "6098:11:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23959,
                  "src": "6082:27:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6082:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6055:55:174"
            },
            "src": "6031:80:174"
          },
          {
            "anonymous": false,
            "id": 23965,
            "name": "RevokedOperator",
            "nameLocation": "6123:15:174",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23961,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6155:8:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23965,
                  "src": "6139:24:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23963,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "6181:11:174",
                  "nodeType": "VariableDeclaration",
                  "scope": 23965,
                  "src": "6165:27:174",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:7:174",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6138:55:174"
            },
            "src": "6117:77:174"
          }
        ],
        "scope": 23967,
        "src": "491:5705:174",
        "usedErrors": []
      }
    ],
    "src": "93:6104:174"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "IERC777",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
    "kind": "dev",
    "methods": {
      "authorizeOperator(address)": {
        "details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`owner`)."
      },
      "burn(uint256,bytes)": {
        "details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
      },
      "defaultOperators()": {
        "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
      },
      "granularity()": {
        "details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
      },
      "isOperatorFor(address,address)": {
        "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
      },
      "revokeOperator(address)": {
        "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
      },
      "send(address,uint256,bytes)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "version": 1
  },
  "offset": [
    491,
    6196
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "e31fce05afc5e49c55620d42b7d380f46a198370",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol",
  "type": "interface"
}