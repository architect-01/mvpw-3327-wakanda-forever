{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "add",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "div",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "mul",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "sub",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "110": "contracts/OpenZepellin/contracts/mocks/SignedSafeMathMock.sol",
    "204": "contracts/OpenZepellin/contracts/utils/math/SignedSafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/SignedSafeMathMock.sol",
    "exportedSymbols": {
      "SignedSafeMath": [
        27513
      ],
      "SignedSafeMathMock": [
        13293
      ]
    },
    "id": 13294,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13227,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:110"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/math/SignedSafeMath.sol",
        "file": "../utils/math/SignedSafeMath.sol",
        "id": 13228,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13294,
        "sourceUnit": 27514,
        "src": "58:42:110",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13293,
        "linearizedBaseContracts": [
          13293
        ],
        "name": "SignedSafeMathMock",
        "nameLocation": "111:18:110",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13243,
              "nodeType": "Block",
              "src": "198:48:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13239,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13230,
                        "src": "234:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 13240,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13232,
                        "src": "237:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 13237,
                        "name": "SignedSafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27513,
                        "src": "215:14:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedSafeMath_$27513_$",
                          "typeString": "type(library SignedSafeMath)"
                        }
                      },
                      "id": 13238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27467,
                      "src": "215:18:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 13241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "215:24:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 13236,
                  "id": 13242,
                  "nodeType": "Return",
                  "src": "208:31:110"
                }
              ]
            },
            "functionSelector": "bbe93d91",
            "id": 13244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nameLocation": "145:3:110",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13230,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "156:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13244,
                  "src": "149:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13229,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "149:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13232,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "166:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13244,
                  "src": "159:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13231,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "148:20:110"
            },
            "returnParameters": {
              "id": 13236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13244,
                  "src": "190:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13234,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:8:110"
            },
            "scope": 13293,
            "src": "136:110:110",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13259,
              "nodeType": "Block",
              "src": "314:48:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13255,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13246,
                        "src": "350:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 13256,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13248,
                        "src": "353:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 13253,
                        "name": "SignedSafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27513,
                        "src": "331:14:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedSafeMath_$27513_$",
                          "typeString": "type(library SignedSafeMath)"
                        }
                      },
                      "id": 13254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27482,
                      "src": "331:18:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 13257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "331:24:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 13252,
                  "id": 13258,
                  "nodeType": "Return",
                  "src": "324:31:110"
                }
              ]
            },
            "functionSelector": "43509138",
            "id": 13260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nameLocation": "261:3:110",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13246,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "272:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13260,
                  "src": "265:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13245,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13248,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "282:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13260,
                  "src": "275:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13247,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "264:20:110"
            },
            "returnParameters": {
              "id": 13252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13260,
                  "src": "306:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13250,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "305:8:110"
            },
            "scope": 13293,
            "src": "252:110:110",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13275,
              "nodeType": "Block",
              "src": "430:48:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13271,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13262,
                        "src": "466:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 13272,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13264,
                        "src": "469:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 13269,
                        "name": "SignedSafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27513,
                        "src": "447:14:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedSafeMath_$27513_$",
                          "typeString": "type(library SignedSafeMath)"
                        }
                      },
                      "id": 13270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27497,
                      "src": "447:18:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 13273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:24:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 13268,
                  "id": 13274,
                  "nodeType": "Return",
                  "src": "440:31:110"
                }
              ]
            },
            "functionSelector": "adefc37b",
            "id": 13276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nameLocation": "377:3:110",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13262,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "388:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13276,
                  "src": "381:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13261,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13264,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "398:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13276,
                  "src": "391:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13263,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:20:110"
            },
            "returnParameters": {
              "id": 13268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13276,
                  "src": "422:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13266,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:8:110"
            },
            "scope": 13293,
            "src": "368:110:110",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13291,
              "nodeType": "Block",
              "src": "546:48:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13287,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13278,
                        "src": "582:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 13288,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13280,
                        "src": "585:1:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 13285,
                        "name": "SignedSafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27513,
                        "src": "563:14:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedSafeMath_$27513_$",
                          "typeString": "type(library SignedSafeMath)"
                        }
                      },
                      "id": 13286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27512,
                      "src": "563:18:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 13289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:24:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 13284,
                  "id": 13290,
                  "nodeType": "Return",
                  "src": "556:31:110"
                }
              ]
            },
            "functionSelector": "a5f3c23b",
            "id": 13292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "493:3:110",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13278,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "504:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13292,
                  "src": "497:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13277,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13280,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "514:1:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 13292,
                  "src": "507:8:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13279,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "496:20:110"
            },
            "returnParameters": {
              "id": 13284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13292,
                  "src": "538:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13282,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:8:110"
            },
            "scope": 13293,
            "src": "484:110:110",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13294,
        "src": "102:494:110",
        "usedErrors": []
      }
    ],
    "src": "33:564:110"
  },
  "bytecode": "608060405234801561001057600080fd5b506102c5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634350913814610051578063a5f3c23b14610076578063adefc37b14610089578063bbe93d911461009c575b600080fd5b61006461005f366004610116565b6100af565b60405190815260200160405180910390f35b610064610084366004610116565b6100c2565b610064610097366004610116565b6100ce565b6100646100aa366004610116565b6100da565b60006100bb83836100e6565b9392505050565b60006100bb83836100f2565b60006100bb83836100fe565b60006100bb838361010a565b60006100bb8284610179565b60006100bb8284610138565b60006100bb828461023a565b60006100bb82846101b5565b6000806040838503121561012957600080fd5b50508035926020909101359150565b600080821280156001600160ff1b038490038513161561015a5761015a610279565b600160ff1b839003841281161561017357610173610279565b50500190565b60008261019657634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156101b0576101b0610279565b500590565b60006001600160ff1b03818413828413808216868404861116156101db576101db610279565b600160ff1b60008712828116878305891216156101fa576101fa610279565b6000871292508782058712848416161561021657610216610279565b8785058712818416161561022c5761022c610279565b505050929093029392505050565b60008083128015600160ff1b85018412161561025857610258610279565b6001600160ff1b038401831381161561027357610273610279565b50500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202def33a99c589ad290a42c6def2011ec8e618e4138cadba06d7a0539aec8e2f364736f6c63430008060033",
  "bytecodeSha1": "efeb62fb0c1d6ed1fca16e67c81c6ad796b14caa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SignedSafeMathMock",
  "coverageMap": {
    "branches": {
      "110": {},
      "204": {}
    },
    "statements": {
      "110": {
        "SignedSafeMathMock.add": {
          "1": [
            556,
            587
          ]
        },
        "SignedSafeMathMock.div": {
          "0": [
            324,
            355
          ]
        },
        "SignedSafeMathMock.mul": {
          "3": [
            208,
            239
          ]
        },
        "SignedSafeMathMock.sub": {
          "2": [
            440,
            471
          ]
        }
      },
      "204": {
        "SignedSafeMath.add": {
          "5": [
            1694,
            1706
          ]
        },
        "SignedSafeMath.div": {
          "4": [
            1036,
            1048
          ]
        },
        "SignedSafeMath.mul": {
          "7": [
            658,
            670
          ]
        },
        "SignedSafeMath.sub": {
          "6": [
            1368,
            1380
          ]
        }
      }
    }
  },
  "dependencies": [
    "SignedSafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634350913814610051578063a5f3c23b14610076578063adefc37b14610089578063bbe93d911461009c575b600080fd5b61006461005f366004610116565b6100af565b60405190815260200160405180910390f35b610064610084366004610116565b6100c2565b610064610097366004610116565b6100ce565b6100646100aa366004610116565b6100da565b60006100bb83836100e6565b9392505050565b60006100bb83836100f2565b60006100bb83836100fe565b60006100bb838361010a565b60006100bb8284610179565b60006100bb8284610138565b60006100bb828461023a565b60006100bb82846101b5565b6000806040838503121561012957600080fd5b50508035926020909101359150565b600080821280156001600160ff1b038490038513161561015a5761015a610279565b600160ff1b839003841281161561017357610173610279565b50500190565b60008261019657634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156101b0576101b0610279565b500590565b60006001600160ff1b03818413828413808216868404861116156101db576101db610279565b600160ff1b60008712828116878305891216156101fa576101fa610279565b6000871292508782058712848416161561021657610216610279565b8785058712818416161561022c5761022c610279565b505050929093029392505050565b60008083128015600160ff1b85018412161561025857610258610279565b6001600160ff1b038401831381161561027357610273610279565b50500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202def33a99c589ad290a42c6def2011ec8e618e4138cadba06d7a0539aec8e2f364736f6c63430008060033",
  "deployedSourceMap": "102:494:110:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:110;;;;;;:::i;:::-;;:::i;:::-;;;409:25:211;;;397:2;382:18;252:110:110;;;;;;;484;;;;;;:::i;:::-;;:::i;368:::-;;;;;;:::i;:::-;;:::i;136:::-;;;;;;:::i;:::-;;:::i;252:::-;306:6;331:24;350:1;353;331:18;:24::i;:::-;324:31;252:110;-1:-1:-1;;;252:110:110:o;484:::-;538:6;563:24;582:1;585;563:18;:24::i;368:110::-;422:6;447:24;466:1;469;447:18;:24::i;136:110::-;190:6;215:24;234:1;237;215:18;:24::i;962:93:204:-;1018:6;1043:5;1047:1;1043;:5;:::i;1620:93::-;1676:6;1701:5;1705:1;1701;:5;:::i;1294:93::-;1350:6;1375:5;1379:1;1375;:5;:::i;584:93::-;640:6;665:5;669:1;665;:5;:::i;14:246:211:-;80:6;88;141:2;129:9;120:7;116:23;112:32;109:2;;;157:1;154;147:12;109:2;-1:-1:-1;;180:23:211;;;250:2;235:18;;;222:32;;-1:-1:-1;99:161:211:o;445:265::-;484:3;512:9;;;537:10;;-1:-1:-1;;;;;556:27:211;;;549:35;;533:52;530:2;;;588:18;;:::i;:::-;-1:-1:-1;;;635:19:211;;;628:27;;620:36;;617:2;;;659:18;;:::i;:::-;-1:-1:-1;;695:9:211;;492:218::o;715:290::-;754:1;780;770:2;;824:10;819:3;815:20;812:1;805:31;859:4;856:1;849:15;887:4;884:1;877:15;770:2;-1:-1:-1;;;918:18:211;;-1:-1:-1;;938:13:211;;914:38;911:2;;;955:18;;:::i;:::-;-1:-1:-1;989:10:211;;760:245::o;1010:553::-;1049:7;-1:-1:-1;;;;;1119:9:211;;;1147;;;1172:11;;;1191:10;;;1185:17;;1168:35;1165:2;;;1206:18;;:::i;:::-;-1:-1:-1;;;1282:1:211;1275:9;;1300:11;;;1320;;;1313:19;;1296:37;1293:2;;;1336:18;;:::i;:::-;1382:1;1379;1375:9;1365:19;;1429:1;1425:2;1420:11;1417:1;1413:19;1408:2;1404;1400:11;1396:37;1393:2;;;1436:18;;:::i;:::-;1501:1;1497:2;1492:11;1489:1;1485:19;1480:2;1476;1472:11;1468:37;1465:2;;;1508:18;;:::i;:::-;-1:-1:-1;;;1548:9:211;;;;;1061:502;-1:-1:-1;;;1061:502:211:o;1568:267::-;1607:4;1636:9;;;1661:10;;-1:-1:-1;;;1680:19:211;;1673:27;;1657:44;1654:2;;;1704:18;;:::i;:::-;-1:-1:-1;;;;;1751:27:211;;1744:35;;1736:44;;1733:2;;;1783:18;;:::i;:::-;-1:-1:-1;;1820:9:211;;1616:219::o;1840:127::-;1901:10;1896:3;1892:20;1889:1;1882:31;1932:4;1929:1;1922:15;1956:4;1953:1;1946:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    102,
    596
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43509138 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xA5F3C23B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xADEFC37B EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xBBE93D91 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x116 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x116 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x116 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x64 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x116 JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP3 DUP5 PUSH2 0x179 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP3 DUP5 PUSH2 0x138 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP3 DUP5 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP3 DUP5 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x15A JUMPI PUSH2 0x15A PUSH2 0x279 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x173 JUMPI PUSH2 0x173 PUSH2 0x279 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x196 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x1B0 PUSH2 0x279 JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 DUP5 SGT DUP3 DUP5 SGT DUP1 DUP3 AND DUP7 DUP5 DIV DUP7 GT AND ISZERO PUSH2 0x1DB JUMPI PUSH2 0x1DB PUSH2 0x279 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 DUP8 SLT DUP3 DUP2 AND DUP8 DUP4 SDIV DUP10 SLT AND ISZERO PUSH2 0x1FA JUMPI PUSH2 0x1FA PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP8 SLT SWAP3 POP DUP8 DUP3 SDIV DUP8 SLT DUP5 DUP5 AND AND ISZERO PUSH2 0x216 JUMPI PUSH2 0x216 PUSH2 0x279 JUMP JUMPDEST DUP8 DUP6 SDIV DUP8 SLT DUP2 DUP5 AND AND ISZERO PUSH2 0x22C JUMPI PUSH2 0x22C PUSH2 0x279 JUMP JUMPDEST POP POP POP SWAP3 SWAP1 SWAP4 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0x258 JUMPI PUSH2 0x258 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x273 JUMPI PUSH2 0x273 PUSH2 0x279 JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xEF CALLER 0xA9 SWAP13 PC SWAP11 0xD2 SWAP1 LOG4 0x2C PUSH14 0xEF2011EC8E618E4138CADBA06D7A SDIV CODECOPY 0xAE 0xC8 0xE2 RETURN PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "MSTORE",
      "path": "110"
    },
    "5": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "CALLVALUE",
      "path": "110"
    },
    "6": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "7": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "ISZERO",
      "path": "110"
    },
    "8": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "12": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "REVERT",
      "path": "110"
    },
    "16": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "17": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "POP",
      "path": "110"
    },
    "18": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "CALLDATASIZE",
      "path": "110"
    },
    "21": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "LT",
      "path": "110"
    },
    "22": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "26": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "CALLDATALOAD",
      "path": "110"
    },
    "29": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "SHR",
      "path": "110"
    },
    "32": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "33": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH4",
      "path": "110",
      "value": "0x43509138"
    },
    "38": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "EQ",
      "path": "110"
    },
    "39": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "43": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "44": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH4",
      "path": "110",
      "value": "0xA5F3C23B"
    },
    "49": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "EQ",
      "path": "110"
    },
    "50": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x76"
    },
    "53": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "54": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "55": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH4",
      "path": "110",
      "value": "0xADEFC37B"
    },
    "60": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "EQ",
      "path": "110"
    },
    "61": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x89"
    },
    "64": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "65": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "66": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH4",
      "path": "110",
      "value": "0xBBE93D91"
    },
    "71": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "EQ",
      "path": "110"
    },
    "72": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x9C"
    },
    "75": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "76": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "77": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "DUP1",
      "path": "110"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        102,
        596
      ],
      "op": "REVERT",
      "path": "110"
    },
    "81": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "82": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x64"
    },
    "85": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x5F"
    },
    "88": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "CALLDATASIZE",
      "path": "110"
    },
    "89": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x4"
    },
    "91": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x116"
    },
    "94": {
      "fn": "SignedSafeMathMock.div",
      "jump": "i",
      "offset": [
        252,
        362
      ],
      "op": "JUMP",
      "path": "110"
    },
    "95": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "96": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xAF"
    },
    "99": {
      "fn": "SignedSafeMathMock.div",
      "jump": "i",
      "offset": [
        252,
        362
      ],
      "op": "JUMP",
      "path": "110"
    },
    "100": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "101": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x40"
    },
    "103": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "MLOAD",
      "path": "110"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "DUP2"
    },
    "106": {
      "op": "MSTORE"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "109": {
      "op": "ADD"
    },
    "110": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x40"
    },
    "112": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "MLOAD",
      "path": "110"
    },
    "113": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "DUP1",
      "path": "110"
    },
    "114": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "SWAP2",
      "path": "110"
    },
    "115": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "SUB",
      "path": "110"
    },
    "116": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "117": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "RETURN",
      "path": "110"
    },
    "118": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "119": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x64"
    },
    "122": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x84"
    },
    "125": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "CALLDATASIZE",
      "path": "110"
    },
    "126": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x4"
    },
    "128": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x116"
    },
    "131": {
      "fn": "SignedSafeMathMock.add",
      "jump": "i",
      "offset": [
        484,
        594
      ],
      "op": "JUMP",
      "path": "110"
    },
    "132": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "133": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xC2"
    },
    "136": {
      "fn": "SignedSafeMathMock.add",
      "jump": "i",
      "offset": [
        484,
        594
      ],
      "op": "JUMP",
      "path": "110"
    },
    "137": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "138": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x64"
    },
    "141": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x97"
    },
    "144": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "CALLDATASIZE",
      "path": "110"
    },
    "145": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x4"
    },
    "147": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x116"
    },
    "150": {
      "fn": "SignedSafeMathMock.sub",
      "jump": "i",
      "offset": [
        368,
        478
      ],
      "op": "JUMP",
      "path": "110"
    },
    "151": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "152": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xCE"
    },
    "155": {
      "fn": "SignedSafeMathMock.sub",
      "jump": "i",
      "offset": [
        368,
        478
      ],
      "op": "JUMP",
      "path": "110"
    },
    "156": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "157": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x64"
    },
    "160": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xAA"
    },
    "163": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "CALLDATASIZE",
      "path": "110"
    },
    "164": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x4"
    },
    "166": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x116"
    },
    "169": {
      "fn": "SignedSafeMathMock.mul",
      "jump": "i",
      "offset": [
        136,
        246
      ],
      "op": "JUMP",
      "path": "110"
    },
    "170": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "171": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xDA"
    },
    "174": {
      "fn": "SignedSafeMathMock.mul",
      "jump": "i",
      "offset": [
        136,
        246
      ],
      "op": "JUMP",
      "path": "110"
    },
    "175": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "176": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        306,
        312
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "178": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        331,
        355
      ],
      "op": "PUSH2",
      "path": "110",
      "statement": 0,
      "value": "0xBB"
    },
    "181": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        350,
        351
      ],
      "op": "DUP4",
      "path": "110"
    },
    "182": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        353,
        354
      ],
      "op": "DUP4",
      "path": "110"
    },
    "183": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        331,
        349
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xE6"
    },
    "186": {
      "fn": "SignedSafeMathMock.div",
      "jump": "i",
      "offset": [
        331,
        355
      ],
      "op": "JUMP",
      "path": "110"
    },
    "187": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        331,
        355
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "188": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        324,
        355
      ],
      "op": "SWAP4",
      "path": "110"
    },
    "189": {
      "fn": "SignedSafeMathMock.div",
      "offset": [
        252,
        362
      ],
      "op": "SWAP3",
      "path": "110"
    },
    "190": {
      "op": "POP"
    },
    "191": {
      "op": "POP"
    },
    "192": {
      "op": "POP"
    },
    "193": {
      "fn": "SignedSafeMathMock.div",
      "jump": "o",
      "offset": [
        252,
        362
      ],
      "op": "JUMP",
      "path": "110"
    },
    "194": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        484,
        594
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "195": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        538,
        544
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "197": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        563,
        587
      ],
      "op": "PUSH2",
      "path": "110",
      "statement": 1,
      "value": "0xBB"
    },
    "200": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        582,
        583
      ],
      "op": "DUP4",
      "path": "110"
    },
    "201": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        585,
        586
      ],
      "op": "DUP4",
      "path": "110"
    },
    "202": {
      "fn": "SignedSafeMathMock.add",
      "offset": [
        563,
        581
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xF2"
    },
    "205": {
      "fn": "SignedSafeMathMock.add",
      "jump": "i",
      "offset": [
        563,
        587
      ],
      "op": "JUMP",
      "path": "110"
    },
    "206": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        368,
        478
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "207": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        422,
        428
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "209": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        447,
        471
      ],
      "op": "PUSH2",
      "path": "110",
      "statement": 2,
      "value": "0xBB"
    },
    "212": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        466,
        467
      ],
      "op": "DUP4",
      "path": "110"
    },
    "213": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        469,
        470
      ],
      "op": "DUP4",
      "path": "110"
    },
    "214": {
      "fn": "SignedSafeMathMock.sub",
      "offset": [
        447,
        465
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0xFE"
    },
    "217": {
      "fn": "SignedSafeMathMock.sub",
      "jump": "i",
      "offset": [
        447,
        471
      ],
      "op": "JUMP",
      "path": "110"
    },
    "218": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        136,
        246
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "219": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        190,
        196
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "221": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        215,
        239
      ],
      "op": "PUSH2",
      "path": "110",
      "statement": 3,
      "value": "0xBB"
    },
    "224": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        234,
        235
      ],
      "op": "DUP4",
      "path": "110"
    },
    "225": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        237,
        238
      ],
      "op": "DUP4",
      "path": "110"
    },
    "226": {
      "fn": "SignedSafeMathMock.mul",
      "offset": [
        215,
        233
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x10A"
    },
    "229": {
      "fn": "SignedSafeMathMock.mul",
      "jump": "i",
      "offset": [
        215,
        239
      ],
      "op": "JUMP",
      "path": "110"
    },
    "230": {
      "fn": "SignedSafeMath.div",
      "offset": [
        962,
        1055
      ],
      "op": "JUMPDEST",
      "path": "204"
    },
    "231": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1018,
        1024
      ],
      "op": "PUSH1",
      "path": "204",
      "value": "0x0"
    },
    "233": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1043,
        1048
      ],
      "op": "PUSH2",
      "path": "204",
      "statement": 4,
      "value": "0xBB"
    },
    "236": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1047,
        1048
      ],
      "op": "DUP3",
      "path": "204"
    },
    "237": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1043,
        1044
      ],
      "op": "DUP5",
      "path": "204"
    },
    "238": {
      "fn": "SignedSafeMath.div",
      "offset": [
        1043,
        1048
      ],
      "op": "PUSH2",
      "path": "204",
      "value": "0x179"
    },
    "241": {
      "fn": "SignedSafeMath.div",
      "jump": "i",
      "offset": [
        1043,
        1048
      ],
      "op": "JUMP",
      "path": "204"
    },
    "242": {
      "fn": "SignedSafeMath.add",
      "offset": [
        1620,
        1713
      ],
      "op": "JUMPDEST",
      "path": "204"
    },
    "243": {
      "fn": "SignedSafeMath.add",
      "offset": [
        1676,
        1682
      ],
      "op": "PUSH1",
      "path": "204",
      "value": "0x0"
    },
    "245": {
      "fn": "SignedSafeMath.add",
      "offset": [
        1701,
        1706
      ],
      "op": "PUSH2",
      "path": "204",
      "statement": 5,
      "value": "0xBB"
    },
    "248": {
      "fn": "SignedSafeMath.add",
      "offset": [
        1705,
        1706
      ],
      "op": "DUP3",
      "path": "204"
    },
    "249": {
      "fn": "SignedSafeMath.add",
      "offset": [
        1701,
        1702
      ],
      "op": "DUP5",
      "path": "204"
    },
    "250": {
      "fn": "SignedSafeMath.add",
      "offset": [
        1701,
        1706
      ],
      "op": "PUSH2",
      "path": "204",
      "value": "0x138"
    },
    "253": {
      "fn": "SignedSafeMath.add",
      "jump": "i",
      "offset": [
        1701,
        1706
      ],
      "op": "JUMP",
      "path": "204"
    },
    "254": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1294,
        1387
      ],
      "op": "JUMPDEST",
      "path": "204"
    },
    "255": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1350,
        1356
      ],
      "op": "PUSH1",
      "path": "204",
      "value": "0x0"
    },
    "257": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1375,
        1380
      ],
      "op": "PUSH2",
      "path": "204",
      "statement": 6,
      "value": "0xBB"
    },
    "260": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1379,
        1380
      ],
      "op": "DUP3",
      "path": "204"
    },
    "261": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1375,
        1376
      ],
      "op": "DUP5",
      "path": "204"
    },
    "262": {
      "fn": "SignedSafeMath.sub",
      "offset": [
        1375,
        1380
      ],
      "op": "PUSH2",
      "path": "204",
      "value": "0x23A"
    },
    "265": {
      "fn": "SignedSafeMath.sub",
      "jump": "i",
      "offset": [
        1375,
        1380
      ],
      "op": "JUMP",
      "path": "204"
    },
    "266": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        584,
        677
      ],
      "op": "JUMPDEST",
      "path": "204"
    },
    "267": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        640,
        646
      ],
      "op": "PUSH1",
      "path": "204",
      "value": "0x0"
    },
    "269": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        665,
        670
      ],
      "op": "PUSH2",
      "path": "204",
      "statement": 7,
      "value": "0xBB"
    },
    "272": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        669,
        670
      ],
      "op": "DUP3",
      "path": "204"
    },
    "273": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        665,
        666
      ],
      "op": "DUP5",
      "path": "204"
    },
    "274": {
      "fn": "SignedSafeMath.mul",
      "offset": [
        665,
        670
      ],
      "op": "PUSH2",
      "path": "204",
      "value": "0x1B5"
    },
    "277": {
      "fn": "SignedSafeMath.mul",
      "jump": "i",
      "offset": [
        665,
        670
      ],
      "op": "JUMP",
      "path": "204"
    },
    "278": {
      "op": "JUMPDEST"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "281": {
      "op": "DUP1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "284": {
      "op": "DUP4"
    },
    "285": {
      "op": "DUP6"
    },
    "286": {
      "op": "SUB"
    },
    "287": {
      "op": "SLT"
    },
    "288": {
      "op": "ISZERO"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x129"
    },
    "292": {
      "op": "JUMPI"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "295": {
      "op": "DUP1"
    },
    "296": {
      "op": "REVERT"
    },
    "297": {
      "op": "JUMPDEST"
    },
    "298": {
      "op": "POP"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "op": "DUP1"
    },
    "301": {
      "op": "CALLDATALOAD"
    },
    "302": {
      "op": "SWAP3"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "305": {
      "op": "SWAP1"
    },
    "306": {
      "op": "SWAP2"
    },
    "307": {
      "op": "ADD"
    },
    "308": {
      "op": "CALLDATALOAD"
    },
    "309": {
      "op": "SWAP2"
    },
    "310": {
      "op": "POP"
    },
    "311": {
      "jump": "o",
      "op": "JUMP"
    },
    "312": {
      "op": "JUMPDEST"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "315": {
      "op": "DUP1"
    },
    "316": {
      "op": "DUP3"
    },
    "317": {
      "op": "SLT"
    },
    "318": {
      "op": "DUP1"
    },
    "319": {
      "op": "ISZERO"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "326": {
      "op": "SHL"
    },
    "327": {
      "op": "SUB"
    },
    "328": {
      "op": "DUP5"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "op": "DUP6"
    },
    "332": {
      "op": "SGT"
    },
    "333": {
      "op": "AND"
    },
    "334": {
      "op": "ISZERO"
    },
    "335": {
      "op": "PUSH2",
      "value": "0x15A"
    },
    "338": {
      "op": "JUMPI"
    },
    "339": {
      "op": "PUSH2",
      "value": "0x15A"
    },
    "342": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "345": {
      "jump": "i",
      "op": "JUMP"
    },
    "346": {
      "op": "JUMPDEST"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "351": {
      "op": "SHL"
    },
    "352": {
      "op": "DUP4"
    },
    "353": {
      "op": "SWAP1"
    },
    "354": {
      "op": "SUB"
    },
    "355": {
      "op": "DUP5"
    },
    "356": {
      "op": "SLT"
    },
    "357": {
      "op": "DUP2"
    },
    "358": {
      "op": "AND"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "PUSH2",
      "value": "0x173"
    },
    "363": {
      "op": "JUMPI"
    },
    "364": {
      "op": "PUSH2",
      "value": "0x173"
    },
    "367": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "370": {
      "jump": "i",
      "op": "JUMP"
    },
    "371": {
      "op": "JUMPDEST"
    },
    "372": {
      "op": "POP"
    },
    "373": {
      "op": "POP"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "op": "SWAP1"
    },
    "376": {
      "jump": "o",
      "op": "JUMP"
    },
    "377": {
      "op": "JUMPDEST"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "380": {
      "op": "DUP3"
    },
    "381": {
      "op": "PUSH2",
      "value": "0x196"
    },
    "384": {
      "op": "JUMPI"
    },
    "385": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "400": {
      "op": "MSTORE"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "405": {
      "op": "REVERT"
    },
    "406": {
      "op": "JUMPDEST"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "411": {
      "op": "SHL"
    },
    "412": {
      "op": "DUP3"
    },
    "413": {
      "op": "EQ"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "416": {
      "op": "NOT"
    },
    "417": {
      "op": "DUP5"
    },
    "418": {
      "op": "EQ"
    },
    "419": {
      "op": "AND"
    },
    "420": {
      "op": "ISZERO"
    },
    "421": {
      "op": "PUSH2",
      "value": "0x1B0"
    },
    "424": {
      "op": "JUMPI"
    },
    "425": {
      "op": "PUSH2",
      "value": "0x1B0"
    },
    "428": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "431": {
      "jump": "i",
      "op": "JUMP"
    },
    "432": {
      "op": "JUMPDEST"
    },
    "433": {
      "op": "POP"
    },
    "434": {
      "op": "SDIV"
    },
    "435": {
      "op": "SWAP1"
    },
    "436": {
      "jump": "o",
      "op": "JUMP"
    },
    "437": {
      "op": "JUMPDEST"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "SUB"
    },
    "448": {
      "op": "DUP2"
    },
    "449": {
      "op": "DUP5"
    },
    "450": {
      "op": "SGT"
    },
    "451": {
      "op": "DUP3"
    },
    "452": {
      "op": "DUP5"
    },
    "453": {
      "op": "SGT"
    },
    "454": {
      "op": "DUP1"
    },
    "455": {
      "op": "DUP3"
    },
    "456": {
      "op": "AND"
    },
    "457": {
      "op": "DUP7"
    },
    "458": {
      "op": "DUP5"
    },
    "459": {
      "op": "DIV"
    },
    "460": {
      "op": "DUP7"
    },
    "461": {
      "op": "GT"
    },
    "462": {
      "op": "AND"
    },
    "463": {
      "op": "ISZERO"
    },
    "464": {
      "op": "PUSH2",
      "value": "0x1DB"
    },
    "467": {
      "op": "JUMPI"
    },
    "468": {
      "op": "PUSH2",
      "value": "0x1DB"
    },
    "471": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "474": {
      "jump": "i",
      "op": "JUMP"
    },
    "475": {
      "op": "JUMPDEST"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "483": {
      "op": "DUP8"
    },
    "484": {
      "op": "SLT"
    },
    "485": {
      "op": "DUP3"
    },
    "486": {
      "op": "DUP2"
    },
    "487": {
      "op": "AND"
    },
    "488": {
      "op": "DUP8"
    },
    "489": {
      "op": "DUP4"
    },
    "490": {
      "op": "SDIV"
    },
    "491": {
      "op": "DUP10"
    },
    "492": {
      "op": "SLT"
    },
    "493": {
      "op": "AND"
    },
    "494": {
      "op": "ISZERO"
    },
    "495": {
      "op": "PUSH2",
      "value": "0x1FA"
    },
    "498": {
      "op": "JUMPI"
    },
    "499": {
      "op": "PUSH2",
      "value": "0x1FA"
    },
    "502": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "505": {
      "jump": "i",
      "op": "JUMP"
    },
    "506": {
      "op": "JUMPDEST"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "509": {
      "op": "DUP8"
    },
    "510": {
      "op": "SLT"
    },
    "511": {
      "op": "SWAP3"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "op": "DUP8"
    },
    "514": {
      "op": "DUP3"
    },
    "515": {
      "op": "SDIV"
    },
    "516": {
      "op": "DUP8"
    },
    "517": {
      "op": "SLT"
    },
    "518": {
      "op": "DUP5"
    },
    "519": {
      "op": "DUP5"
    },
    "520": {
      "op": "AND"
    },
    "521": {
      "op": "AND"
    },
    "522": {
      "op": "ISZERO"
    },
    "523": {
      "op": "PUSH2",
      "value": "0x216"
    },
    "526": {
      "op": "JUMPI"
    },
    "527": {
      "op": "PUSH2",
      "value": "0x216"
    },
    "530": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "533": {
      "jump": "i",
      "op": "JUMP"
    },
    "534": {
      "op": "JUMPDEST"
    },
    "535": {
      "op": "DUP8"
    },
    "536": {
      "op": "DUP6"
    },
    "537": {
      "op": "SDIV"
    },
    "538": {
      "op": "DUP8"
    },
    "539": {
      "op": "SLT"
    },
    "540": {
      "op": "DUP2"
    },
    "541": {
      "op": "DUP5"
    },
    "542": {
      "op": "AND"
    },
    "543": {
      "op": "AND"
    },
    "544": {
      "op": "ISZERO"
    },
    "545": {
      "op": "PUSH2",
      "value": "0x22C"
    },
    "548": {
      "op": "JUMPI"
    },
    "549": {
      "op": "PUSH2",
      "value": "0x22C"
    },
    "552": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "555": {
      "jump": "i",
      "op": "JUMP"
    },
    "556": {
      "op": "JUMPDEST"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "op": "POP"
    },
    "560": {
      "op": "SWAP3"
    },
    "561": {
      "op": "SWAP1"
    },
    "562": {
      "op": "SWAP4"
    },
    "563": {
      "op": "MUL"
    },
    "564": {
      "op": "SWAP4"
    },
    "565": {
      "op": "SWAP3"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "POP"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "jump": "o",
      "op": "JUMP"
    },
    "570": {
      "op": "JUMPDEST"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "573": {
      "op": "DUP1"
    },
    "574": {
      "op": "DUP4"
    },
    "575": {
      "op": "SLT"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "ISZERO"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "DUP6"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "DUP5"
    },
    "586": {
      "op": "SLT"
    },
    "587": {
      "op": "AND"
    },
    "588": {
      "op": "ISZERO"
    },
    "589": {
      "op": "PUSH2",
      "value": "0x258"
    },
    "592": {
      "op": "JUMPI"
    },
    "593": {
      "op": "PUSH2",
      "value": "0x258"
    },
    "596": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "599": {
      "jump": "i",
      "op": "JUMP"
    },
    "600": {
      "op": "JUMPDEST"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "op": "DUP5"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "DUP4"
    },
    "612": {
      "op": "SGT"
    },
    "613": {
      "op": "DUP2"
    },
    "614": {
      "op": "AND"
    },
    "615": {
      "op": "ISZERO"
    },
    "616": {
      "op": "PUSH2",
      "value": "0x273"
    },
    "619": {
      "op": "JUMPI"
    },
    "620": {
      "op": "PUSH2",
      "value": "0x273"
    },
    "623": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "626": {
      "jump": "i",
      "op": "JUMP"
    },
    "627": {
      "op": "JUMPDEST"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "SUB"
    },
    "631": {
      "op": "SWAP1"
    },
    "632": {
      "jump": "o",
      "op": "JUMP"
    },
    "633": {
      "op": "JUMPDEST"
    },
    "634": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "654": {
      "op": "REVERT"
    }
  },
  "sha1": "3a20d6313b2ca73add13fe1d8d3516b80b318868",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/SignedSafeMath.sol\";\n\ncontract SignedSafeMathMock {\n    function mul(int256 a, int256 b) public pure returns (int256) {\n        return SignedSafeMath.mul(a, b);\n    }\n\n    function div(int256 a, int256 b) public pure returns (int256) {\n        return SignedSafeMath.div(a, b);\n    }\n\n    function sub(int256 a, int256 b) public pure returns (int256) {\n        return SignedSafeMath.sub(a, b);\n    }\n\n    function add(int256 a, int256 b) public pure returns (int256) {\n        return SignedSafeMath.add(a, b);\n    }\n}\n",
  "sourceMap": "102:494:110:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/SignedSafeMathMock.sol",
  "type": "contract"
}