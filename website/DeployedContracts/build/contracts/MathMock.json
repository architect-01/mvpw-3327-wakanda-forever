{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "n",
          "type": "int256"
        }
      ],
      "name": "abs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "average",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "ceilDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "201": "contracts/OpenZepellin/contracts/utils/math/Math.sol",
    "95": "contracts/OpenZepellin/contracts/mocks/MathMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/MathMock.sol",
    "exportedSymbols": {
      "Math": [
        26744
      ],
      "MathMock": [
        11613
      ]
    },
    "id": 11614,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11534,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:95"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/math/Math.sol",
        "file": "../utils/math/Math.sol",
        "id": 11535,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11614,
        "sourceUnit": 26745,
        "src": "58:32:95",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11613,
        "linearizedBaseContracts": [
          11613
        ],
        "name": "MathMock",
        "nameLocation": "101:8:95",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11550,
              "nodeType": "Block",
              "src": "181:38:95",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11546,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11537,
                        "src": "207:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11547,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11539,
                        "src": "210:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11544,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26744,
                        "src": "198:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$26744_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26656,
                      "src": "198:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "198:14:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11543,
                  "id": 11549,
                  "nodeType": "Return",
                  "src": "191:21:95"
                }
              ]
            },
            "functionSelector": "6d5433e6",
            "id": 11551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nameLocation": "125:3:95",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11537,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "137:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11551,
                  "src": "129:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11539,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "148:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11551,
                  "src": "140:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "128:22:95"
            },
            "returnParameters": {
              "id": 11543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11542,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11551,
                  "src": "172:7:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "171:9:95"
            },
            "scope": 11613,
            "src": "116:103:95",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11566,
              "nodeType": "Block",
              "src": "290:38:95",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11562,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11553,
                        "src": "316:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11563,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11555,
                        "src": "319:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11560,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26744,
                        "src": "307:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$26744_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26674,
                      "src": "307:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:14:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11559,
                  "id": 11565,
                  "nodeType": "Return",
                  "src": "300:21:95"
                }
              ]
            },
            "functionSelector": "7ae2b5c7",
            "id": 11567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nameLocation": "234:3:95",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11553,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "246:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11567,
                  "src": "238:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11555,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "257:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11567,
                  "src": "249:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:22:95"
            },
            "returnParameters": {
              "id": 11559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11558,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11567,
                  "src": "281:7:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:9:95"
            },
            "scope": 11613,
            "src": "225:103:95",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11582,
              "nodeType": "Block",
              "src": "403:42:95",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11578,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11569,
                        "src": "433:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11579,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11571,
                        "src": "436:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11576,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26744,
                        "src": "420:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$26744_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "average",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26697,
                      "src": "420:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:18:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11575,
                  "id": 11581,
                  "nodeType": "Return",
                  "src": "413:25:95"
                }
              ]
            },
            "functionSelector": "2b7423ab",
            "id": 11583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "average",
            "nameLocation": "343:7:95",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11569,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "359:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11583,
                  "src": "351:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11571,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "370:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11583,
                  "src": "362:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "350:22:95"
            },
            "returnParameters": {
              "id": 11575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11583,
                  "src": "394:7:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:9:95"
            },
            "scope": 11613,
            "src": "334:111:95",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11598,
              "nodeType": "Block",
              "src": "520:42:95",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11594,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11585,
                        "src": "550:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11595,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11587,
                        "src": "553:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11592,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26744,
                        "src": "537:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$26744_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ceilDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26722,
                      "src": "537:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:18:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11591,
                  "id": 11597,
                  "nodeType": "Return",
                  "src": "530:25:95"
                }
              ]
            },
            "functionSelector": "9cb35327",
            "id": 11599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ceilDiv",
            "nameLocation": "460:7:95",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11585,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "476:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11599,
                  "src": "468:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11587,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "487:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11599,
                  "src": "479:9:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:22:95"
            },
            "returnParameters": {
              "id": 11591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11599,
                  "src": "511:7:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:9:95"
            },
            "scope": 11613,
            "src": "451:111:95",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11611,
              "nodeType": "Block",
              "src": "621:35:95",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11608,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11601,
                        "src": "647:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 11606,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26744,
                        "src": "638:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$26744_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "abs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26743,
                      "src": "638:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 11609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:11:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11605,
                  "id": 11610,
                  "nodeType": "Return",
                  "src": "631:18:95"
                }
              ]
            },
            "functionSelector": "1b5ac4b5",
            "id": 11612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abs",
            "nameLocation": "577:3:95",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11601,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "588:1:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 11612,
                  "src": "581:8:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 11600,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "580:10:95"
            },
            "returnParameters": {
              "id": 11605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11604,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11612,
                  "src": "612:7:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "611:9:95"
            },
            "scope": 11613,
            "src": "568:88:95",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11614,
        "src": "92:566:95",
        "usedErrors": []
      }
    ],
    "src": "33:626:95"
  },
  "bytecode": "608060405234801561001057600080fd5b50610274806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631b5ac4b51461005c5780632b7423ab146100815780636d5433e6146100945780637ae2b5c7146100a75780639cb35327146100ba575b600080fd5b61006f61006a36600461019f565b6100cd565b60405190815260200160405180910390f35b61006f61008f3660046101b8565b6100de565b61006f6100a23660046101b8565b6100f1565b61006f6100b53660046101b8565b6100fd565b61006f6100c83660046101b8565b610109565b60006100d882610115565b92915050565b60006100ea838361012c565b9392505050565b60006100ea8383610147565b60006100ea838361015e565b60006100ea838361016d565b60008082121561012857816000036100d8565b5090565b600061013b6002848418610200565b6100ea908484166101da565b60008183101561015757816100ea565b5090919050565b600081831061015757816100ea565b60006101798284610214565b15610185576001610188565b60005b60ff166101958385610200565b6100ea91906101da565b6000602082840312156101b157600080fd5b5035919050565b600080604083850312156101cb57600080fd5b50508035926020909101359150565b600082198211156101fb57634e487b7160e01b600052601160045260246000fd5b500190565b60008261020f5761020f610228565b500490565b60008261022357610223610228565b500690565b634e487b7160e01b600052601260045260246000fdfea26469706673582212207c7744fc318eb5487654192431eb088c2e1069cb45b1ef416261cb5b9da2e67664736f6c63430008060033",
  "bytecodeSha1": "d61bc153617adf655ceecfbcc140b44a5a78d368",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "MathMock",
  "coverageMap": {
    "branches": {
      "201": {
        "Math.abs": {
          "10": [
            1478,
            1484,
            true
          ]
        },
        "Math.ceilDiv": {
          "13": [
            1183,
            1193,
            true
          ]
        },
        "Math.max": {
          "11": [
            354,
            360,
            true
          ]
        },
        "Math.min": {
          "12": [
            530,
            535,
            true
          ]
        }
      },
      "95": {}
    },
    "statements": {
      "201": {
        "Math.abs": {
          "5": [
            1463,
            1494
          ]
        },
        "Math.average": {
          "6": [
            781,
            809
          ]
        },
        "Math.ceilDiv": {
          "9": [
            1167,
            1202
          ]
        },
        "Math.max": {
          "7": [
            347,
            368
          ]
        },
        "Math.min": {
          "8": [
            523,
            543
          ]
        }
      },
      "95": {
        "MathMock.abs": {
          "0": [
            631,
            649
          ]
        },
        "MathMock.average": {
          "1": [
            413,
            438
          ]
        },
        "MathMock.ceilDiv": {
          "4": [
            530,
            555
          ]
        },
        "MathMock.max": {
          "2": [
            191,
            212
          ]
        },
        "MathMock.min": {
          "3": [
            300,
            321
          ]
        }
      }
    }
  },
  "dependencies": [
    "Math"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631b5ac4b51461005c5780632b7423ab146100815780636d5433e6146100945780637ae2b5c7146100a75780639cb35327146100ba575b600080fd5b61006f61006a36600461019f565b6100cd565b60405190815260200160405180910390f35b61006f61008f3660046101b8565b6100de565b61006f6100a23660046101b8565b6100f1565b61006f6100b53660046101b8565b6100fd565b61006f6100c83660046101b8565b610109565b60006100d882610115565b92915050565b60006100ea838361012c565b9392505050565b60006100ea8383610147565b60006100ea838361015e565b60006100ea838361016d565b60008082121561012857816000036100d8565b5090565b600061013b6002848418610200565b6100ea908484166101da565b60008183101561015757816100ea565b5090919050565b600081831061015757816100ea565b60006101798284610214565b15610185576001610188565b60005b60ff166101958385610200565b6100ea91906101da565b6000602082840312156101b157600080fd5b5035919050565b600080604083850312156101cb57600080fd5b50508035926020909101359150565b600082198211156101fb57634e487b7160e01b600052601160045260246000fd5b500190565b60008261020f5761020f610228565b500490565b60008261022357610223610228565b500690565b634e487b7160e01b600052601260045260246000fdfea26469706673582212207c7744fc318eb5487654192431eb088c2e1069cb45b1ef416261cb5b9da2e67664736f6c63430008060033",
  "deployedSourceMap": "92:566:95:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:88;;;;;;:::i;:::-;;:::i;:::-;;;597:25:211;;;585:2;570:18;568:88:95;;;;;;;334:111;;;;;;:::i;:::-;;:::i;116:103::-;;;;;;:::i;:::-;;:::i;225:::-;;;;;;:::i;:::-;;:::i;451:111::-;;;;;;:::i;:::-;;:::i;568:88::-;612:7;638:11;647:1;638:8;:11::i;:::-;631:18;568:88;-1:-1:-1;;568:88:95:o;334:111::-;394:7;420:18;433:1;436;420:12;:18::i;:::-;413:25;334:111;-1:-1:-1;;;334:111:95:o;116:103::-;172:7;198:14;207:1;210;198:8;:14::i;225:103::-;281:7;307:14;316:1;319;307:8;:14::i;451:111::-;511:7;537:18;550:1;553;537:12;:18::i;1298:213:201:-;1344:7;1483:1;1478;:6;;:15;;1492:1;1491:2;;1478:15;;;-1:-1:-1;1487:1:201;1298:213::o;663:153::-;725:7;798:11;808:1;799:5;;;798:11;:::i;:::-;788:21;;789:5;;;788:21;:::i;270:105::-;328:7;359:1;354;:6;;:14;;367:1;354:14;;;-1:-1:-1;363:1:201;;270:105;-1:-1:-1;270:105:201:o;446:104::-;504:7;534:1;530;:5;:13;;542:1;530:13;;1015:194;1077:7;1183:5;1187:1;1183;:5;:::i;:::-;:10;:18;;1200:1;1183:18;;;1196:1;1183:18;1174:28;;:5;1178:1;1174;:5;:::i;:::-;:28;;;;:::i;14:179:211:-;72:6;125:2;113:9;104:7;100:23;96:32;93:2;;;141:1;138;131:12;93:2;-1:-1:-1;164:23:211;;83:110;-1:-1:-1;83:110:211:o;198:248::-;266:6;274;327:2;315:9;306:7;302:23;298:32;295:2;;;343:1;340;333:12;295:2;-1:-1:-1;;366:23:211;;;436:2;421:18;;;408:32;;-1:-1:-1;285:161:211:o;633:225::-;673:3;704:1;700:6;697:1;694:13;691:2;;;749:10;744:3;740:20;737:1;730:31;784:4;781:1;774:15;812:4;809:1;802:15;691:2;-1:-1:-1;843:9:211;;681:177::o;863:120::-;903:1;929;919:2;;934:18;;:::i;:::-;-1:-1:-1;968:9:211;;909:74::o;988:112::-;1020:1;1046;1036:2;;1051:18;;:::i;:::-;-1:-1:-1;1085:9:211;;1026:74::o;1105:127::-;1166:10;1161:3;1157:20;1154:1;1147:31;1197:4;1194:1;1187:15;1221:4;1218:1;1211:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    92,
    658
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B5AC4B5 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2B7423AB EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x6D5433E6 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x7AE2B5C7 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x9CB35327 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x19F JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST PUSH2 0x6F PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH2 0x6F PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8 DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA DUP4 DUP4 PUSH2 0x12C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA DUP4 DUP4 PUSH2 0x147 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA DUP4 DUP4 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA DUP4 DUP4 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x128 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0xD8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x200 JUMP JUMPDEST PUSH2 0xEA SWAP1 DUP5 DUP5 AND PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x157 JUMPI DUP2 PUSH2 0xEA JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x157 JUMPI DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179 DUP3 DUP5 PUSH2 0x214 JUMP JUMPDEST ISZERO PUSH2 0x185 JUMPI PUSH1 0x1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH2 0x195 DUP4 DUP6 PUSH2 0x200 JUMP JUMPDEST PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20F JUMPI PUSH2 0x20F PUSH2 0x228 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x223 JUMPI PUSH2 0x223 PUSH2 0x228 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7744FC318EB5487654192431EB088C2E1069CB45B1EF416261CB5B9DA2 0xE6 PUSH23 0x64736F6C63430008060033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "MSTORE",
      "path": "95"
    },
    "5": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "CALLVALUE",
      "path": "95"
    },
    "6": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "7": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "ISZERO",
      "path": "95"
    },
    "8": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "12": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "REVERT",
      "path": "95"
    },
    "16": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "17": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "POP",
      "path": "95"
    },
    "18": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "CALLDATASIZE",
      "path": "95"
    },
    "21": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "LT",
      "path": "95"
    },
    "22": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "26": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "CALLDATALOAD",
      "path": "95"
    },
    "29": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "SHR",
      "path": "95"
    },
    "32": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "33": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH4",
      "path": "95",
      "value": "0x1B5AC4B5"
    },
    "38": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "EQ",
      "path": "95"
    },
    "39": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "43": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "44": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH4",
      "path": "95",
      "value": "0x2B7423AB"
    },
    "49": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "EQ",
      "path": "95"
    },
    "50": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x81"
    },
    "53": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "54": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "55": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH4",
      "path": "95",
      "value": "0x6D5433E6"
    },
    "60": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "EQ",
      "path": "95"
    },
    "61": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x94"
    },
    "64": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "65": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "66": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH4",
      "path": "95",
      "value": "0x7AE2B5C7"
    },
    "71": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "EQ",
      "path": "95"
    },
    "72": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xA7"
    },
    "75": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "76": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "77": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH4",
      "path": "95",
      "value": "0x9CB35327"
    },
    "82": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "EQ",
      "path": "95"
    },
    "83": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xBA"
    },
    "86": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPI",
      "path": "95"
    },
    "87": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "88": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "DUP1",
      "path": "95"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        92,
        658
      ],
      "op": "REVERT",
      "path": "95"
    },
    "92": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "93": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x6F"
    },
    "96": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x6A"
    },
    "99": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "CALLDATASIZE",
      "path": "95"
    },
    "100": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x4"
    },
    "102": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x19F"
    },
    "105": {
      "fn": "MathMock.abs",
      "jump": "i",
      "offset": [
        568,
        656
      ],
      "op": "JUMP",
      "path": "95"
    },
    "106": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "107": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xCD"
    },
    "110": {
      "fn": "MathMock.abs",
      "jump": "i",
      "offset": [
        568,
        656
      ],
      "op": "JUMP",
      "path": "95"
    },
    "111": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "112": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x40"
    },
    "114": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "MLOAD",
      "path": "95"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "DUP2"
    },
    "117": {
      "op": "MSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "120": {
      "op": "ADD"
    },
    "121": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x40"
    },
    "123": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "MLOAD",
      "path": "95"
    },
    "124": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "DUP1",
      "path": "95"
    },
    "125": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "SWAP2",
      "path": "95"
    },
    "126": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "SUB",
      "path": "95"
    },
    "127": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "SWAP1",
      "path": "95"
    },
    "128": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "RETURN",
      "path": "95"
    },
    "129": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "130": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x6F"
    },
    "133": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x8F"
    },
    "136": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "CALLDATASIZE",
      "path": "95"
    },
    "137": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x4"
    },
    "139": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x1B8"
    },
    "142": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "95"
    },
    "143": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "144": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xDE"
    },
    "147": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "95"
    },
    "148": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "149": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x6F"
    },
    "152": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xA2"
    },
    "155": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "CALLDATASIZE",
      "path": "95"
    },
    "156": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x4"
    },
    "158": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x1B8"
    },
    "161": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        116,
        219
      ],
      "op": "JUMP",
      "path": "95"
    },
    "162": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "163": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xF1"
    },
    "166": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        116,
        219
      ],
      "op": "JUMP",
      "path": "95"
    },
    "167": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "168": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x6F"
    },
    "171": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xB5"
    },
    "174": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "CALLDATASIZE",
      "path": "95"
    },
    "175": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x4"
    },
    "177": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x1B8"
    },
    "180": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        225,
        328
      ],
      "op": "JUMP",
      "path": "95"
    },
    "181": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "182": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xFD"
    },
    "185": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        225,
        328
      ],
      "op": "JUMP",
      "path": "95"
    },
    "186": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "187": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x6F"
    },
    "190": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0xC8"
    },
    "193": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "CALLDATASIZE",
      "path": "95"
    },
    "194": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x4"
    },
    "196": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x1B8"
    },
    "199": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        451,
        562
      ],
      "op": "JUMP",
      "path": "95"
    },
    "200": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "201": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x109"
    },
    "204": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        451,
        562
      ],
      "op": "JUMP",
      "path": "95"
    },
    "205": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "206": {
      "fn": "MathMock.abs",
      "offset": [
        612,
        619
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "208": {
      "fn": "MathMock.abs",
      "offset": [
        638,
        649
      ],
      "op": "PUSH2",
      "path": "95",
      "statement": 0,
      "value": "0xD8"
    },
    "211": {
      "fn": "MathMock.abs",
      "offset": [
        647,
        648
      ],
      "op": "DUP3",
      "path": "95"
    },
    "212": {
      "fn": "MathMock.abs",
      "offset": [
        638,
        646
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x115"
    },
    "215": {
      "fn": "MathMock.abs",
      "jump": "i",
      "offset": [
        638,
        649
      ],
      "op": "JUMP",
      "path": "95"
    },
    "216": {
      "fn": "MathMock.abs",
      "offset": [
        638,
        649
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "217": {
      "fn": "MathMock.abs",
      "offset": [
        631,
        649
      ],
      "op": "SWAP3",
      "path": "95"
    },
    "218": {
      "fn": "MathMock.abs",
      "offset": [
        568,
        656
      ],
      "op": "SWAP2",
      "path": "95"
    },
    "219": {
      "op": "POP"
    },
    "220": {
      "op": "POP"
    },
    "221": {
      "fn": "MathMock.abs",
      "jump": "o",
      "offset": [
        568,
        656
      ],
      "op": "JUMP",
      "path": "95"
    },
    "222": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "223": {
      "fn": "MathMock.average",
      "offset": [
        394,
        401
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "225": {
      "fn": "MathMock.average",
      "offset": [
        420,
        438
      ],
      "op": "PUSH2",
      "path": "95",
      "statement": 1,
      "value": "0xEA"
    },
    "228": {
      "fn": "MathMock.average",
      "offset": [
        433,
        434
      ],
      "op": "DUP4",
      "path": "95"
    },
    "229": {
      "fn": "MathMock.average",
      "offset": [
        436,
        437
      ],
      "op": "DUP4",
      "path": "95"
    },
    "230": {
      "fn": "MathMock.average",
      "offset": [
        420,
        432
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x12C"
    },
    "233": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        420,
        438
      ],
      "op": "JUMP",
      "path": "95"
    },
    "234": {
      "fn": "MathMock.average",
      "offset": [
        420,
        438
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "235": {
      "fn": "MathMock.average",
      "offset": [
        413,
        438
      ],
      "op": "SWAP4",
      "path": "95"
    },
    "236": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP3",
      "path": "95"
    },
    "237": {
      "op": "POP"
    },
    "238": {
      "op": "POP"
    },
    "239": {
      "op": "POP"
    },
    "240": {
      "fn": "MathMock.average",
      "jump": "o",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "95"
    },
    "241": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "242": {
      "fn": "MathMock.max",
      "offset": [
        172,
        179
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "244": {
      "fn": "MathMock.max",
      "offset": [
        198,
        212
      ],
      "op": "PUSH2",
      "path": "95",
      "statement": 2,
      "value": "0xEA"
    },
    "247": {
      "fn": "MathMock.max",
      "offset": [
        207,
        208
      ],
      "op": "DUP4",
      "path": "95"
    },
    "248": {
      "fn": "MathMock.max",
      "offset": [
        210,
        211
      ],
      "op": "DUP4",
      "path": "95"
    },
    "249": {
      "fn": "MathMock.max",
      "offset": [
        198,
        206
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x147"
    },
    "252": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        198,
        212
      ],
      "op": "JUMP",
      "path": "95"
    },
    "253": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "254": {
      "fn": "MathMock.min",
      "offset": [
        281,
        288
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "256": {
      "fn": "MathMock.min",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "95",
      "statement": 3,
      "value": "0xEA"
    },
    "259": {
      "fn": "MathMock.min",
      "offset": [
        316,
        317
      ],
      "op": "DUP4",
      "path": "95"
    },
    "260": {
      "fn": "MathMock.min",
      "offset": [
        319,
        320
      ],
      "op": "DUP4",
      "path": "95"
    },
    "261": {
      "fn": "MathMock.min",
      "offset": [
        307,
        315
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x15E"
    },
    "264": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        307,
        321
      ],
      "op": "JUMP",
      "path": "95"
    },
    "265": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "95"
    },
    "266": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        511,
        518
      ],
      "op": "PUSH1",
      "path": "95",
      "value": "0x0"
    },
    "268": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        537,
        555
      ],
      "op": "PUSH2",
      "path": "95",
      "statement": 4,
      "value": "0xEA"
    },
    "271": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        550,
        551
      ],
      "op": "DUP4",
      "path": "95"
    },
    "272": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        553,
        554
      ],
      "op": "DUP4",
      "path": "95"
    },
    "273": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        537,
        549
      ],
      "op": "PUSH2",
      "path": "95",
      "value": "0x16D"
    },
    "276": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        537,
        555
      ],
      "op": "JUMP",
      "path": "95"
    },
    "277": {
      "fn": "Math.abs",
      "offset": [
        1298,
        1511
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "278": {
      "fn": "Math.abs",
      "offset": [
        1344,
        1351
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "280": {
      "fn": "Math.abs",
      "offset": [
        1483,
        1484
      ],
      "op": "DUP1",
      "path": "201",
      "statement": 5
    },
    "281": {
      "fn": "Math.abs",
      "offset": [
        1478,
        1479
      ],
      "op": "DUP3",
      "path": "201"
    },
    "282": {
      "fn": "Math.abs",
      "offset": [
        1478,
        1484
      ],
      "op": "SLT",
      "path": "201"
    },
    "283": {
      "branch": 10,
      "fn": "Math.abs",
      "offset": [
        1478,
        1484
      ],
      "op": "ISZERO",
      "path": "201"
    },
    "284": {
      "fn": "Math.abs",
      "offset": [
        1478,
        1493
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x128"
    },
    "287": {
      "branch": 10,
      "fn": "Math.abs",
      "offset": [
        1478,
        1493
      ],
      "op": "JUMPI",
      "path": "201"
    },
    "288": {
      "fn": "Math.abs",
      "offset": [
        1492,
        1493
      ],
      "op": "DUP2",
      "path": "201"
    },
    "289": {
      "fn": "Math.abs",
      "offset": [
        1491,
        1493
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "291": {
      "fn": "Math.abs",
      "offset": [
        1491,
        1493
      ],
      "op": "SUB",
      "path": "201"
    },
    "292": {
      "fn": "Math.abs",
      "offset": [
        1478,
        1493
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0xD8"
    },
    "295": {
      "fn": "Math.abs",
      "offset": [
        1478,
        1493
      ],
      "op": "JUMP",
      "path": "201"
    },
    "296": {
      "fn": "Math.abs",
      "offset": [
        1478,
        1493
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "297": {
      "op": "POP"
    },
    "298": {
      "fn": "Math.abs",
      "offset": [
        1487,
        1488
      ],
      "op": "SWAP1",
      "path": "201"
    },
    "299": {
      "fn": "Math.abs",
      "jump": "o",
      "offset": [
        1298,
        1511
      ],
      "op": "JUMP",
      "path": "201"
    },
    "300": {
      "fn": "Math.average",
      "offset": [
        663,
        816
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "301": {
      "fn": "Math.average",
      "offset": [
        725,
        732
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "303": {
      "fn": "Math.average",
      "offset": [
        798,
        809
      ],
      "op": "PUSH2",
      "path": "201",
      "statement": 6,
      "value": "0x13B"
    },
    "306": {
      "fn": "Math.average",
      "offset": [
        808,
        809
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x2"
    },
    "308": {
      "fn": "Math.average",
      "offset": [
        799,
        804
      ],
      "op": "DUP5",
      "path": "201"
    },
    "309": {
      "fn": "Math.average",
      "offset": [
        799,
        804
      ],
      "op": "DUP5",
      "path": "201"
    },
    "310": {
      "fn": "Math.average",
      "offset": [
        799,
        804
      ],
      "op": "XOR",
      "path": "201"
    },
    "311": {
      "fn": "Math.average",
      "offset": [
        798,
        809
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x200"
    },
    "314": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        798,
        809
      ],
      "op": "JUMP",
      "path": "201"
    },
    "315": {
      "fn": "Math.average",
      "offset": [
        798,
        809
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "316": {
      "fn": "Math.average",
      "offset": [
        788,
        809
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0xEA"
    },
    "319": {
      "fn": "Math.average",
      "offset": [
        788,
        809
      ],
      "op": "SWAP1",
      "path": "201"
    },
    "320": {
      "fn": "Math.average",
      "offset": [
        789,
        794
      ],
      "op": "DUP5",
      "path": "201"
    },
    "321": {
      "fn": "Math.average",
      "offset": [
        789,
        794
      ],
      "op": "DUP5",
      "path": "201"
    },
    "322": {
      "fn": "Math.average",
      "offset": [
        789,
        794
      ],
      "op": "AND",
      "path": "201"
    },
    "323": {
      "fn": "Math.average",
      "offset": [
        788,
        809
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x1DA"
    },
    "326": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        788,
        809
      ],
      "op": "JUMP",
      "path": "201"
    },
    "327": {
      "fn": "Math.max",
      "offset": [
        270,
        375
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "328": {
      "fn": "Math.max",
      "offset": [
        328,
        335
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "330": {
      "fn": "Math.max",
      "offset": [
        359,
        360
      ],
      "op": "DUP2",
      "path": "201",
      "statement": 7
    },
    "331": {
      "fn": "Math.max",
      "offset": [
        354,
        355
      ],
      "op": "DUP4",
      "path": "201"
    },
    "332": {
      "fn": "Math.max",
      "offset": [
        354,
        360
      ],
      "op": "LT",
      "path": "201"
    },
    "333": {
      "branch": 11,
      "fn": "Math.max",
      "offset": [
        354,
        360
      ],
      "op": "ISZERO",
      "path": "201"
    },
    "334": {
      "fn": "Math.max",
      "offset": [
        354,
        368
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x157"
    },
    "337": {
      "branch": 11,
      "fn": "Math.max",
      "offset": [
        354,
        368
      ],
      "op": "JUMPI",
      "path": "201"
    },
    "338": {
      "fn": "Math.max",
      "offset": [
        367,
        368
      ],
      "op": "DUP2",
      "path": "201"
    },
    "339": {
      "fn": "Math.max",
      "offset": [
        354,
        368
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0xEA"
    },
    "342": {
      "fn": "Math.max",
      "offset": [
        354,
        368
      ],
      "op": "JUMP",
      "path": "201"
    },
    "343": {
      "fn": "Math.max",
      "offset": [
        354,
        368
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "344": {
      "op": "POP"
    },
    "345": {
      "fn": "Math.max",
      "offset": [
        363,
        364
      ],
      "op": "SWAP1",
      "path": "201"
    },
    "346": {
      "fn": "Math.max",
      "offset": [
        363,
        364
      ],
      "op": "SWAP2",
      "path": "201"
    },
    "347": {
      "fn": "Math.max",
      "offset": [
        270,
        375
      ],
      "op": "SWAP1",
      "path": "201"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        270,
        375
      ],
      "op": "JUMP",
      "path": "201"
    },
    "350": {
      "fn": "Math.min",
      "offset": [
        446,
        550
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "351": {
      "fn": "Math.min",
      "offset": [
        504,
        511
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "353": {
      "fn": "Math.min",
      "offset": [
        534,
        535
      ],
      "op": "DUP2",
      "path": "201",
      "statement": 8
    },
    "354": {
      "fn": "Math.min",
      "offset": [
        530,
        531
      ],
      "op": "DUP4",
      "path": "201"
    },
    "355": {
      "branch": 12,
      "fn": "Math.min",
      "offset": [
        530,
        535
      ],
      "op": "LT",
      "path": "201"
    },
    "356": {
      "fn": "Math.min",
      "offset": [
        530,
        543
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x157"
    },
    "359": {
      "branch": 12,
      "fn": "Math.min",
      "offset": [
        530,
        543
      ],
      "op": "JUMPI",
      "path": "201"
    },
    "360": {
      "fn": "Math.min",
      "offset": [
        542,
        543
      ],
      "op": "DUP2",
      "path": "201"
    },
    "361": {
      "fn": "Math.min",
      "offset": [
        530,
        543
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0xEA"
    },
    "364": {
      "fn": "Math.min",
      "offset": [
        530,
        543
      ],
      "op": "JUMP",
      "path": "201"
    },
    "365": {
      "fn": "Math.ceilDiv",
      "offset": [
        1015,
        1209
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "366": {
      "fn": "Math.ceilDiv",
      "offset": [
        1077,
        1084
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "368": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1188
      ],
      "op": "PUSH2",
      "path": "201",
      "statement": 9,
      "value": "0x179"
    },
    "371": {
      "fn": "Math.ceilDiv",
      "offset": [
        1187,
        1188
      ],
      "op": "DUP3",
      "path": "201"
    },
    "372": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1184
      ],
      "op": "DUP5",
      "path": "201"
    },
    "373": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1188
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x214"
    },
    "376": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1183,
        1188
      ],
      "op": "JUMP",
      "path": "201"
    },
    "377": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1188
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "378": {
      "branch": 13,
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1193
      ],
      "op": "ISZERO",
      "path": "201"
    },
    "379": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1201
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x185"
    },
    "382": {
      "branch": 13,
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1201
      ],
      "op": "JUMPI",
      "path": "201"
    },
    "383": {
      "fn": "Math.ceilDiv",
      "offset": [
        1200,
        1201
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x1"
    },
    "385": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1201
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x188"
    },
    "388": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1201
      ],
      "op": "JUMP",
      "path": "201"
    },
    "389": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1201
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "390": {
      "fn": "Math.ceilDiv",
      "offset": [
        1196,
        1197
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0x0"
    },
    "392": {
      "fn": "Math.ceilDiv",
      "offset": [
        1183,
        1201
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "393": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1202
      ],
      "op": "PUSH1",
      "path": "201",
      "value": "0xFF"
    },
    "395": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1202
      ],
      "op": "AND",
      "path": "201"
    },
    "396": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1179
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x195"
    },
    "399": {
      "fn": "Math.ceilDiv",
      "offset": [
        1178,
        1179
      ],
      "op": "DUP4",
      "path": "201"
    },
    "400": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1175
      ],
      "op": "DUP6",
      "path": "201"
    },
    "401": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1179
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x200"
    },
    "404": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1174,
        1179
      ],
      "op": "JUMP",
      "path": "201"
    },
    "405": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1179
      ],
      "op": "JUMPDEST",
      "path": "201"
    },
    "406": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1202
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0xEA"
    },
    "409": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1202
      ],
      "op": "SWAP2",
      "path": "201"
    },
    "410": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1202
      ],
      "op": "SWAP1",
      "path": "201"
    },
    "411": {
      "fn": "Math.ceilDiv",
      "offset": [
        1174,
        1202
      ],
      "op": "PUSH2",
      "path": "201",
      "value": "0x1DA"
    },
    "414": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1174,
        1202
      ],
      "op": "JUMP",
      "path": "201"
    },
    "415": {
      "op": "JUMPDEST"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "420": {
      "op": "DUP3"
    },
    "421": {
      "op": "DUP5"
    },
    "422": {
      "op": "SUB"
    },
    "423": {
      "op": "SLT"
    },
    "424": {
      "op": "ISZERO"
    },
    "425": {
      "op": "PUSH2",
      "value": "0x1B1"
    },
    "428": {
      "op": "JUMPI"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "431": {
      "op": "DUP1"
    },
    "432": {
      "op": "REVERT"
    },
    "433": {
      "op": "JUMPDEST"
    },
    "434": {
      "op": "POP"
    },
    "435": {
      "op": "CALLDATALOAD"
    },
    "436": {
      "op": "SWAP2"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "jump": "o",
      "op": "JUMP"
    },
    "440": {
      "op": "JUMPDEST"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "443": {
      "op": "DUP1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "446": {
      "op": "DUP4"
    },
    "447": {
      "op": "DUP6"
    },
    "448": {
      "op": "SUB"
    },
    "449": {
      "op": "SLT"
    },
    "450": {
      "op": "ISZERO"
    },
    "451": {
      "op": "PUSH2",
      "value": "0x1CB"
    },
    "454": {
      "op": "JUMPI"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "457": {
      "op": "DUP1"
    },
    "458": {
      "op": "REVERT"
    },
    "459": {
      "op": "JUMPDEST"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "op": "DUP1"
    },
    "463": {
      "op": "CALLDATALOAD"
    },
    "464": {
      "op": "SWAP3"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "467": {
      "op": "SWAP1"
    },
    "468": {
      "op": "SWAP2"
    },
    "469": {
      "op": "ADD"
    },
    "470": {
      "op": "CALLDATALOAD"
    },
    "471": {
      "op": "SWAP2"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "jump": "o",
      "op": "JUMP"
    },
    "474": {
      "op": "JUMPDEST"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "477": {
      "op": "DUP3"
    },
    "478": {
      "op": "NOT"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "GT"
    },
    "481": {
      "op": "ISZERO"
    },
    "482": {
      "op": "PUSH2",
      "value": "0x1FB"
    },
    "485": {
      "op": "JUMPI"
    },
    "486": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "506": {
      "op": "REVERT"
    },
    "507": {
      "op": "JUMPDEST"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "op": "ADD"
    },
    "510": {
      "op": "SWAP1"
    },
    "511": {
      "jump": "o",
      "op": "JUMP"
    },
    "512": {
      "op": "JUMPDEST"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "515": {
      "op": "DUP3"
    },
    "516": {
      "op": "PUSH2",
      "value": "0x20F"
    },
    "519": {
      "op": "JUMPI"
    },
    "520": {
      "op": "PUSH2",
      "value": "0x20F"
    },
    "523": {
      "op": "PUSH2",
      "value": "0x228"
    },
    "526": {
      "jump": "i",
      "op": "JUMP"
    },
    "527": {
      "op": "JUMPDEST"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "op": "DIV"
    },
    "530": {
      "op": "SWAP1"
    },
    "531": {
      "jump": "o",
      "op": "JUMP"
    },
    "532": {
      "op": "JUMPDEST"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "535": {
      "op": "DUP3"
    },
    "536": {
      "op": "PUSH2",
      "value": "0x223"
    },
    "539": {
      "op": "JUMPI"
    },
    "540": {
      "op": "PUSH2",
      "value": "0x223"
    },
    "543": {
      "op": "PUSH2",
      "value": "0x228"
    },
    "546": {
      "jump": "i",
      "op": "JUMP"
    },
    "547": {
      "op": "JUMPDEST"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "op": "MOD"
    },
    "550": {
      "op": "SWAP1"
    },
    "551": {
      "jump": "o",
      "op": "JUMP"
    },
    "552": {
      "op": "JUMPDEST"
    },
    "553": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "563": {
      "op": "MSTORE"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "573": {
      "op": "REVERT"
    }
  },
  "sha1": "50e674b892b0eca2726d8094c35e4e794692f08f",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/Math.sol\";\n\ncontract MathMock {\n    function max(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.max(a, b);\n    }\n\n    function min(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.min(a, b);\n    }\n\n    function average(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.average(a, b);\n    }\n\n    function ceilDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.ceilDiv(a, b);\n    }\n\n    function abs(int256 n) public pure returns (uint256) {\n        return Math.abs(n);\n    }\n}\n",
  "sourceMap": "92:566:95:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/MathMock.sol",
  "type": "contract"
}