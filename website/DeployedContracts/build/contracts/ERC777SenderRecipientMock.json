{
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "BeforeTokenTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBalance",
          "type": "uint256"
        }
      ],
      "name": "TokensReceivedCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBalance",
          "type": "uint256"
        }
      ],
      "name": "TokensToSendCalled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "recipientFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "registerRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "registerSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "senderFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "shouldRevert",
          "type": "bool"
        }
      ],
      "name": "setShouldRevertReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "shouldRevert",
          "type": "bool"
        }
      ],
      "name": "setShouldRevertSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "174": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol",
    "175": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Recipient.sol",
    "176": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Sender.sol",
    "180": "contracts/OpenZepellin/contracts/utils/Context.sol",
    "197": "contracts/OpenZepellin/contracts/utils/introspection/ERC1820Implementer.sol",
    "199": "contracts/OpenZepellin/contracts/utils/introspection/IERC1820Implementer.sol",
    "200": "contracts/OpenZepellin/contracts/utils/introspection/IERC1820Registry.sol",
    "84": "contracts/OpenZepellin/contracts/mocks/ERC777SenderRecipientMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/ERC777SenderRecipientMock.sol",
    "exportedSymbols": {
      "Context": [
        24445
      ],
      "ERC1820Implementer": [
        26519
      ],
      "ERC777SenderRecipientMock": [
        9912
      ],
      "IERC1820Implementer": [
        26545
      ],
      "IERC1820Registry": [
        26635
      ],
      "IERC777": [
        23966
      ],
      "IERC777Recipient": [
        23986
      ],
      "IERC777Sender": [
        24006
      ]
    },
    "id": 9913,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9568,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:84"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777.sol",
        "file": "../token/ERC777/IERC777.sol",
        "id": 9569,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9913,
        "sourceUnit": 23967,
        "src": "58:37:84",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "../token/ERC777/IERC777Sender.sol",
        "id": 9570,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9913,
        "sourceUnit": 24007,
        "src": "96:43:84",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "../token/ERC777/IERC777Recipient.sol",
        "id": 9571,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9913,
        "sourceUnit": 23987,
        "src": "140:46:84",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 9572,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9913,
        "sourceUnit": 24446,
        "src": "187:30:84",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../utils/introspection/IERC1820Registry.sol",
        "id": 9573,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9913,
        "sourceUnit": 26636,
        "src": "218:53:84",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 9574,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9913,
        "sourceUnit": 26520,
        "src": "272:55:84",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9575,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24445,
              "src": "367:7:84"
            },
            "id": 9576,
            "nodeType": "InheritanceSpecifier",
            "src": "367:7:84"
          },
          {
            "baseName": {
              "id": 9577,
              "name": "IERC777Sender",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24006,
              "src": "376:13:84"
            },
            "id": 9578,
            "nodeType": "InheritanceSpecifier",
            "src": "376:13:84"
          },
          {
            "baseName": {
              "id": 9579,
              "name": "IERC777Recipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23986,
              "src": "391:16:84"
            },
            "id": 9580,
            "nodeType": "InheritanceSpecifier",
            "src": "391:16:84"
          },
          {
            "baseName": {
              "id": 9581,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26519,
              "src": "409:18:84"
            },
            "id": 9582,
            "nodeType": "InheritanceSpecifier",
            "src": "409:18:84"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9912,
        "linearizedBaseContracts": [
          9912,
          26519,
          26545,
          23986,
          24006,
          24445
        ],
        "name": "ERC777SenderRecipientMock",
        "nameLocation": "338:25:84",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 9602,
            "name": "TokensToSendCalled",
            "nameLocation": "440:18:84",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "476:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "468:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "502:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "494:12:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9588,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "524:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "516:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9590,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "544:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "536:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9592,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "566:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "560:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9591,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9594,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "586:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "580:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9593,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9596,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "616:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "608:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9598,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromBalance",
                  "nameLocation": "639:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "631:19:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9600,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBalance",
                  "nameLocation": "668:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9602,
                  "src": "660:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:225:84"
            },
            "src": "434:250:84"
          },
          {
            "anonymous": false,
            "id": 9622,
            "name": "TokensReceivedCalled",
            "nameLocation": "696:20:84",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9604,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "734:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "726:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9606,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "760:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "752:12:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9608,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "782:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "774:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "802:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "794:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9612,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "824:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "818:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9611,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9614,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "844:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "838:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9613,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9616,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "874:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "866:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9618,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromBalance",
                  "nameLocation": "897:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "889:19:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9620,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBalance",
                  "nameLocation": "926:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9622,
                  "src": "918:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:225:84"
            },
            "src": "690:252:84"
          },
          {
            "anonymous": false,
            "id": 9624,
            "name": "BeforeTokenTransfer",
            "nameLocation": "1009:19:84",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:2:84"
            },
            "src": "1003:28:84"
          },
          {
            "constant": false,
            "id": 9626,
            "mutability": "mutable",
            "name": "_shouldRevertSend",
            "nameLocation": "1050:17:84",
            "nodeType": "VariableDeclaration",
            "scope": 9912,
            "src": "1037:30:84",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9625,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1037:4:84",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9628,
            "mutability": "mutable",
            "name": "_shouldRevertReceive",
            "nameLocation": "1086:20:84",
            "nodeType": "VariableDeclaration",
            "scope": 9912,
            "src": "1073:33:84",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9627,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1073:4:84",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9634,
            "mutability": "mutable",
            "name": "_erc1820",
            "nameLocation": "1138:8:84",
            "nodeType": "VariableDeclaration",
            "scope": 9912,
            "src": "1113:96:84",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 9630,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9629,
                "name": "IERC1820Registry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26635,
                "src": "1113:16:84"
              },
              "referencedDeclaration": 26635,
              "src": "1113:16:84",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 9632,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1166:42:84",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 9631,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26635,
                "src": "1149:16:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$26635_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 9633,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1149:60:84",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 9639,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1241:29:84",
            "nodeType": "VariableDeclaration",
            "scope": 9912,
            "src": "1216:88:84",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9635,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1216:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 9637,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1283:20:84",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 9636,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1273:9:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9638,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1273:31:84",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 9644,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1335:32:84",
            "nodeType": "VariableDeclaration",
            "scope": 9912,
            "src": "1310:94:84",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9640,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1310:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 9642,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1380:23:84",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 9641,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1370:9:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9643,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1370:34:84",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              24005
            ],
            "body": {
              "id": 9703,
              "nodeType": "Block",
              "src": "1619:563:84",
              "statements": [
                {
                  "condition": {
                    "id": 9660,
                    "name": "_shouldRevertSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9626,
                    "src": "1633:17:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9665,
                  "nodeType": "IfStatement",
                  "src": "1629:56:84",
                  "trueBody": {
                    "id": 9664,
                    "nodeType": "Block",
                    "src": "1652:33:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9661,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1666:6:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1666:8:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9663,
                        "nodeType": "ExpressionStatement",
                        "src": "1666:8:84"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    9668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9668,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1703:5:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9703,
                      "src": "1695:13:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$23966",
                        "typeString": "contract IERC777"
                      },
                      "typeName": {
                        "id": 9667,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9666,
                          "name": "IERC777",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23966,
                          "src": "1695:7:84"
                        },
                        "referencedDeclaration": 23966,
                        "src": "1695:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 9670,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24435,
                          "src": "1719:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 9671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1719:12:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9669,
                      "name": "IERC777",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23966,
                      "src": "1711:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC777_$23966_$",
                        "typeString": "type(contract IERC777)"
                      }
                    },
                    "id": 9672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:21:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$23966",
                      "typeString": "contract IERC777"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1695:37:84"
                },
                {
                  "assignments": [
                    9675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9675,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "1751:11:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9703,
                      "src": "1743:19:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1743:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9680,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9678,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9648,
                        "src": "1781:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9676,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9668,
                        "src": "1765:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 9677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23842,
                      "src": "1765:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:21:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1743:43:84"
                },
                {
                  "assignments": [
                    9682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9682,
                      "mutability": "mutable",
                      "name": "toBalance",
                      "nameLocation": "1900:9:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9703,
                      "src": "1892:17:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1892:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9687,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9685,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9650,
                        "src": "1928:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9683,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9668,
                        "src": "1912:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 9684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23842,
                      "src": "1912:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1912:19:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1892:39:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9689,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9646,
                        "src": "1979:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9690,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9648,
                        "src": "2001:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9691,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9650,
                        "src": "2019:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9692,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9652,
                        "src": "2035:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9693,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9654,
                        "src": "2055:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 9694,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9656,
                        "src": "2077:12:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9697,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9668,
                            "src": "2111:5:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC777_$23966",
                              "typeString": "contract IERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC777_$23966",
                              "typeString": "contract IERC777"
                            }
                          ],
                          "id": 9696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2103:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9695,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2103:7:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2103:14:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9699,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9675,
                        "src": "2131:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9700,
                        "name": "toBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9682,
                        "src": "2156:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9688,
                      "name": "TokensToSendCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9602,
                      "src": "1947:18:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,address,uint256,uint256)"
                      }
                    },
                    "id": 9701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:228:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9702,
                  "nodeType": "EmitStatement",
                  "src": "1942:233:84"
                }
              ]
            },
            "functionSelector": "75ab9782",
            "id": 9704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nameLocation": "1420:12:84",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9658,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1610:8:84"
            },
            "parameters": {
              "id": 9657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9646,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1450:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9704,
                  "src": "1442:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9648,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1476:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9704,
                  "src": "1468:12:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9650,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1498:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9704,
                  "src": "1490:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9652,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1518:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9704,
                  "src": "1510:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9654,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "1549:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9704,
                  "src": "1534:23:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9653,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9656,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "1582:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9704,
                  "src": "1567:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9655,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:168:84"
            },
            "returnParameters": {
              "id": 9659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:0:84"
            },
            "scope": 9912,
            "src": "1411:771:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              23985
            ],
            "body": {
              "id": 9763,
              "nodeType": "Block",
              "src": "2398:568:84",
              "statements": [
                {
                  "condition": {
                    "id": 9720,
                    "name": "_shouldRevertReceive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9628,
                    "src": "2412:20:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9725,
                  "nodeType": "IfStatement",
                  "src": "2408:59:84",
                  "trueBody": {
                    "id": 9724,
                    "nodeType": "Block",
                    "src": "2434:33:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9721,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2448:6:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2448:8:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9723,
                        "nodeType": "ExpressionStatement",
                        "src": "2448:8:84"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    9728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9728,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "2485:5:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9763,
                      "src": "2477:13:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$23966",
                        "typeString": "contract IERC777"
                      },
                      "typeName": {
                        "id": 9727,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9726,
                          "name": "IERC777",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23966,
                          "src": "2477:7:84"
                        },
                        "referencedDeclaration": 23966,
                        "src": "2477:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9733,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 9730,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24435,
                          "src": "2501:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 9731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2501:12:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9729,
                      "name": "IERC777",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23966,
                      "src": "2493:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC777_$23966_$",
                        "typeString": "type(contract IERC777)"
                      }
                    },
                    "id": 9732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:21:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$23966",
                      "typeString": "contract IERC777"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2477:37:84"
                },
                {
                  "assignments": [
                    9735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9735,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "2533:11:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9763,
                      "src": "2525:19:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9734,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9740,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9738,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9708,
                        "src": "2563:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9736,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9728,
                        "src": "2547:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 9737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23842,
                      "src": "2547:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2547:21:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2525:43:84"
                },
                {
                  "assignments": [
                    9742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9742,
                      "mutability": "mutable",
                      "name": "toBalance",
                      "nameLocation": "2682:9:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9763,
                      "src": "2674:17:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2674:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9747,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9745,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9710,
                        "src": "2710:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9743,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9728,
                        "src": "2694:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 9744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23842,
                      "src": "2694:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2694:19:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2674:39:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9749,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9706,
                        "src": "2763:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9750,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9708,
                        "src": "2785:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9751,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9710,
                        "src": "2803:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9752,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9712,
                        "src": "2819:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9753,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9714,
                        "src": "2839:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 9754,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9716,
                        "src": "2861:12:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9757,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9728,
                            "src": "2895:5:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC777_$23966",
                              "typeString": "contract IERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC777_$23966",
                              "typeString": "contract IERC777"
                            }
                          ],
                          "id": 9756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2887:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9755,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2887:7:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2887:14:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9759,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9735,
                        "src": "2915:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9760,
                        "name": "toBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9742,
                        "src": "2940:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9748,
                      "name": "TokensReceivedCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9622,
                      "src": "2729:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,address,uint256,uint256)"
                      }
                    },
                    "id": 9761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2729:230:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9762,
                  "nodeType": "EmitStatement",
                  "src": "2724:235:84"
                }
              ]
            },
            "functionSelector": "0023de29",
            "id": 9764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nameLocation": "2197:14:84",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9718,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2389:8:84"
            },
            "parameters": {
              "id": 9717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9706,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2229:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9764,
                  "src": "2221:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2221:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9708,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2255:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9764,
                  "src": "2247:12:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9710,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2277:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9764,
                  "src": "2269:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9712,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2297:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9764,
                  "src": "2289:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2289:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9714,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "2328:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9764,
                  "src": "2313:23:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9713,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9716,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "2361:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9764,
                  "src": "2346:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9715,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2211:168:84"
            },
            "returnParameters": {
              "id": 9719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:0:84"
            },
            "scope": 9912,
            "src": "2188:778:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9790,
              "nodeType": "Block",
              "src": "3015:199:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9770,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9639,
                        "src": "3054:29:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9771,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9766,
                        "src": "3085:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9769,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26518,
                      "src": "3025:28:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 9772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3025:68:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9773,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:68:84"
                },
                {
                  "assignments": [
                    9775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9775,
                      "mutability": "mutable",
                      "name": "self",
                      "nameLocation": "3112:4:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9790,
                      "src": "3104:12:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9774,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3104:7:84",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9780,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9778,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3127:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      ],
                      "id": 9777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3119:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 9776,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3119:7:84",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 9779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:13:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3104:28:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9781,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9766,
                      "src": "3146:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 9782,
                      "name": "self",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9775,
                      "src": "3157:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3146:15:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9789,
                  "nodeType": "IfStatement",
                  "src": "3142:66:84",
                  "trueBody": {
                    "id": 9788,
                    "nodeType": "Block",
                    "src": "3163:45:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9785,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9775,
                              "src": "3192:4:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9784,
                            "name": "registerSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9808,
                            "src": "3177:14:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 9786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3177:20:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9787,
                        "nodeType": "ExpressionStatement",
                        "src": "3177:20:84"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "d2de6474",
            "id": 9791,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "senderFor",
            "nameLocation": "2981:9:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9766,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2999:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "2991:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2990:17:84"
            },
            "returnParameters": {
              "id": 9768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3015:0:84"
            },
            "scope": 9912,
            "src": "2972:242:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9807,
              "nodeType": "Block",
              "src": "3267:103:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9801,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3318:4:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          ],
                          "id": 9800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3310:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3310:7:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3310:13:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9803,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9639,
                        "src": "3325:29:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9804,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9793,
                        "src": "3356:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9796,
                        "name": "_erc1820",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9634,
                        "src": "3277:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 9798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26574,
                      "src": "3277:32:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 9805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:86:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9806,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:86:84"
                }
              ]
            },
            "functionSelector": "e1ecbd30",
            "id": 9808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerSender",
            "nameLocation": "3229:14:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9793,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3252:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9808,
                  "src": "3244:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3243:16:84"
            },
            "returnParameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3267:0:84"
            },
            "scope": 9912,
            "src": "3220:150:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9834,
              "nodeType": "Block",
              "src": "3422:205:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9814,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9644,
                        "src": "3461:32:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9815,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9810,
                        "src": "3495:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9813,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26518,
                      "src": "3432:28:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 9816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3432:71:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9817,
                  "nodeType": "ExpressionStatement",
                  "src": "3432:71:84"
                },
                {
                  "assignments": [
                    9819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9819,
                      "mutability": "mutable",
                      "name": "self",
                      "nameLocation": "3522:4:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 9834,
                      "src": "3514:12:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9818,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3514:7:84",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9824,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9822,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3537:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      ],
                      "id": 9821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3529:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 9820,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3529:7:84",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 9823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3529:13:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3514:28:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9825,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9810,
                      "src": "3556:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 9826,
                      "name": "self",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9819,
                      "src": "3567:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3556:15:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9833,
                  "nodeType": "IfStatement",
                  "src": "3552:69:84",
                  "trueBody": {
                    "id": 9832,
                    "nodeType": "Block",
                    "src": "3573:48:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9829,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9819,
                              "src": "3605:4:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9828,
                            "name": "registerRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9852,
                            "src": "3587:17:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 9830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3587:23:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9831,
                        "nodeType": "ExpressionStatement",
                        "src": "3587:23:84"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e0eb2180",
            "id": 9835,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientFor",
            "nameLocation": "3385:12:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9810,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3406:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3398:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3398:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3397:17:84"
            },
            "returnParameters": {
              "id": 9812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:0:84"
            },
            "scope": 9912,
            "src": "3376:251:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9851,
              "nodeType": "Block",
              "src": "3686:109:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9845,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3737:4:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$9912",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          ],
                          "id": 9844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3729:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9843,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3729:7:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3729:13:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9847,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9644,
                        "src": "3744:32:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9848,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9837,
                        "src": "3778:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9840,
                        "name": "_erc1820",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9634,
                        "src": "3696:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$26635",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 9842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26574,
                      "src": "3696:32:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 9849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3696:92:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9850,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:92:84"
                }
              ]
            },
            "functionSelector": "a8badaa5",
            "id": 9852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerRecipient",
            "nameLocation": "3642:17:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9837,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3668:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9852,
                  "src": "3660:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3659:19:84"
            },
            "returnParameters": {
              "id": 9839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3686:0:84"
            },
            "scope": 9912,
            "src": "3633:162:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9861,
              "nodeType": "Block",
              "src": "3856:49:84",
              "statements": [
                {
                  "expression": {
                    "id": 9859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9857,
                      "name": "_shouldRevertSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9626,
                      "src": "3866:17:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9858,
                      "name": "shouldRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9854,
                      "src": "3886:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3866:32:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9860,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:32:84"
                }
              ]
            },
            "functionSelector": "4e4ae5a5",
            "id": 9862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setShouldRevertSend",
            "nameLocation": "3810:19:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "mutability": "mutable",
                  "name": "shouldRevert",
                  "nameLocation": "3835:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9862,
                  "src": "3830:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3829:19:84"
            },
            "returnParameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3856:0:84"
            },
            "scope": 9912,
            "src": "3801:104:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9871,
              "nodeType": "Block",
              "src": "3969:52:84",
              "statements": [
                {
                  "expression": {
                    "id": 9869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9867,
                      "name": "_shouldRevertReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9628,
                      "src": "3979:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9868,
                      "name": "shouldRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9864,
                      "src": "4002:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3979:35:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9870,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:35:84"
                }
              ]
            },
            "functionSelector": "c97e18fc",
            "id": 9872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setShouldRevertReceive",
            "nameLocation": "3920:22:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9864,
                  "mutability": "mutable",
                  "name": "shouldRevert",
                  "nameLocation": "3948:12:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9872,
                  "src": "3943:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9863,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3943:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3942:19:84"
            },
            "returnParameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3969:0:84"
            },
            "scope": 9912,
            "src": "3911:110:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9892,
              "nodeType": "Block",
              "src": "4148:158:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9887,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9877,
                        "src": "4240:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9888,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "4244:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9889,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "4252:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 9884,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9875,
                        "src": "4229:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 9886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23852,
                      "src": "4229:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 9890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:28:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9891,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:28:84"
                }
              ]
            },
            "functionSelector": "3836ef89",
            "id": 9893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4036:4:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9875,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4058:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9893,
                  "src": "4050:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$23966",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "id": 9874,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9873,
                      "name": "IERC777",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23966,
                      "src": "4050:7:84"
                    },
                    "referencedDeclaration": 23966,
                    "src": "4050:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$23966",
                      "typeString": "contract IERC777"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4081:2:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9893,
                  "src": "4073:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9879,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4101:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9893,
                  "src": "4093:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4093:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9881,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4130:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9893,
                  "src": "4117:17:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9880,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4117:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4040:100:84"
            },
            "returnParameters": {
              "id": 9883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4148:0:84"
            },
            "scope": 9912,
            "src": "4027:279:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9910,
              "nodeType": "Block",
              "src": "4413:41:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9906,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9898,
                        "src": "4434:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9907,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9900,
                        "src": "4442:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 9903,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9896,
                        "src": "4423:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$23966",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 9905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23860,
                      "src": "4423:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) external"
                      }
                    },
                    "id": 9908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4423:24:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9909,
                  "nodeType": "ExpressionStatement",
                  "src": "4423:24:84"
                }
              ]
            },
            "functionSelector": "44d17187",
            "id": 9911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "4321:4:84",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9896,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4343:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9911,
                  "src": "4335:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$23966",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "id": 9895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9894,
                      "name": "IERC777",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23966,
                      "src": "4335:7:84"
                    },
                    "referencedDeclaration": 23966,
                    "src": "4335:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$23966",
                      "typeString": "contract IERC777"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9898,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4366:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9911,
                  "src": "4358:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4358:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9900,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4395:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 9911,
                  "src": "4382:17:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9899,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4325:80:84"
            },
            "returnParameters": {
              "id": 9902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:84"
            },
            "scope": 9912,
            "src": "4312:142:84",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9913,
        "src": "329:4127:84",
        "usedErrors": []
      }
    ],
    "src": "33:4424:84"
  },
  "bytecode": "60806040526001805462010000600160b01b031916751820a4b7618bde71dce8cdc73aab6c95905fad24000017905534801561003a57600080fd5b50610bcd8061004a6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c806375ab97821161007157806375ab97821461012e578063a8badaa514610141578063c97e18fc14610154578063d2de64741461017c578063e0eb21801461018f578063e1ecbd30146101a257600080fd5b806223de29146100ad578063249cb3fa146100c25780633836ef89146100e757806344d17187146100fa5780634e4ae5a51461010d575b600080fd5b6100c06100bb36600461084a565b6101b5565b005b6100d56100d036600461091d565b610325565b60405190815260200160405180910390f35b6100c06100f536600461094d565b61037d565b6100c06101083660046109b9565b6103e5565b6100c061011b3660046108fb565b6001805460ff1916911515919091179055565b6100c061013c36600461084a565b61044a565b6100c061014f36600461082d565b6105a0565b6100c06101623660046108fb565b600180549115156101000261ff0019909216919091179055565b6100c061018a36600461082d565b610636565b6100c061019d36600461082d565b61067f565b6100c06101b036600461082d565b6106c4565b600154610100900460ff16156101ca57600080fd5b6000336040516370a0823160e01b81526001600160a01b038a811660048301529192506000918316906370a082319060240160206040518083038186803b15801561021457600080fd5b505afa158015610228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024c9190610a12565b6040516370a0823160e01b81526001600160a01b038a811660048301529192506000918416906370a082319060240160206040518083038186803b15801561029357600080fd5b505afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610a12565b90507f47e915878c47f3ec4d7ff646a2becb229f64fd2abe4d2b5e2bb4275b0cf50d4e8b8b8b8b8b8b8b8b8b8b8b6040516103109b9a99989796959493929190610aa1565b60405180910390a15050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16610354576000610376565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b9392505050565b604051634decdde360e11b81526001600160a01b03851690639bd9bbc6906103ad90869086908690600401610b18565b600060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b5050505050505050565b60405163fe9d930360e01b81526001600160a01b0384169063fe9d9303906104139085908590600401610b48565b600060405180830381600087803b15801561042d57600080fd5b505af1158015610441573d6000803e3d6000fd5b50505050505050565b60015460ff161561045a57600080fd5b6000336040516370a0823160e01b81526001600160a01b038a811660048301529192506000918316906370a082319060240160206040518083038186803b1580156104a457600080fd5b505afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc9190610a12565b6040516370a0823160e01b81526001600160a01b038a811660048301529192506000918416906370a082319060240160206040518083038186803b15801561052357600080fd5b505afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610a12565b90507faa3e88aca472e90221daf7d3d601abafb62b120319089d7a2c2f63588da855298b8b8b8b8b8b8b8b8b8b8b6040516103109b9a99989796959493929190610aa1565b6001546040516329965a1d60e01b81523060048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201526001600160a01b03838116604483015262010000909204909116906329965a1d906064015b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b5050505050565b6106607f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89582610729565b306001600160a01b03821681141561067b5761067b816106c4565b5050565b6106a97fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b82610729565b306001600160a01b03821681141561067b5761067b816105a0565b6001546040516329965a1d60e01b81523060048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201526001600160a01b03838116604483015262010000909204909116906329965a1d90606401610601565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff19166001179055565b60008083601f84011261076957600080fd5b50813567ffffffffffffffff81111561078157600080fd5b60208301915083602082850101111561079957600080fd5b9250929050565b600082601f8301126107b157600080fd5b813567ffffffffffffffff808211156107cc576107cc610b69565b604051601f8301601f19908116603f011681019082821181831017156107f4576107f4610b69565b8160405283815286602085880101111561080d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561083f57600080fd5b813561037681610b7f565b60008060008060008060008060c0898b03121561086657600080fd5b883561087181610b7f565b9750602089013561088181610b7f565b9650604089013561089181610b7f565b955060608901359450608089013567ffffffffffffffff808211156108b557600080fd5b6108c18c838d01610757565b909650945060a08b01359150808211156108da57600080fd5b506108e78b828c01610757565b999c989b5096995094979396929594505050565b60006020828403121561090d57600080fd5b8135801515811461037657600080fd5b6000806040838503121561093057600080fd5b82359150602083013561094281610b7f565b809150509250929050565b6000806000806080858703121561096357600080fd5b843561096e81610b7f565b9350602085013561097e81610b7f565b925060408501359150606085013567ffffffffffffffff8111156109a157600080fd5b6109ad878288016107a0565b91505092959194509250565b6000806000606084860312156109ce57600080fd5b83356109d981610b7f565b925060208401359150604084013567ffffffffffffffff8111156109fc57600080fd5b610a08868287016107a0565b9150509250925092565b600060208284031215610a2457600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015610a7a57602081850181015186830182015201610a5e565b81811115610a8c576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038c811682528b811660208301528a81166040830152606082018a905261012060808301819052600091610adf8483018b8d610a2b565b915083820360a0850152610af482898b610a2b565b961660c0840152505060e08101929092526101009091015298975050505050505050565b60018060a01b0384168152826020820152606060408201526000610b3f6060830184610a54565b95945050505050565b828152604060208201526000610b616040830184610a54565b949350505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b9457600080fd5b5056fea26469706673582212207b24b34a8438198536b5df66cf33143da412f71042dd3b826a2749526680613464736f6c63430008060033",
  "bytecodeSha1": "afe95623cbc754eac0cead07937d3ec84a34c84c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "ERC777SenderRecipientMock",
  "coverageMap": {
    "branches": {
      "174": {},
      "175": {},
      "176": {},
      "180": {},
      "197": {
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "21": [
            984,
            1028,
            true
          ]
        }
      },
      "199": {},
      "200": {},
      "84": {
        "ERC777SenderRecipientMock.recipientFor": {
          "20": [
            3556,
            3571,
            false
          ]
        },
        "ERC777SenderRecipientMock.senderFor": {
          "19": [
            3146,
            3161,
            false
          ]
        },
        "ERC777SenderRecipientMock.tokensReceived": {
          "17": [
            2412,
            2432,
            false
          ]
        },
        "ERC777SenderRecipientMock.tokensToSend": {
          "18": [
            1633,
            1650,
            false
          ]
        }
      }
    },
    "statements": {
      "174": {},
      "175": {},
      "176": {},
      "180": {
        "Context._msgSender": {
          "3": [
            712,
            729
          ]
        }
      },
      "197": {
        "ERC1820Implementer._registerInterfaceForAddress": {
          "16": [
            1415,
            1466
          ]
        },
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "5": [
            977,
            1068
          ]
        }
      },
      "199": {},
      "200": {},
      "84": {
        "ERC777SenderRecipientMock.burn": {
          "7": [
            4423,
            4447
          ]
        },
        "ERC777SenderRecipientMock.recipientFor": {
          "13": [
            3432,
            3503
          ],
          "14": [
            3587,
            3610
          ]
        },
        "ERC777SenderRecipientMock.registerRecipient": {
          "10": [
            3696,
            3788
          ]
        },
        "ERC777SenderRecipientMock.registerSender": {
          "15": [
            3277,
            3363
          ]
        },
        "ERC777SenderRecipientMock.send": {
          "6": [
            4229,
            4257
          ]
        },
        "ERC777SenderRecipientMock.senderFor": {
          "11": [
            3025,
            3093
          ],
          "12": [
            3177,
            3197
          ]
        },
        "ERC777SenderRecipientMock.setShouldRevertReceive": {
          "1": [
            3979,
            4014
          ]
        },
        "ERC777SenderRecipientMock.setShouldRevertSend": {
          "0": [
            3866,
            3898
          ]
        },
        "ERC777SenderRecipientMock.tokensReceived": {
          "2": [
            2448,
            2456
          ],
          "4": [
            2724,
            2959
          ]
        },
        "ERC777SenderRecipientMock.tokensToSend": {
          "8": [
            1666,
            1674
          ],
          "9": [
            1942,
            2175
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC1820Implementer",
    "IERC1820Implementer",
    "IERC1820Registry",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a85760003560e01c806375ab97821161007157806375ab97821461012e578063a8badaa514610141578063c97e18fc14610154578063d2de64741461017c578063e0eb21801461018f578063e1ecbd30146101a257600080fd5b806223de29146100ad578063249cb3fa146100c25780633836ef89146100e757806344d17187146100fa5780634e4ae5a51461010d575b600080fd5b6100c06100bb36600461084a565b6101b5565b005b6100d56100d036600461091d565b610325565b60405190815260200160405180910390f35b6100c06100f536600461094d565b61037d565b6100c06101083660046109b9565b6103e5565b6100c061011b3660046108fb565b6001805460ff1916911515919091179055565b6100c061013c36600461084a565b61044a565b6100c061014f36600461082d565b6105a0565b6100c06101623660046108fb565b600180549115156101000261ff0019909216919091179055565b6100c061018a36600461082d565b610636565b6100c061019d36600461082d565b61067f565b6100c06101b036600461082d565b6106c4565b600154610100900460ff16156101ca57600080fd5b6000336040516370a0823160e01b81526001600160a01b038a811660048301529192506000918316906370a082319060240160206040518083038186803b15801561021457600080fd5b505afa158015610228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024c9190610a12565b6040516370a0823160e01b81526001600160a01b038a811660048301529192506000918416906370a082319060240160206040518083038186803b15801561029357600080fd5b505afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610a12565b90507f47e915878c47f3ec4d7ff646a2becb229f64fd2abe4d2b5e2bb4275b0cf50d4e8b8b8b8b8b8b8b8b8b8b8b6040516103109b9a99989796959493929190610aa1565b60405180910390a15050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16610354576000610376565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b9392505050565b604051634decdde360e11b81526001600160a01b03851690639bd9bbc6906103ad90869086908690600401610b18565b600060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b5050505050505050565b60405163fe9d930360e01b81526001600160a01b0384169063fe9d9303906104139085908590600401610b48565b600060405180830381600087803b15801561042d57600080fd5b505af1158015610441573d6000803e3d6000fd5b50505050505050565b60015460ff161561045a57600080fd5b6000336040516370a0823160e01b81526001600160a01b038a811660048301529192506000918316906370a082319060240160206040518083038186803b1580156104a457600080fd5b505afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc9190610a12565b6040516370a0823160e01b81526001600160a01b038a811660048301529192506000918416906370a082319060240160206040518083038186803b15801561052357600080fd5b505afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610a12565b90507faa3e88aca472e90221daf7d3d601abafb62b120319089d7a2c2f63588da855298b8b8b8b8b8b8b8b8b8b8b6040516103109b9a99989796959493929190610aa1565b6001546040516329965a1d60e01b81523060048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201526001600160a01b03838116604483015262010000909204909116906329965a1d906064015b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b5050505050565b6106607f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89582610729565b306001600160a01b03821681141561067b5761067b816106c4565b5050565b6106a97fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b82610729565b306001600160a01b03821681141561067b5761067b816105a0565b6001546040516329965a1d60e01b81523060048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201526001600160a01b03838116604483015262010000909204909116906329965a1d90606401610601565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff19166001179055565b60008083601f84011261076957600080fd5b50813567ffffffffffffffff81111561078157600080fd5b60208301915083602082850101111561079957600080fd5b9250929050565b600082601f8301126107b157600080fd5b813567ffffffffffffffff808211156107cc576107cc610b69565b604051601f8301601f19908116603f011681019082821181831017156107f4576107f4610b69565b8160405283815286602085880101111561080d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561083f57600080fd5b813561037681610b7f565b60008060008060008060008060c0898b03121561086657600080fd5b883561087181610b7f565b9750602089013561088181610b7f565b9650604089013561089181610b7f565b955060608901359450608089013567ffffffffffffffff808211156108b557600080fd5b6108c18c838d01610757565b909650945060a08b01359150808211156108da57600080fd5b506108e78b828c01610757565b999c989b5096995094979396929594505050565b60006020828403121561090d57600080fd5b8135801515811461037657600080fd5b6000806040838503121561093057600080fd5b82359150602083013561094281610b7f565b809150509250929050565b6000806000806080858703121561096357600080fd5b843561096e81610b7f565b9350602085013561097e81610b7f565b925060408501359150606085013567ffffffffffffffff8111156109a157600080fd5b6109ad878288016107a0565b91505092959194509250565b6000806000606084860312156109ce57600080fd5b83356109d981610b7f565b925060208401359150604084013567ffffffffffffffff8111156109fc57600080fd5b610a08868287016107a0565b9150509250925092565b600060208284031215610a2457600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015610a7a57602081850181015186830182015201610a5e565b81811115610a8c576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038c811682528b811660208301528a81166040830152606082018a905261012060808301819052600091610adf8483018b8d610a2b565b915083820360a0850152610af482898b610a2b565b961660c0840152505060e08101929092526101009091015298975050505050505050565b60018060a01b0384168152826020820152606060408201526000610b3f6060830184610a54565b95945050505050565b828152604060208201526000610b616040830184610a54565b949350505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b9457600080fd5b5056fea26469706673582212207b24b34a8438198536b5df66cf33143da412f71042dd3b826a2749526680613464736f6c63430008060033",
  "deployedSourceMap": "329:4127:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:778;;;;;;:::i;:::-;;:::i;:::-;;795:280:197;;;;;;:::i;:::-;;:::i;:::-;;;7477:25:211;;;7465:2;7450:18;795:280:197;;;;;;;4027:279:84;;;;;;:::i;:::-;;:::i;4312:142::-;;;;;;:::i;:::-;;:::i;3801:104::-;;;;;;:::i;:::-;3866:17;:32;;-1:-1:-1;;3866:32:84;;;;;;;;;;3801:104;1411:771;;;;;;:::i;:::-;;:::i;3633:162::-;;;;;;:::i;:::-;;:::i;3911:110::-;;;;;;:::i;:::-;3979:20;:35;;;;;;;-1:-1:-1;;3979:35:84;;;;;;;;;3911:110;2972:242;;;;;;:::i;:::-;;:::i;3376:251::-;;;;;;:::i;:::-;;:::i;3220:150::-;;;;;;:::i;:::-;;:::i;2188:778::-;2412:20;;;;;;;2408:59;;;2448:8;;;2408:59;2477:13;719:10:180;2547:21:84;;-1:-1:-1;;;2547:21:84;;-1:-1:-1;;;;;5481:32:211;;;2547:21:84;;;5463:51:211;2477:37:84;;-1:-1:-1;2525:19:84;;2547:15;;;;;5436:18:211;;2547:21:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2694:19;;-1:-1:-1;;;2694:19:84;;-1:-1:-1;;;;;5481:32:211;;;2694:19:84;;;5463:51:211;2525:43:84;;-1:-1:-1;2674:17:84;;2694:15;;;;;5436:18:211;;2694:19:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2674:39;;2729:230;2763:8;2785:4;2803:2;2819:6;2839:8;;2861:12;;2895:5;2915:11;2940:9;2729:230;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2398:568;;;2188:778;;;;;;;;:::o;795:280:197:-;954:7;984:35;;;;;;;;;;;-1:-1:-1;;;;;984:44:197;;;;;;;;;;;;:84;;1063:4;984:84;;;588:33;984:84;977:91;795:280;-1:-1:-1;;;795:280:197:o;4027:279:84:-;4229:28;;-1:-1:-1;;;4229:28:84;;-1:-1:-1;;;;;4229:10:84;;;;;:28;;4240:2;;4244:6;;4252:4;;4229:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4027:279;;;;:::o;4312:142::-;4423:24;;-1:-1:-1;;;4423:24:84;;-1:-1:-1;;;;;4423:10:84;;;;;:24;;4434:6;;4442:4;;4423:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4312:142;;;:::o;1411:771::-;1633:17;;;;1629:56;;;1666:8;;;1629:56;1695:13;719:10:180;1765:21:84;;-1:-1:-1;;;1765:21:84;;-1:-1:-1;;;;;5481:32:211;;;1765:21:84;;;5463:51:211;1695:37:84;;-1:-1:-1;1743:19:84;;1765:15;;;;;5436:18:211;;1765:21:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1912:19;;-1:-1:-1;;;1912:19:84;;-1:-1:-1;;;;;5481:32:211;;;1912:19:84;;;5463:51:211;1743:43:84;;-1:-1:-1;1892:17:84;;1912:15;;;;;5436:18:211;;1912:19:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1892:39;;1947:228;1979:8;2001:4;2019:2;2035:6;2055:8;;2077:12;;2111:5;2131:11;2156:9;1947:228;;;;;;;;;;;;;;;;:::i;3633:162::-;3696:8;;:92;;-1:-1:-1;;;3696:92:84;;3737:4;3696:92;;;6801:34:211;1370::84;6851:18:211;;;6844:34;-1:-1:-1;;;;;6914:15:211;;;6894:18;;;6887:43;3696:8:84;;;;;;;;:32;;6736:18:211;;3696:92:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3633:162;:::o;2972:242::-;3025:68;1273:31;3085:7;3025:28;:68::i;:::-;3127:4;-1:-1:-1;;;;;3146:15:84;;;;3142:66;;;3177:20;3192:4;3177:14;:20::i;:::-;3015:199;2972:242;:::o;3376:251::-;3432:71;1370:34;3495:7;3432:28;:71::i;:::-;3537:4;-1:-1:-1;;;;;3556:15:84;;;;3552:69;;;3587:23;3605:4;3587:17;:23::i;3220:150::-;3277:8;;:86;;-1:-1:-1;;;3277:86:84;;3318:4;3277:86;;;6801:34:211;1273:31:84;6851:18:211;;;6844:34;-1:-1:-1;;;;;6914:15:211;;;6894:18;;;6887:43;3277:8:84;;;;;;;;:32;;6736:18:211;;3277:86:84;6718:218:211;1310:163:197;1415:20;:35;;;;;;;;;;;-1:-1:-1;;;;;1415:44:197;;;;;;;;;;:51;;-1:-1:-1;;1415:51:197;1462:4;1415:51;;;1310:163::o;14:347:211:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:2;;147:1;144;137:12;96:2;-1:-1:-1;170:20:211;;213:18;202:30;;199:2;;;245:1;242;235:12;199:2;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:2;;;351:1;348;341:12;296:2;86:275;;;;;:::o;366:718::-;408:5;461:3;454:4;446:6;442:17;438:27;428:2;;479:1;476;469:12;428:2;515:6;502:20;541:18;578:2;574;571:10;568:2;;;584:18;;:::i;:::-;659:2;653:9;627:2;713:13;;-1:-1:-1;;709:22:211;;;733:2;705:31;701:40;689:53;;;757:18;;;777:22;;;754:46;751:2;;;803:18;;:::i;:::-;843:10;839:2;832:22;878:2;870:6;863:18;924:3;917:4;912:2;904:6;900:15;896:26;893:35;890:2;;;941:1;938;931:12;890:2;1005;998:4;990:6;986:17;979:4;971:6;967:17;954:54;1052:1;1045:4;1040:2;1032:6;1028:15;1024:26;1017:37;1072:6;1063:15;;;;;;418:666;;;;:::o;1089:247::-;1148:6;1201:2;1189:9;1180:7;1176:23;1172:32;1169:2;;;1217:1;1214;1207:12;1169:2;1256:9;1243:23;1275:31;1300:5;1275:31;:::i;1341:1205::-;1467:6;1475;1483;1491;1499;1507;1515;1523;1576:3;1564:9;1555:7;1551:23;1547:33;1544:2;;;1593:1;1590;1583:12;1544:2;1632:9;1619:23;1651:31;1676:5;1651:31;:::i;:::-;1701:5;-1:-1:-1;1758:2:211;1743:18;;1730:32;1771:33;1730:32;1771:33;:::i;:::-;1823:7;-1:-1:-1;1882:2:211;1867:18;;1854:32;1895:33;1854:32;1895:33;:::i;:::-;1947:7;-1:-1:-1;2001:2:211;1986:18;;1973:32;;-1:-1:-1;2056:3:211;2041:19;;2028:33;2080:18;2110:14;;;2107:2;;;2137:1;2134;2127:12;2107:2;2176:58;2226:7;2217:6;2206:9;2202:22;2176:58;:::i;:::-;2253:8;;-1:-1:-1;2150:84:211;-1:-1:-1;2341:3:211;2326:19;;2313:33;;-1:-1:-1;2358:16:211;;;2355:2;;;2387:1;2384;2377:12;2355:2;;2426:60;2478:7;2467:8;2456:9;2452:24;2426:60;:::i;:::-;1534:1012;;;;-1:-1:-1;1534:1012:211;;-1:-1:-1;1534:1012:211;;;;;;2505:8;-1:-1:-1;;;1534:1012:211:o;2551:273::-;2607:6;2660:2;2648:9;2639:7;2635:23;2631:32;2628:2;;;2676:1;2673;2666:12;2628:2;2715:9;2702:23;2768:5;2761:13;2754:21;2747:5;2744:32;2734:2;;2790:1;2787;2780:12;2829:315;2897:6;2905;2958:2;2946:9;2937:7;2933:23;2929:32;2926:2;;;2974:1;2971;2964:12;2926:2;3010:9;2997:23;2987:33;;3070:2;3059:9;3055:18;3042:32;3083:31;3108:5;3083:31;:::i;:::-;3133:5;3123:15;;;2916:228;;;;;:::o;3149:682::-;3261:6;3269;3277;3285;3338:3;3326:9;3317:7;3313:23;3309:33;3306:2;;;3355:1;3352;3345:12;3306:2;3394:9;3381:23;3413:31;3438:5;3413:31;:::i;:::-;3463:5;-1:-1:-1;3520:2:211;3505:18;;3492:32;3533:33;3492:32;3533:33;:::i;:::-;3585:7;-1:-1:-1;3639:2:211;3624:18;;3611:32;;-1:-1:-1;3694:2:211;3679:18;;3666:32;3721:18;3710:30;;3707:2;;;3753:1;3750;3743:12;3707:2;3776:49;3817:7;3808:6;3797:9;3793:22;3776:49;:::i;:::-;3766:59;;;3296:535;;;;;;;:::o;3836:540::-;3939:6;3947;3955;4008:2;3996:9;3987:7;3983:23;3979:32;3976:2;;;4024:1;4021;4014:12;3976:2;4063:9;4050:23;4082:31;4107:5;4082:31;:::i;:::-;4132:5;-1:-1:-1;4184:2:211;4169:18;;4156:32;;-1:-1:-1;4239:2:211;4224:18;;4211:32;4266:18;4255:30;;4252:2;;;4298:1;4295;4288:12;4252:2;4321:49;4362:7;4353:6;4342:9;4338:22;4321:49;:::i;:::-;4311:59;;;3966:410;;;;;:::o;4381:184::-;4451:6;4504:2;4492:9;4483:7;4479:23;4475:32;4472:2;;;4520:1;4517;4510:12;4472:2;-1:-1:-1;4543:16:211;;4462:103;-1:-1:-1;4462:103:211:o;4570:266::-;4658:6;4653:3;4646:19;4710:6;4703:5;4696:4;4691:3;4687:14;4674:43;-1:-1:-1;4762:1:211;4737:16;;;4755:4;4733:27;;;4726:38;;;;4818:2;4797:15;;;-1:-1:-1;;4793:29:211;4784:39;;;4780:50;;4636:200::o;4841:471::-;4882:3;4920:5;4914:12;4947:6;4942:3;4935:19;4972:1;4982:162;4996:6;4993:1;4990:13;4982:162;;;5058:4;5114:13;;;5110:22;;5104:29;5086:11;;;5082:20;;5075:59;5011:12;4982:162;;;5162:6;5159:1;5156:13;5153:2;;;5228:1;5221:4;5212:6;5207:3;5203:16;5199:27;5192:38;5153:2;-1:-1:-1;5294:2:211;5273:15;-1:-1:-1;;5269:29:211;5260:39;;;;5301:4;5256:50;;4890:422;-1:-1:-1;;4890:422:211:o;5525:1031::-;-1:-1:-1;;;;;5995:15:211;;;5977:34;;6047:15;;;6042:2;6027:18;;6020:43;6099:15;;;6094:2;6079:18;;6072:43;6146:2;6131:18;;6124:34;;;5927:3;6189;6174:19;;6167:31;;;5898:4;;6221:61;6263:18;;;6255:6;6247;6221:61;:::i;:::-;6207:75;;6331:9;6323:6;6319:22;6313:3;6302:9;6298:19;6291:51;6359:49;6401:6;6393;6385;6359:49;:::i;:::-;6445:15;;6439:3;6424:19;;6417:44;-1:-1:-1;;6492:3:211;6477:19;;6470:35;;;;6536:3;6521:19;;;6514:36;6351:57;5907:649;-1:-1:-1;;;;;;;;5907:649:211:o;6941:385::-;7173:1;7169;7164:3;7160:11;7156:19;7148:6;7144:32;7133:9;7126:51;7213:6;7208:2;7197:9;7193:18;7186:34;7256:2;7251;7240:9;7236:18;7229:30;7107:4;7276:44;7316:2;7305:9;7301:18;7293:6;7276:44;:::i;:::-;7268:52;7116:210;-1:-1:-1;;;;;7116:210:211:o;7513:288::-;7688:6;7677:9;7670:25;7731:2;7726;7715:9;7711:18;7704:30;7651:4;7751:44;7791:2;7780:9;7776:18;7768:6;7751:44;:::i;:::-;7743:52;7660:141;-1:-1:-1;;;;7660:141:211:o;7806:127::-;7867:10;7862:3;7858:20;7855:1;7848:31;7898:4;7895:1;7888:15;7922:4;7919:1;7912:15;7938:131;-1:-1:-1;;;;;8013:31:211;;8003:42;;7993:2;;8059:1;8056;8049:12;7993:2;7983:86;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      },
      "tokensReceived(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
      },
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
      }
    },
    "version": 1
  },
  "offset": [
    329,
    4456
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75AB9782 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xA8BADAA5 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xC97E18FC EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xD2DE6474 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xE0EB2180 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xE1ECBD30 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x249CB3FA EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x3836EF89 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x44D17187 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x4E4AE5A5 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP PUSH32 0x47E915878C47F3EC4D7FF646A2BECB229F64FD2ABE4D2B5E2BB4275B0CF50D4E DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x354 JUMPI PUSH1 0x0 PUSH2 0x376 JUMP JUMPDEST PUSH32 0xA2EF4600D742022D532D4747CB3547474667D6F13804902513B2EC01C848F4B4 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4DECDDE3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9BD9BBC6 SWAP1 PUSH2 0x3AD SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE9D9303 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xFE9D9303 SWAP1 PUSH2 0x413 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP PUSH32 0xAA3E88ACA472E90221DAF7D3D601ABAFB62B120319089D7A2C2F63588DA85529 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x310 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0x29965A1D SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x660 PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 DUP3 PUSH2 0x729 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B DUP2 PUSH2 0x6C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A9 PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B DUP3 PUSH2 0x729 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B DUP2 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0x29965A1D SWAP1 PUSH1 0x64 ADD PUSH2 0x601 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7CC JUMPI PUSH2 0x7CC PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7F4 JUMPI PUSH2 0x7F4 PUSH2 0xB69 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x376 DUP2 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x871 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x881 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x891 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C1 DUP13 DUP4 DUP14 ADD PUSH2 0x757 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E7 DUP12 DUP3 DUP13 ADD PUSH2 0x757 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x942 DUP2 PUSH2 0xB7F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x96E DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x97E DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AD DUP8 DUP3 DUP9 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x9D9 DUP2 PUSH2 0xB7F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA08 DUP7 DUP3 DUP8 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA7A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA5E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP3 MSTORE DUP12 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0xADF DUP5 DUP4 ADD DUP12 DUP14 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0xAF4 DUP3 DUP10 DUP12 PUSH2 0xA2B JUMP JUMPDEST SWAP7 AND PUSH1 0xC0 DUP5 ADD MSTORE POP POP PUSH1 0xE0 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xB3F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xB61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x24B34A8438198536B5DF66CF33143DA412F71042DD3B826A27495266 DUP1 PUSH2 0x3464 PUSH20 0x6F6C634300080600330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "5": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "CALLVALUE",
      "path": "84"
    },
    "6": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "7": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "8": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "12": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "REVERT",
      "path": "84"
    },
    "16": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "17": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "POP",
      "path": "84"
    },
    "18": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "21": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "LT",
      "path": "84"
    },
    "22": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xA8"
    },
    "25": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "26": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "CALLDATALOAD",
      "path": "84"
    },
    "29": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "SHR",
      "path": "84"
    },
    "32": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "33": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x75AB9782"
    },
    "38": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "GT",
      "path": "84"
    },
    "39": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "43": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "44": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x75AB9782"
    },
    "49": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "50": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x12E"
    },
    "53": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "54": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "55": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0xA8BADAA5"
    },
    "60": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "61": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x141"
    },
    "64": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "65": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "66": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0xC97E18FC"
    },
    "71": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "72": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x154"
    },
    "75": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "76": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "77": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0xD2DE6474"
    },
    "82": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "83": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x17C"
    },
    "86": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "87": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "88": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0xE0EB2180"
    },
    "93": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "94": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x18F"
    },
    "97": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "98": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "99": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0xE1ECBD30"
    },
    "104": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "105": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x1A2"
    },
    "108": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "109": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "112": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "REVERT",
      "path": "84"
    },
    "113": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "114": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "115": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH3",
      "path": "84",
      "value": "0x23DE29"
    },
    "119": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "120": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xAD"
    },
    "123": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "124": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "125": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x249CB3FA"
    },
    "130": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "131": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC2"
    },
    "134": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "135": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "136": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x3836EF89"
    },
    "141": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "142": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xE7"
    },
    "145": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "146": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "147": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x44D17187"
    },
    "152": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "153": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xFA"
    },
    "156": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "157": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "158": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x4E4AE5A5"
    },
    "163": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "EQ",
      "path": "84"
    },
    "164": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x10D"
    },
    "167": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "168": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "169": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "172": {
      "first_revert": true,
      "fn": null,
      "offset": [
        329,
        4456
      ],
      "op": "REVERT",
      "path": "84"
    },
    "173": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "174": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "177": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xBB"
    },
    "180": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "181": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "183": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x84A"
    },
    "186": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMP",
      "path": "84"
    },
    "187": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "188": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x1B5"
    },
    "191": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMP",
      "path": "84"
    },
    "192": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "193": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "STOP",
      "path": "84"
    },
    "194": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "195": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH2",
      "path": "197",
      "value": "0xD5"
    },
    "198": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH2",
      "path": "197",
      "value": "0xD0"
    },
    "201": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "CALLDATASIZE",
      "path": "197"
    },
    "202": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x4"
    },
    "204": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH2",
      "path": "197",
      "value": "0x91D"
    },
    "207": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "i",
      "offset": [
        795,
        1075
      ],
      "op": "JUMP",
      "path": "197"
    },
    "208": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "209": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH2",
      "path": "197",
      "value": "0x325"
    },
    "212": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "i",
      "offset": [
        795,
        1075
      ],
      "op": "JUMP",
      "path": "197"
    },
    "213": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "214": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x40"
    },
    "216": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "MLOAD",
      "path": "197"
    },
    "217": {
      "op": "SWAP1"
    },
    "218": {
      "op": "DUP2"
    },
    "219": {
      "op": "MSTORE"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "222": {
      "op": "ADD"
    },
    "223": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x40"
    },
    "225": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "MLOAD",
      "path": "197"
    },
    "226": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "DUP1",
      "path": "197"
    },
    "227": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "SWAP2",
      "path": "197"
    },
    "228": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "SUB",
      "path": "197"
    },
    "229": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "SWAP1",
      "path": "197"
    },
    "230": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "RETURN",
      "path": "197"
    },
    "231": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "232": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "235": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xF5"
    },
    "238": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "239": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "241": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x94D"
    },
    "244": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "i",
      "offset": [
        4027,
        4306
      ],
      "op": "JUMP",
      "path": "84"
    },
    "245": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "246": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x37D"
    },
    "249": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "i",
      "offset": [
        4027,
        4306
      ],
      "op": "JUMP",
      "path": "84"
    },
    "250": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "251": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "254": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x108"
    },
    "257": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "258": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "260": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x9B9"
    },
    "263": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "i",
      "offset": [
        4312,
        4454
      ],
      "op": "JUMP",
      "path": "84"
    },
    "264": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "265": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x3E5"
    },
    "268": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "i",
      "offset": [
        4312,
        4454
      ],
      "op": "JUMP",
      "path": "84"
    },
    "269": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "270": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "273": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x11B"
    },
    "276": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "277": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "279": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x8FB"
    },
    "282": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "jump": "i",
      "offset": [
        3801,
        3905
      ],
      "op": "JUMP",
      "path": "84"
    },
    "283": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "284": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3883
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 0,
      "value": "0x1"
    },
    "286": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "DUP1",
      "path": "84"
    },
    "287": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SLOAD",
      "path": "84"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "290": {
      "op": "NOT"
    },
    "291": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "AND",
      "path": "84"
    },
    "292": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "293": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "294": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "295": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "296": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "297": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "298": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "OR",
      "path": "84"
    },
    "299": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "300": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3866,
        3898
      ],
      "op": "SSTORE",
      "path": "84"
    },
    "301": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3801,
        3905
      ],
      "op": "JUMP",
      "path": "84"
    },
    "302": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "303": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "306": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x13C"
    },
    "309": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "310": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "312": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x84A"
    },
    "315": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1411,
        2182
      ],
      "op": "JUMP",
      "path": "84"
    },
    "316": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "317": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x44A"
    },
    "320": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1411,
        2182
      ],
      "op": "JUMP",
      "path": "84"
    },
    "321": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "322": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "325": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x14F"
    },
    "328": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "329": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "331": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x82D"
    },
    "334": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "i",
      "offset": [
        3633,
        3795
      ],
      "op": "JUMP",
      "path": "84"
    },
    "335": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "336": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x5A0"
    },
    "339": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "i",
      "offset": [
        3633,
        3795
      ],
      "op": "JUMP",
      "path": "84"
    },
    "340": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "341": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "344": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x162"
    },
    "347": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "348": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "350": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x8FB"
    },
    "353": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "jump": "i",
      "offset": [
        3911,
        4021
      ],
      "op": "JUMP",
      "path": "84"
    },
    "354": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "355": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        3999
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 1,
      "value": "0x1"
    },
    "357": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "DUP1",
      "path": "84"
    },
    "358": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SLOAD",
      "path": "84"
    },
    "359": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "360": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "361": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "362": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x100"
    },
    "365": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "MUL",
      "path": "84"
    },
    "366": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "369": {
      "op": "NOT"
    },
    "370": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "371": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "372": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "AND",
      "path": "84"
    },
    "373": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "374": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "375": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "376": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "OR",
      "path": "84"
    },
    "377": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "378": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3979,
        4014
      ],
      "op": "SSTORE",
      "path": "84"
    },
    "379": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3911,
        4021
      ],
      "op": "JUMP",
      "path": "84"
    },
    "380": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "381": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "384": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x18A"
    },
    "387": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "388": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "390": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x82D"
    },
    "393": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        2972,
        3214
      ],
      "op": "JUMP",
      "path": "84"
    },
    "394": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "395": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x636"
    },
    "398": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        2972,
        3214
      ],
      "op": "JUMP",
      "path": "84"
    },
    "399": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "400": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "403": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x19D"
    },
    "406": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "407": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "409": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x82D"
    },
    "412": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3376,
        3627
      ],
      "op": "JUMP",
      "path": "84"
    },
    "413": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "414": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x67F"
    },
    "417": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3376,
        3627
      ],
      "op": "JUMP",
      "path": "84"
    },
    "418": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "419": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xC0"
    },
    "422": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x1B0"
    },
    "425": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "CALLDATASIZE",
      "path": "84"
    },
    "426": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "428": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x82D"
    },
    "431": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "jump": "i",
      "offset": [
        3220,
        3370
      ],
      "op": "JUMP",
      "path": "84"
    },
    "432": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "433": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x6C4"
    },
    "436": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "jump": "i",
      "offset": [
        3220,
        3370
      ],
      "op": "JUMP",
      "path": "84"
    },
    "437": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "438": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1"
    },
    "440": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "SLOAD",
      "path": "84"
    },
    "441": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x100"
    },
    "444": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "445": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "DIV",
      "path": "84"
    },
    "446": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0xFF"
    },
    "448": {
      "branch": 17,
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2412,
        2432
      ],
      "op": "AND",
      "path": "84"
    },
    "449": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2467
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "450": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2467
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x1CA"
    },
    "453": {
      "branch": 17,
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2467
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "454": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2448,
        2456
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 2,
      "value": "0x0"
    },
    "456": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2448,
        2456
      ],
      "op": "DUP1",
      "path": "84"
    },
    "457": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2448,
        2456
      ],
      "op": "REVERT",
      "path": "84"
    },
    "458": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2408,
        2467
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "459": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2477,
        2490
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "461": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180",
      "statement": 3
    },
    "462": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "464": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "465": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "472": {
      "op": "SHL"
    },
    "473": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP2",
      "path": "84"
    },
    "474": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "op": "DUP11"
    },
    "484": {
      "op": "DUP2"
    },
    "485": {
      "op": "AND"
    },
    "486": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "488": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP4",
      "path": "84"
    },
    "489": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ADD",
      "path": "84"
    },
    "490": {
      "op": "MSTORE"
    },
    "491": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2477,
        2514
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "492": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2477,
        2514
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2525,
        2544
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "496": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2525,
        2544
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "497": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2562
      ],
      "op": "DUP4",
      "path": "84"
    },
    "498": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2562
      ],
      "op": "AND",
      "path": "84"
    },
    "499": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2562
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "500": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2562
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x70A08231"
    },
    "505": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2562
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "508": {
      "op": "ADD"
    },
    "509": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x20"
    },
    "511": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "513": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "514": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "515": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP4",
      "path": "84"
    },
    "516": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "SUB",
      "path": "84"
    },
    "517": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP2",
      "path": "84"
    },
    "518": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP7",
      "path": "84"
    },
    "519": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "520": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "521": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "522": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "523": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "524": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x214"
    },
    "527": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "528": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "530": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "531": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "REVERT",
      "path": "84"
    },
    "532": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "533": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "POP",
      "path": "84"
    },
    "534": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "GAS",
      "path": "84"
    },
    "535": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "STATICCALL",
      "path": "84"
    },
    "536": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "537": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "538": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "539": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x228"
    },
    "542": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "543": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "544": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "546": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "547": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "548": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "549": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "551": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "REVERT",
      "path": "84"
    },
    "552": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "553": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "POP",
      "path": "84"
    },
    "554": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "POP",
      "path": "84"
    },
    "555": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "POP",
      "path": "84"
    },
    "556": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "POP",
      "path": "84"
    },
    "557": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "559": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "560": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "561": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "563": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "NOT",
      "path": "84"
    },
    "564": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "566": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP3",
      "path": "84"
    },
    "567": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ADD",
      "path": "84"
    },
    "568": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "AND",
      "path": "84"
    },
    "569": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP3",
      "path": "84"
    },
    "570": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ADD",
      "path": "84"
    },
    "571": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP1",
      "path": "84"
    },
    "572": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "574": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "575": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "POP",
      "path": "84"
    },
    "576": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "DUP2",
      "path": "84"
    },
    "577": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "ADD",
      "path": "84"
    },
    "578": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "579": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x24C"
    },
    "582": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "583": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "584": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xA12"
    },
    "587": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2547,
        2568
      ],
      "op": "JUMP",
      "path": "84"
    },
    "588": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2547,
        2568
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "589": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "591": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP2",
      "path": "84"
    },
    "601": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "SUB"
    },
    "610": {
      "op": "DUP11"
    },
    "611": {
      "op": "DUP2"
    },
    "612": {
      "op": "AND"
    },
    "613": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "615": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP4",
      "path": "84"
    },
    "616": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ADD",
      "path": "84"
    },
    "617": {
      "op": "MSTORE"
    },
    "618": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2525,
        2568
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "619": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2525,
        2568
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2674,
        2691
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "623": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2674,
        2691
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "624": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2709
      ],
      "op": "DUP5",
      "path": "84"
    },
    "625": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2709
      ],
      "op": "AND",
      "path": "84"
    },
    "626": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2709
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "627": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2709
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x70A08231"
    },
    "632": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2709
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x20"
    },
    "638": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "640": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "641": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "642": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP4",
      "path": "84"
    },
    "643": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "SUB",
      "path": "84"
    },
    "644": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP2",
      "path": "84"
    },
    "645": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP7",
      "path": "84"
    },
    "646": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "647": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "648": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "649": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "650": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "651": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x293"
    },
    "654": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "655": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "657": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "658": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "REVERT",
      "path": "84"
    },
    "659": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "660": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "661": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "GAS",
      "path": "84"
    },
    "662": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "STATICCALL",
      "path": "84"
    },
    "663": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "664": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "665": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "666": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x2A7"
    },
    "669": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "670": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "671": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "673": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "674": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "675": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "676": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "678": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "REVERT",
      "path": "84"
    },
    "679": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "680": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "681": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "682": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "683": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "684": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "686": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "687": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "688": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "690": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "NOT",
      "path": "84"
    },
    "691": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "693": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP3",
      "path": "84"
    },
    "694": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ADD",
      "path": "84"
    },
    "695": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "AND",
      "path": "84"
    },
    "696": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP3",
      "path": "84"
    },
    "697": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ADD",
      "path": "84"
    },
    "698": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP1",
      "path": "84"
    },
    "699": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "701": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "702": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "703": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "DUP2",
      "path": "84"
    },
    "704": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "ADD",
      "path": "84"
    },
    "705": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "706": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x2CB"
    },
    "709": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "710": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "711": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xA12"
    },
    "714": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2694,
        2713
      ],
      "op": "JUMP",
      "path": "84"
    },
    "715": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2694,
        2713
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "716": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2674,
        2713
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "717": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2674,
        2713
      ],
      "op": "POP",
      "path": "84"
    },
    "718": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "PUSH32",
      "path": "84",
      "statement": 4,
      "value": "0x47E915878C47F3EC4D7FF646A2BECB229F64FD2ABE4D2B5E2BB4275B0CF50D4E"
    },
    "751": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2763,
        2771
      ],
      "op": "DUP12",
      "path": "84"
    },
    "752": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2785,
        2789
      ],
      "op": "DUP12",
      "path": "84"
    },
    "753": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2803,
        2805
      ],
      "op": "DUP12",
      "path": "84"
    },
    "754": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2819,
        2825
      ],
      "op": "DUP12",
      "path": "84"
    },
    "755": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2839,
        2847
      ],
      "op": "DUP12",
      "path": "84"
    },
    "756": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2839,
        2847
      ],
      "op": "DUP12",
      "path": "84"
    },
    "757": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2861,
        2873
      ],
      "op": "DUP12",
      "path": "84"
    },
    "758": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2861,
        2873
      ],
      "op": "DUP12",
      "path": "84"
    },
    "759": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2895,
        2900
      ],
      "op": "DUP12",
      "path": "84"
    },
    "760": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2915,
        2926
      ],
      "op": "DUP12",
      "path": "84"
    },
    "761": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2940,
        2949
      ],
      "op": "DUP12",
      "path": "84"
    },
    "762": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "764": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "765": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x310"
    },
    "768": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP12",
      "path": "84"
    },
    "769": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP11",
      "path": "84"
    },
    "770": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP10",
      "path": "84"
    },
    "771": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP9",
      "path": "84"
    },
    "772": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP8",
      "path": "84"
    },
    "773": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP7",
      "path": "84"
    },
    "774": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP6",
      "path": "84"
    },
    "775": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP5",
      "path": "84"
    },
    "776": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP4",
      "path": "84"
    },
    "777": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "778": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "779": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "780": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xAA1"
    },
    "783": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2729,
        2959
      ],
      "op": "JUMP",
      "path": "84"
    },
    "784": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "785": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "787": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "788": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "DUP1",
      "path": "84"
    },
    "789": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "790": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SUB",
      "path": "84"
    },
    "791": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "792": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2729,
        2959
      ],
      "op": "LOG1",
      "path": "84"
    },
    "793": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2398,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "794": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2398,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "795": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2398,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "796": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "797": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "798": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "799": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "800": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "801": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "802": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "803": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2188,
        2966
      ],
      "op": "POP",
      "path": "84"
    },
    "804": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "o",
      "offset": [
        2188,
        2966
      ],
      "op": "JUMP",
      "path": "84"
    },
    "805": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "806": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        954,
        961
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x0"
    },
    "808": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "DUP3",
      "path": "197",
      "statement": 5
    },
    "809": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "DUP2",
      "path": "197"
    },
    "810": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "811": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x20"
    },
    "813": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "DUP2",
      "path": "197"
    },
    "814": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "DUP2",
      "path": "197"
    },
    "815": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "816": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x40"
    },
    "818": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "DUP1",
      "path": "197"
    },
    "819": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "DUP4",
      "path": "197"
    },
    "820": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1019
      ],
      "op": "KECCAK256",
      "path": "197"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "827": {
      "op": "SHL"
    },
    "828": {
      "op": "SUB"
    },
    "829": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "DUP6",
      "path": "197"
    },
    "830": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "AND",
      "path": "197"
    },
    "831": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "DUP5",
      "path": "197"
    },
    "832": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "833": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "SWAP1",
      "path": "197"
    },
    "834": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "SWAP2",
      "path": "197"
    },
    "835": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "836": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "DUP2",
      "path": "197"
    },
    "837": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "KECCAK256",
      "path": "197"
    },
    "838": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "SLOAD",
      "path": "197"
    },
    "839": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0xFF"
    },
    "841": {
      "branch": 21,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1028
      ],
      "op": "AND",
      "path": "197"
    },
    "842": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1068
      ],
      "op": "PUSH2",
      "path": "197",
      "value": "0x354"
    },
    "845": {
      "branch": 21,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1068
      ],
      "op": "JUMPI",
      "path": "197"
    },
    "846": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        1063,
        1067
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x0"
    },
    "848": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1068
      ],
      "op": "PUSH2",
      "path": "197",
      "value": "0x376"
    },
    "851": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1068
      ],
      "op": "JUMP",
      "path": "197"
    },
    "852": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1068
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "853": {
      "offset": [
        588,
        621
      ],
      "op": "PUSH32",
      "path": "197",
      "value": "0xA2EF4600D742022D532D4747CB3547474667D6F13804902513B2EC01C848F4B4"
    },
    "886": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        984,
        1068
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "887": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        977,
        1068
      ],
      "op": "SWAP4",
      "path": "197"
    },
    "888": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        795,
        1075
      ],
      "op": "SWAP3",
      "path": "197"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "o",
      "offset": [
        795,
        1075
      ],
      "op": "JUMP",
      "path": "197"
    },
    "893": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "894": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 6,
      "value": "0x40"
    },
    "896": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "897": {
      "op": "PUSH4",
      "value": "0x4DECDDE3"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP2",
      "path": "84"
    },
    "906": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "op": "SUB"
    },
    "915": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4239
      ],
      "op": "DUP6",
      "path": "84"
    },
    "916": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4239
      ],
      "op": "AND",
      "path": "84"
    },
    "917": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4239
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "918": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4239
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x9BD9BBC6"
    },
    "923": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4239
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "924": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x3AD"
    },
    "927": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "928": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4240,
        4242
      ],
      "op": "DUP7",
      "path": "84"
    },
    "929": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4240,
        4242
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "930": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4244,
        4250
      ],
      "op": "DUP7",
      "path": "84"
    },
    "931": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4244,
        4250
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "932": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4252,
        4256
      ],
      "op": "DUP7",
      "path": "84"
    },
    "933": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4252,
        4256
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "934": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "936": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "ADD",
      "path": "84"
    },
    "937": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xB18"
    },
    "940": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "i",
      "offset": [
        4229,
        4257
      ],
      "op": "JUMP",
      "path": "84"
    },
    "941": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "942": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "944": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "946": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "947": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP1",
      "path": "84"
    },
    "948": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP4",
      "path": "84"
    },
    "949": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "SUB",
      "path": "84"
    },
    "950": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP2",
      "path": "84"
    },
    "951": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "953": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP8",
      "path": "84"
    },
    "954": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP1",
      "path": "84"
    },
    "955": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "956": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "957": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP1",
      "path": "84"
    },
    "958": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "959": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x3C7"
    },
    "962": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "963": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP1",
      "path": "84"
    },
    "966": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "REVERT",
      "path": "84"
    },
    "967": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "968": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "POP",
      "path": "84"
    },
    "969": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "GAS",
      "path": "84"
    },
    "970": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "CALL",
      "path": "84"
    },
    "971": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "972": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP1",
      "path": "84"
    },
    "973": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "974": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x3DB"
    },
    "977": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "978": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "979": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "981": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "DUP1",
      "path": "84"
    },
    "982": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "983": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "984": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "986": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "REVERT",
      "path": "84"
    },
    "987": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "988": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "POP",
      "path": "84"
    },
    "989": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "POP",
      "path": "84"
    },
    "990": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "POP",
      "path": "84"
    },
    "991": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4229,
        4257
      ],
      "op": "POP",
      "path": "84"
    },
    "992": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "POP",
      "path": "84"
    },
    "993": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "POP",
      "path": "84"
    },
    "994": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "POP",
      "path": "84"
    },
    "995": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4027,
        4306
      ],
      "op": "POP",
      "path": "84"
    },
    "996": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "o",
      "offset": [
        4027,
        4306
      ],
      "op": "JUMP",
      "path": "84"
    },
    "997": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "998": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 7,
      "value": "0x40"
    },
    "1000": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1001": {
      "op": "PUSH4",
      "value": "0xFE9D9303"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1010": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4433
      ],
      "op": "DUP5",
      "path": "84"
    },
    "1020": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4433
      ],
      "op": "AND",
      "path": "84"
    },
    "1021": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4433
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1022": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4433
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0xFE9D9303"
    },
    "1027": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4433
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1028": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x413"
    },
    "1031": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1032": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4434,
        4440
      ],
      "op": "DUP6",
      "path": "84"
    },
    "1033": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4434,
        4440
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1034": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4442,
        4446
      ],
      "op": "DUP6",
      "path": "84"
    },
    "1035": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4442,
        4446
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1036": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "1038": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "ADD",
      "path": "84"
    },
    "1039": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xB48"
    },
    "1042": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "i",
      "offset": [
        4423,
        4447
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1043": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1044": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1046": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1048": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1049": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1050": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1051": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "SUB",
      "path": "84"
    },
    "1052": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1053": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1055": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP8",
      "path": "84"
    },
    "1056": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1057": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "1058": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1059": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1060": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1061": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x42D"
    },
    "1064": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1065": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1067": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1068": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1069": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1070": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "POP",
      "path": "84"
    },
    "1071": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "GAS",
      "path": "84"
    },
    "1072": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "CALL",
      "path": "84"
    },
    "1073": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1074": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1075": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1076": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x441"
    },
    "1079": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1080": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1081": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1083": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1084": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "1085": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1086": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1088": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1089": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1090": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "POP",
      "path": "84"
    },
    "1091": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "POP",
      "path": "84"
    },
    "1092": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "POP",
      "path": "84"
    },
    "1093": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4423,
        4447
      ],
      "op": "POP",
      "path": "84"
    },
    "1094": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "POP",
      "path": "84"
    },
    "1095": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "POP",
      "path": "84"
    },
    "1096": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4312,
        4454
      ],
      "op": "POP",
      "path": "84"
    },
    "1097": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "o",
      "offset": [
        4312,
        4454
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1098": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1411,
        2182
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1099": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1633,
        1650
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1"
    },
    "1101": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1633,
        1650
      ],
      "op": "SLOAD",
      "path": "84"
    },
    "1102": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1633,
        1650
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0xFF"
    },
    "1104": {
      "branch": 18,
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1633,
        1650
      ],
      "op": "AND",
      "path": "84"
    },
    "1105": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1685
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1106": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1685
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x45A"
    },
    "1109": {
      "branch": 18,
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1685
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1110": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1666,
        1674
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 8,
      "value": "0x0"
    },
    "1112": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1666,
        1674
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1113": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1666,
        1674
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1114": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1685
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1115": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1695,
        1708
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "180"
    },
    "1118": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1120": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1121": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1130": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1137": {
      "op": "SHL"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "op": "DUP11"
    },
    "1140": {
      "op": "DUP2"
    },
    "1141": {
      "op": "AND"
    },
    "1142": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "1144": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1145": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ADD",
      "path": "84"
    },
    "1146": {
      "op": "MSTORE"
    },
    "1147": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1695,
        1732
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1148": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1695,
        1732
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1743,
        1762
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1152": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1743,
        1762
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1153": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1780
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1154": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1780
      ],
      "op": "AND",
      "path": "84"
    },
    "1155": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1780
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1156": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1780
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x70A08231"
    },
    "1161": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1780
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x20"
    },
    "1167": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1169": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1170": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1171": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1172": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "SUB",
      "path": "84"
    },
    "1173": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1174": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP7",
      "path": "84"
    },
    "1175": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1176": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "1177": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1178": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1179": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1180": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1184": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1186": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1187": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1188": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1189": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "POP",
      "path": "84"
    },
    "1190": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "GAS",
      "path": "84"
    },
    "1191": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "STATICCALL",
      "path": "84"
    },
    "1192": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1193": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1194": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1195": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x4B8"
    },
    "1198": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1199": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1200": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1202": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1203": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "1204": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1205": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1207": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1208": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1209": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "POP",
      "path": "84"
    },
    "1210": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "POP",
      "path": "84"
    },
    "1211": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "POP",
      "path": "84"
    },
    "1212": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "POP",
      "path": "84"
    },
    "1213": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1215": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1216": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1217": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "1219": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "NOT",
      "path": "84"
    },
    "1220": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "1222": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1223": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ADD",
      "path": "84"
    },
    "1224": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "AND",
      "path": "84"
    },
    "1225": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1226": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ADD",
      "path": "84"
    },
    "1227": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1228": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1230": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1231": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "POP",
      "path": "84"
    },
    "1232": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1233": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "ADD",
      "path": "84"
    },
    "1234": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1235": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x4DC"
    },
    "1238": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1239": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1240": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xA12"
    },
    "1243": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1765,
        1786
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1244": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1765,
        1786
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1245": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1247": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1248": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1257": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "op": "DUP11"
    },
    "1267": {
      "op": "DUP2"
    },
    "1268": {
      "op": "AND"
    },
    "1269": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "1271": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1272": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ADD",
      "path": "84"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1743,
        1786
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1275": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1743,
        1786
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "1276": {
      "op": "POP"
    },
    "1277": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1892,
        1909
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1279": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1892,
        1909
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1280": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1927
      ],
      "op": "DUP5",
      "path": "84"
    },
    "1281": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1927
      ],
      "op": "AND",
      "path": "84"
    },
    "1282": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1927
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1283": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1927
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x70A08231"
    },
    "1288": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1927
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x20"
    },
    "1294": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1296": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1297": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1298": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1299": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "SUB",
      "path": "84"
    },
    "1300": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1301": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP7",
      "path": "84"
    },
    "1302": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1303": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "1304": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1305": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1306": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1307": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x523"
    },
    "1310": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1311": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1313": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1314": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1315": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1316": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1317": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "GAS",
      "path": "84"
    },
    "1318": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "STATICCALL",
      "path": "84"
    },
    "1319": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1320": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1321": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1322": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x537"
    },
    "1325": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1326": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1327": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1329": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1330": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "1331": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1332": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1334": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1335": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1336": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1337": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1338": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1339": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1340": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1342": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1343": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1344": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "1346": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "NOT",
      "path": "84"
    },
    "1347": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x1F"
    },
    "1349": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1350": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ADD",
      "path": "84"
    },
    "1351": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "AND",
      "path": "84"
    },
    "1352": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1353": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ADD",
      "path": "84"
    },
    "1354": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1355": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1357": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1358": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1359": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1360": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "ADD",
      "path": "84"
    },
    "1361": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1362": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x55B"
    },
    "1365": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1366": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1367": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xA12"
    },
    "1370": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1912,
        1931
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1371": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1912,
        1931
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1372": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1892,
        1931
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1373": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1892,
        1931
      ],
      "op": "POP",
      "path": "84"
    },
    "1374": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "PUSH32",
      "path": "84",
      "statement": 9,
      "value": "0xAA3E88ACA472E90221DAF7D3D601ABAFB62B120319089D7A2C2F63588DA85529"
    },
    "1407": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1979,
        1987
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1408": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2001,
        2005
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1409": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2019,
        2021
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1410": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2035,
        2041
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1411": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2055,
        2063
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1412": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2055,
        2063
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1413": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2077,
        2089
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1414": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2077,
        2089
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1415": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2111,
        2116
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1416": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2131,
        2142
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1417": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2156,
        2165
      ],
      "op": "DUP12",
      "path": "84"
    },
    "1418": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1420": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1421": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x310"
    },
    "1424": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP12",
      "path": "84"
    },
    "1425": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP11",
      "path": "84"
    },
    "1426": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP10",
      "path": "84"
    },
    "1427": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP9",
      "path": "84"
    },
    "1428": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP8",
      "path": "84"
    },
    "1429": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP7",
      "path": "84"
    },
    "1430": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP6",
      "path": "84"
    },
    "1431": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP5",
      "path": "84"
    },
    "1432": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP4",
      "path": "84"
    },
    "1433": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "1434": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1435": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1436": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1947,
        2175
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0xAA1"
    },
    "1439": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1947,
        2175
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1440": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1441": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 10,
      "value": "0x1"
    },
    "1443": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "SLOAD",
      "path": "84"
    },
    "1444": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1446": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1447": {
      "op": "PUSH4",
      "value": "0x29965A1D"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1456": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1457": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3737,
        3741
      ],
      "op": "ADDRESS",
      "path": "84"
    },
    "1458": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "1460": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1461": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "ADD",
      "path": "84"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "offset": [
        1370,
        1404
      ],
      "op": "PUSH32",
      "path": "84",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1498": {
      "op": "DUP3"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "op": "DUP4"
    },
    "1510": {
      "op": "DUP2"
    },
    "1511": {
      "op": "AND"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1514": {
      "op": "DUP4"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "MSTORE"
    },
    "1517": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "PUSH3",
      "path": "84",
      "value": "0x10000"
    },
    "1521": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1522": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "1523": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "DIV",
      "path": "84"
    },
    "1524": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1525": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1526": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "AND",
      "path": "84"
    },
    "1527": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3704
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1528": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3728
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x29965A1D"
    },
    "1533": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3728
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1536": {
      "op": "ADD"
    },
    "1537": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1538": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1540": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1542": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1543": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1544": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP4",
      "path": "84"
    },
    "1545": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "SUB",
      "path": "84"
    },
    "1546": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1547": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1549": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP8",
      "path": "84"
    },
    "1550": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1551": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "EXTCODESIZE",
      "path": "84"
    },
    "1552": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1553": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1554": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1555": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x61B"
    },
    "1558": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1559": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1561": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1562": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1563": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1564": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "POP",
      "path": "84"
    },
    "1565": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "GAS",
      "path": "84"
    },
    "1566": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "CALL",
      "path": "84"
    },
    "1567": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1568": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1569": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1570": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x62F"
    },
    "1573": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1574": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1575": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1577": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "DUP1",
      "path": "84"
    },
    "1578": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "RETURNDATACOPY",
      "path": "84"
    },
    "1579": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "RETURNDATASIZE",
      "path": "84"
    },
    "1580": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x0"
    },
    "1582": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "REVERT",
      "path": "84"
    },
    "1583": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1584": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "POP",
      "path": "84"
    },
    "1585": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "POP",
      "path": "84"
    },
    "1586": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "POP",
      "path": "84"
    },
    "1587": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3696,
        3788
      ],
      "op": "POP",
      "path": "84"
    },
    "1588": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3633,
        3795
      ],
      "op": "POP",
      "path": "84"
    },
    "1589": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "o",
      "offset": [
        3633,
        3795
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1590": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1591": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3025,
        3093
      ],
      "op": "PUSH2",
      "path": "84",
      "statement": 11,
      "value": "0x660"
    },
    "1594": {
      "offset": [
        1273,
        1304
      ],
      "op": "PUSH32",
      "path": "84",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "1627": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3085,
        3092
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1628": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3025,
        3053
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x729"
    },
    "1631": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        3025,
        3093
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1632": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3025,
        3093
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1633": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3127,
        3131
      ],
      "op": "ADDRESS",
      "path": "84"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3146,
        3161
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1643": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3146,
        3161
      ],
      "op": "AND",
      "path": "84"
    },
    "1644": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3146,
        3161
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1645": {
      "branch": 19,
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3146,
        3161
      ],
      "op": "EQ",
      "path": "84"
    },
    "1646": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3208
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1647": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3208
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x67B"
    },
    "1650": {
      "branch": 19,
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3142,
        3208
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1651": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3177,
        3197
      ],
      "op": "PUSH2",
      "path": "84",
      "statement": 12,
      "value": "0x67B"
    },
    "1654": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3192,
        3196
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1655": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3177,
        3191
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x6C4"
    },
    "1658": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        3177,
        3197
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1659": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3177,
        3197
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1660": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3015,
        3214
      ],
      "op": "POP",
      "path": "84"
    },
    "1661": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2972,
        3214
      ],
      "op": "POP",
      "path": "84"
    },
    "1662": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "o",
      "offset": [
        2972,
        3214
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1663": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3376,
        3627
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1664": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3432,
        3503
      ],
      "op": "PUSH2",
      "path": "84",
      "statement": 13,
      "value": "0x6A9"
    },
    "1667": {
      "offset": [
        1370,
        1404
      ],
      "op": "PUSH32",
      "path": "84",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "1700": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3495,
        3502
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1701": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3432,
        3460
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x729"
    },
    "1704": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3432,
        3503
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1705": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3432,
        3503
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1706": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3537,
        3541
      ],
      "op": "ADDRESS",
      "path": "84"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3556,
        3571
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1716": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3556,
        3571
      ],
      "op": "AND",
      "path": "84"
    },
    "1717": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3556,
        3571
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1718": {
      "branch": 20,
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3556,
        3571
      ],
      "op": "EQ",
      "path": "84"
    },
    "1719": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3621
      ],
      "op": "ISZERO",
      "path": "84"
    },
    "1720": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3621
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x67B"
    },
    "1723": {
      "branch": 20,
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3552,
        3621
      ],
      "op": "JUMPI",
      "path": "84"
    },
    "1724": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3587,
        3610
      ],
      "op": "PUSH2",
      "path": "84",
      "statement": 14,
      "value": "0x67B"
    },
    "1727": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3605,
        3609
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1728": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3587,
        3604
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x5A0"
    },
    "1731": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3587,
        3610
      ],
      "op": "JUMP",
      "path": "84"
    },
    "1732": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3220,
        3370
      ],
      "op": "JUMPDEST",
      "path": "84"
    },
    "1733": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "PUSH1",
      "path": "84",
      "statement": 15,
      "value": "0x1"
    },
    "1735": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "SLOAD",
      "path": "84"
    },
    "1736": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x40"
    },
    "1738": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "MLOAD",
      "path": "84"
    },
    "1739": {
      "op": "PUSH4",
      "value": "0x29965A1D"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "DUP2",
      "path": "84"
    },
    "1748": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "MSTORE",
      "path": "84"
    },
    "1749": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3318,
        3322
      ],
      "op": "ADDRESS",
      "path": "84"
    },
    "1750": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "PUSH1",
      "path": "84",
      "value": "0x4"
    },
    "1752": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "DUP3",
      "path": "84"
    },
    "1753": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "ADD",
      "path": "84"
    },
    "1754": {
      "op": "MSTORE"
    },
    "1755": {
      "offset": [
        1273,
        1304
      ],
      "op": "PUSH32",
      "path": "84",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1799": {
      "op": "SHL"
    },
    "1800": {
      "op": "SUB"
    },
    "1801": {
      "op": "DUP4"
    },
    "1802": {
      "op": "DUP2"
    },
    "1803": {
      "op": "AND"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1806": {
      "op": "DUP4"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "PUSH3",
      "path": "84",
      "value": "0x10000"
    },
    "1813": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1814": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "SWAP3",
      "path": "84"
    },
    "1815": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "DIV",
      "path": "84"
    },
    "1816": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1817": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "SWAP2",
      "path": "84"
    },
    "1818": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "AND",
      "path": "84"
    },
    "1819": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3285
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1820": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3309
      ],
      "op": "PUSH4",
      "path": "84",
      "value": "0x29965A1D"
    },
    "1825": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3309
      ],
      "op": "SWAP1",
      "path": "84"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3277,
        3363
      ],
      "op": "PUSH2",
      "path": "84",
      "value": "0x601"
    },
    "1832": {
      "op": "JUMP"
    },
    "1833": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1310,
        1473
      ],
      "op": "JUMPDEST",
      "path": "197"
    },
    "1834": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1435
      ],
      "op": "PUSH1",
      "path": "197",
      "statement": 16,
      "value": "0x0"
    },
    "1836": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "SWAP2",
      "path": "197"
    },
    "1837": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "DUP3",
      "path": "197"
    },
    "1838": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "1839": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x20"
    },
    "1841": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "DUP3",
      "path": "197"
    },
    "1842": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "DUP2",
      "path": "197"
    },
    "1843": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "1844": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x40"
    },
    "1846": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "DUP1",
      "path": "197"
    },
    "1847": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "DUP5",
      "path": "197"
    },
    "1848": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1450
      ],
      "op": "KECCAK256",
      "path": "197"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "SWAP1",
      "path": "197"
    },
    "1858": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "SWAP4",
      "path": "197"
    },
    "1859": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "AND",
      "path": "197"
    },
    "1860": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "DUP5",
      "path": "197"
    },
    "1861": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "1862": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "SWAP2",
      "path": "197"
    },
    "1863": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "SWAP1",
      "path": "197"
    },
    "1864": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "MSTORE",
      "path": "197"
    },
    "1865": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "SWAP1",
      "path": "197"
    },
    "1866": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1459
      ],
      "op": "KECCAK256",
      "path": "197"
    },
    "1867": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1466
      ],
      "op": "DUP1",
      "path": "197"
    },
    "1868": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1466
      ],
      "op": "SLOAD",
      "path": "197"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1871": {
      "op": "NOT"
    },
    "1872": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1466
      ],
      "op": "AND",
      "path": "197"
    },
    "1873": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1462,
        1466
      ],
      "op": "PUSH1",
      "path": "197",
      "value": "0x1"
    },
    "1875": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1466
      ],
      "op": "OR",
      "path": "197"
    },
    "1876": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1466
      ],
      "op": "SWAP1",
      "path": "197"
    },
    "1877": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1415,
        1466
      ],
      "op": "SSTORE",
      "path": "197"
    },
    "1878": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "jump": "o",
      "offset": [
        1310,
        1473
      ],
      "op": "JUMP",
      "path": "197"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1882": {
      "op": "DUP1"
    },
    "1883": {
      "op": "DUP4"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1886": {
      "op": "DUP5"
    },
    "1887": {
      "op": "ADD"
    },
    "1888": {
      "op": "SLT"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1892": {
      "op": "JUMPI"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1895": {
      "op": "DUP1"
    },
    "1896": {
      "op": "REVERT"
    },
    "1897": {
      "op": "JUMPDEST"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "op": "DUP2"
    },
    "1900": {
      "op": "CALLDATALOAD"
    },
    "1901": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1910": {
      "op": "DUP2"
    },
    "1911": {
      "op": "GT"
    },
    "1912": {
      "op": "ISZERO"
    },
    "1913": {
      "op": "PUSH2",
      "value": "0x781"
    },
    "1916": {
      "op": "JUMPI"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1919": {
      "op": "DUP1"
    },
    "1920": {
      "op": "REVERT"
    },
    "1921": {
      "op": "JUMPDEST"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1924": {
      "op": "DUP4"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "SWAP2"
    },
    "1927": {
      "op": "POP"
    },
    "1928": {
      "op": "DUP4"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1931": {
      "op": "DUP3"
    },
    "1932": {
      "op": "DUP6"
    },
    "1933": {
      "op": "ADD"
    },
    "1934": {
      "op": "ADD"
    },
    "1935": {
      "op": "GT"
    },
    "1936": {
      "op": "ISZERO"
    },
    "1937": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "1940": {
      "op": "JUMPI"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1943": {
      "op": "DUP1"
    },
    "1944": {
      "op": "REVERT"
    },
    "1945": {
      "op": "JUMPDEST"
    },
    "1946": {
      "op": "SWAP3"
    },
    "1947": {
      "op": "POP"
    },
    "1948": {
      "op": "SWAP3"
    },
    "1949": {
      "op": "SWAP1"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "jump": "o",
      "op": "JUMP"
    },
    "1952": {
      "op": "JUMPDEST"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1955": {
      "op": "DUP3"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1958": {
      "op": "DUP4"
    },
    "1959": {
      "op": "ADD"
    },
    "1960": {
      "op": "SLT"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "1964": {
      "op": "JUMPI"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1967": {
      "op": "DUP1"
    },
    "1968": {
      "op": "REVERT"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "DUP2"
    },
    "1971": {
      "op": "CALLDATALOAD"
    },
    "1972": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1981": {
      "op": "DUP1"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "GT"
    },
    "1984": {
      "op": "ISZERO"
    },
    "1985": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "1988": {
      "op": "JUMPI"
    },
    "1989": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "1995": {
      "jump": "i",
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1999": {
      "op": "MLOAD"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2002": {
      "op": "DUP4"
    },
    "2003": {
      "op": "ADD"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2006": {
      "op": "NOT"
    },
    "2007": {
      "op": "SWAP1"
    },
    "2008": {
      "op": "DUP2"
    },
    "2009": {
      "op": "AND"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "AND"
    },
    "2014": {
      "op": "DUP2"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "SWAP1"
    },
    "2017": {
      "op": "DUP3"
    },
    "2018": {
      "op": "DUP3"
    },
    "2019": {
      "op": "GT"
    },
    "2020": {
      "op": "DUP2"
    },
    "2021": {
      "op": "DUP4"
    },
    "2022": {
      "op": "LT"
    },
    "2023": {
      "op": "OR"
    },
    "2024": {
      "op": "ISZERO"
    },
    "2025": {
      "op": "PUSH2",
      "value": "0x7F4"
    },
    "2028": {
      "op": "JUMPI"
    },
    "2029": {
      "op": "PUSH2",
      "value": "0x7F4"
    },
    "2032": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2035": {
      "jump": "i",
      "op": "JUMP"
    },
    "2036": {
      "op": "JUMPDEST"
    },
    "2037": {
      "op": "DUP2"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "DUP4"
    },
    "2042": {
      "op": "DUP2"
    },
    "2043": {
      "op": "MSTORE"
    },
    "2044": {
      "op": "DUP7"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2047": {
      "op": "DUP6"
    },
    "2048": {
      "op": "DUP9"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "GT"
    },
    "2052": {
      "op": "ISZERO"
    },
    "2053": {
      "op": "PUSH2",
      "value": "0x80D"
    },
    "2056": {
      "op": "JUMPI"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2059": {
      "op": "DUP1"
    },
    "2060": {
      "op": "REVERT"
    },
    "2061": {
      "op": "JUMPDEST"
    },
    "2062": {
      "op": "DUP4"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2065": {
      "op": "DUP8"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2069": {
      "op": "DUP4"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "op": "CALLDATACOPY"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2076": {
      "op": "DUP6"
    },
    "2077": {
      "op": "DUP4"
    },
    "2078": {
      "op": "ADD"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "op": "MSTORE"
    },
    "2081": {
      "op": "DUP1"
    },
    "2082": {
      "op": "SWAP5"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "op": "POP"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "op": "POP"
    },
    "2088": {
      "op": "SWAP3"
    },
    "2089": {
      "op": "SWAP2"
    },
    "2090": {
      "op": "POP"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "jump": "o",
      "op": "JUMP"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2098": {
      "op": "DUP3"
    },
    "2099": {
      "op": "DUP5"
    },
    "2100": {
      "op": "SUB"
    },
    "2101": {
      "op": "SLT"
    },
    "2102": {
      "op": "ISZERO"
    },
    "2103": {
      "op": "PUSH2",
      "value": "0x83F"
    },
    "2106": {
      "op": "JUMPI"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2109": {
      "op": "DUP1"
    },
    "2110": {
      "op": "REVERT"
    },
    "2111": {
      "op": "JUMPDEST"
    },
    "2112": {
      "op": "DUP2"
    },
    "2113": {
      "op": "CALLDATALOAD"
    },
    "2114": {
      "op": "PUSH2",
      "value": "0x376"
    },
    "2117": {
      "op": "DUP2"
    },
    "2118": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2121": {
      "jump": "i",
      "op": "JUMP"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "DUP1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2128": {
      "op": "DUP1"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2131": {
      "op": "DUP1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2134": {
      "op": "DUP1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2137": {
      "op": "DUP10"
    },
    "2138": {
      "op": "DUP12"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "op": "SLT"
    },
    "2141": {
      "op": "ISZERO"
    },
    "2142": {
      "op": "PUSH2",
      "value": "0x866"
    },
    "2145": {
      "op": "JUMPI"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2148": {
      "op": "DUP1"
    },
    "2149": {
      "op": "REVERT"
    },
    "2150": {
      "op": "JUMPDEST"
    },
    "2151": {
      "op": "DUP9"
    },
    "2152": {
      "op": "CALLDATALOAD"
    },
    "2153": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2156": {
      "op": "DUP2"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2160": {
      "jump": "i",
      "op": "JUMP"
    },
    "2161": {
      "op": "JUMPDEST"
    },
    "2162": {
      "op": "SWAP8"
    },
    "2163": {
      "op": "POP"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2166": {
      "op": "DUP10"
    },
    "2167": {
      "op": "ADD"
    },
    "2168": {
      "op": "CALLDATALOAD"
    },
    "2169": {
      "op": "PUSH2",
      "value": "0x881"
    },
    "2172": {
      "op": "DUP2"
    },
    "2173": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2176": {
      "jump": "i",
      "op": "JUMP"
    },
    "2177": {
      "op": "JUMPDEST"
    },
    "2178": {
      "op": "SWAP7"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2182": {
      "op": "DUP10"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "op": "CALLDATALOAD"
    },
    "2185": {
      "op": "PUSH2",
      "value": "0x891"
    },
    "2188": {
      "op": "DUP2"
    },
    "2189": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2192": {
      "jump": "i",
      "op": "JUMP"
    },
    "2193": {
      "op": "JUMPDEST"
    },
    "2194": {
      "op": "SWAP6"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2198": {
      "op": "DUP10"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "op": "CALLDATALOAD"
    },
    "2201": {
      "op": "SWAP5"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2205": {
      "op": "DUP10"
    },
    "2206": {
      "op": "ADD"
    },
    "2207": {
      "op": "CALLDATALOAD"
    },
    "2208": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2217": {
      "op": "DUP1"
    },
    "2218": {
      "op": "DUP3"
    },
    "2219": {
      "op": "GT"
    },
    "2220": {
      "op": "ISZERO"
    },
    "2221": {
      "op": "PUSH2",
      "value": "0x8B5"
    },
    "2224": {
      "op": "JUMPI"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2227": {
      "op": "DUP1"
    },
    "2228": {
      "op": "REVERT"
    },
    "2229": {
      "op": "JUMPDEST"
    },
    "2230": {
      "op": "PUSH2",
      "value": "0x8C1"
    },
    "2233": {
      "op": "DUP13"
    },
    "2234": {
      "op": "DUP4"
    },
    "2235": {
      "op": "DUP14"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "2240": {
      "jump": "i",
      "op": "JUMP"
    },
    "2241": {
      "op": "JUMPDEST"
    },
    "2242": {
      "op": "SWAP1"
    },
    "2243": {
      "op": "SWAP7"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "SWAP5"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2249": {
      "op": "DUP12"
    },
    "2250": {
      "op": "ADD"
    },
    "2251": {
      "op": "CALLDATALOAD"
    },
    "2252": {
      "op": "SWAP2"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "DUP1"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "GT"
    },
    "2257": {
      "op": "ISZERO"
    },
    "2258": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2261": {
      "op": "JUMPI"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2264": {
      "op": "DUP1"
    },
    "2265": {
      "op": "REVERT"
    },
    "2266": {
      "op": "JUMPDEST"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x8E7"
    },
    "2271": {
      "op": "DUP12"
    },
    "2272": {
      "op": "DUP3"
    },
    "2273": {
      "op": "DUP13"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "2278": {
      "jump": "i",
      "op": "JUMP"
    },
    "2279": {
      "op": "JUMPDEST"
    },
    "2280": {
      "op": "SWAP10"
    },
    "2281": {
      "op": "SWAP13"
    },
    "2282": {
      "op": "SWAP9"
    },
    "2283": {
      "op": "SWAP12"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "SWAP7"
    },
    "2286": {
      "op": "SWAP10"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "op": "SWAP5"
    },
    "2289": {
      "op": "SWAP8"
    },
    "2290": {
      "op": "SWAP4"
    },
    "2291": {
      "op": "SWAP7"
    },
    "2292": {
      "op": "SWAP3"
    },
    "2293": {
      "op": "SWAP6"
    },
    "2294": {
      "op": "SWAP5"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "jump": "o",
      "op": "JUMP"
    },
    "2299": {
      "op": "JUMPDEST"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2304": {
      "op": "DUP3"
    },
    "2305": {
      "op": "DUP5"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "op": "SLT"
    },
    "2308": {
      "op": "ISZERO"
    },
    "2309": {
      "op": "PUSH2",
      "value": "0x90D"
    },
    "2312": {
      "op": "JUMPI"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2315": {
      "op": "DUP1"
    },
    "2316": {
      "op": "REVERT"
    },
    "2317": {
      "op": "JUMPDEST"
    },
    "2318": {
      "op": "DUP2"
    },
    "2319": {
      "op": "CALLDATALOAD"
    },
    "2320": {
      "op": "DUP1"
    },
    "2321": {
      "op": "ISZERO"
    },
    "2322": {
      "op": "ISZERO"
    },
    "2323": {
      "op": "DUP2"
    },
    "2324": {
      "op": "EQ"
    },
    "2325": {
      "op": "PUSH2",
      "value": "0x376"
    },
    "2328": {
      "op": "JUMPI"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2331": {
      "op": "DUP1"
    },
    "2332": {
      "op": "REVERT"
    },
    "2333": {
      "op": "JUMPDEST"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2336": {
      "op": "DUP1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2339": {
      "op": "DUP4"
    },
    "2340": {
      "op": "DUP6"
    },
    "2341": {
      "op": "SUB"
    },
    "2342": {
      "op": "SLT"
    },
    "2343": {
      "op": "ISZERO"
    },
    "2344": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2347": {
      "op": "JUMPI"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2350": {
      "op": "DUP1"
    },
    "2351": {
      "op": "REVERT"
    },
    "2352": {
      "op": "JUMPDEST"
    },
    "2353": {
      "op": "DUP3"
    },
    "2354": {
      "op": "CALLDATALOAD"
    },
    "2355": {
      "op": "SWAP2"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2359": {
      "op": "DUP4"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "CALLDATALOAD"
    },
    "2362": {
      "op": "PUSH2",
      "value": "0x942"
    },
    "2365": {
      "op": "DUP2"
    },
    "2366": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2369": {
      "jump": "i",
      "op": "JUMP"
    },
    "2370": {
      "op": "JUMPDEST"
    },
    "2371": {
      "op": "DUP1"
    },
    "2372": {
      "op": "SWAP2"
    },
    "2373": {
      "op": "POP"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "op": "SWAP3"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "op": "SWAP3"
    },
    "2378": {
      "op": "SWAP1"
    },
    "2379": {
      "op": "POP"
    },
    "2380": {
      "jump": "o",
      "op": "JUMP"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2384": {
      "op": "DUP1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2387": {
      "op": "DUP1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2390": {
      "op": "DUP6"
    },
    "2391": {
      "op": "DUP8"
    },
    "2392": {
      "op": "SUB"
    },
    "2393": {
      "op": "SLT"
    },
    "2394": {
      "op": "ISZERO"
    },
    "2395": {
      "op": "PUSH2",
      "value": "0x963"
    },
    "2398": {
      "op": "JUMPI"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2401": {
      "op": "DUP1"
    },
    "2402": {
      "op": "REVERT"
    },
    "2403": {
      "op": "JUMPDEST"
    },
    "2404": {
      "op": "DUP5"
    },
    "2405": {
      "op": "CALLDATALOAD"
    },
    "2406": {
      "op": "PUSH2",
      "value": "0x96E"
    },
    "2409": {
      "op": "DUP2"
    },
    "2410": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2413": {
      "jump": "i",
      "op": "JUMP"
    },
    "2414": {
      "op": "JUMPDEST"
    },
    "2415": {
      "op": "SWAP4"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "DUP6"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "CALLDATALOAD"
    },
    "2422": {
      "op": "PUSH2",
      "value": "0x97E"
    },
    "2425": {
      "op": "DUP2"
    },
    "2426": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2429": {
      "jump": "i",
      "op": "JUMP"
    },
    "2430": {
      "op": "JUMPDEST"
    },
    "2431": {
      "op": "SWAP3"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2435": {
      "op": "DUP6"
    },
    "2436": {
      "op": "ADD"
    },
    "2437": {
      "op": "CALLDATALOAD"
    },
    "2438": {
      "op": "SWAP2"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2442": {
      "op": "DUP6"
    },
    "2443": {
      "op": "ADD"
    },
    "2444": {
      "op": "CALLDATALOAD"
    },
    "2445": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2454": {
      "op": "DUP2"
    },
    "2455": {
      "op": "GT"
    },
    "2456": {
      "op": "ISZERO"
    },
    "2457": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2460": {
      "op": "JUMPI"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2463": {
      "op": "DUP1"
    },
    "2464": {
      "op": "REVERT"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "2469": {
      "op": "DUP8"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "DUP9"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x7A0"
    },
    "2476": {
      "jump": "i",
      "op": "JUMP"
    },
    "2477": {
      "op": "JUMPDEST"
    },
    "2478": {
      "op": "SWAP2"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "SWAP3"
    },
    "2482": {
      "op": "SWAP6"
    },
    "2483": {
      "op": "SWAP2"
    },
    "2484": {
      "op": "SWAP5"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "SWAP3"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "jump": "o",
      "op": "JUMP"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2492": {
      "op": "DUP1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2497": {
      "op": "DUP5"
    },
    "2498": {
      "op": "DUP7"
    },
    "2499": {
      "op": "SUB"
    },
    "2500": {
      "op": "SLT"
    },
    "2501": {
      "op": "ISZERO"
    },
    "2502": {
      "op": "PUSH2",
      "value": "0x9CE"
    },
    "2505": {
      "op": "JUMPI"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2508": {
      "op": "DUP1"
    },
    "2509": {
      "op": "REVERT"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "DUP4"
    },
    "2512": {
      "op": "CALLDATALOAD"
    },
    "2513": {
      "op": "PUSH2",
      "value": "0x9D9"
    },
    "2516": {
      "op": "DUP2"
    },
    "2517": {
      "op": "PUSH2",
      "value": "0xB7F"
    },
    "2520": {
      "jump": "i",
      "op": "JUMP"
    },
    "2521": {
      "op": "JUMPDEST"
    },
    "2522": {
      "op": "SWAP3"
    },
    "2523": {
      "op": "POP"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2526": {
      "op": "DUP5"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "op": "CALLDATALOAD"
    },
    "2529": {
      "op": "SWAP2"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2533": {
      "op": "DUP5"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "op": "CALLDATALOAD"
    },
    "2536": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2545": {
      "op": "DUP2"
    },
    "2546": {
      "op": "GT"
    },
    "2547": {
      "op": "ISZERO"
    },
    "2548": {
      "op": "PUSH2",
      "value": "0x9FC"
    },
    "2551": {
      "op": "JUMPI"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2554": {
      "op": "DUP1"
    },
    "2555": {
      "op": "REVERT"
    },
    "2556": {
      "op": "JUMPDEST"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0xA08"
    },
    "2560": {
      "op": "DUP7"
    },
    "2561": {
      "op": "DUP3"
    },
    "2562": {
      "op": "DUP8"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "op": "PUSH2",
      "value": "0x7A0"
    },
    "2567": {
      "jump": "i",
      "op": "JUMP"
    },
    "2568": {
      "op": "JUMPDEST"
    },
    "2569": {
      "op": "SWAP2"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "op": "SWAP3"
    },
    "2573": {
      "op": "POP"
    },
    "2574": {
      "op": "SWAP3"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "SWAP3"
    },
    "2577": {
      "jump": "o",
      "op": "JUMP"
    },
    "2578": {
      "op": "JUMPDEST"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2583": {
      "op": "DUP3"
    },
    "2584": {
      "op": "DUP5"
    },
    "2585": {
      "op": "SUB"
    },
    "2586": {
      "op": "SLT"
    },
    "2587": {
      "op": "ISZERO"
    },
    "2588": {
      "op": "PUSH2",
      "value": "0xA24"
    },
    "2591": {
      "op": "JUMPI"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2594": {
      "op": "DUP1"
    },
    "2595": {
      "op": "REVERT"
    },
    "2596": {
      "op": "JUMPDEST"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "op": "MLOAD"
    },
    "2599": {
      "op": "SWAP2"
    },
    "2600": {
      "op": "SWAP1"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "jump": "o",
      "op": "JUMP"
    },
    "2603": {
      "op": "JUMPDEST"
    },
    "2604": {
      "op": "DUP2"
    },
    "2605": {
      "op": "DUP4"
    },
    "2606": {
      "op": "MSTORE"
    },
    "2607": {
      "op": "DUP2"
    },
    "2608": {
      "op": "DUP2"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2611": {
      "op": "DUP6"
    },
    "2612": {
      "op": "ADD"
    },
    "2613": {
      "op": "CALLDATACOPY"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2617": {
      "op": "DUP3"
    },
    "2618": {
      "op": "DUP3"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2622": {
      "op": "SWAP1"
    },
    "2623": {
      "op": "DUP2"
    },
    "2624": {
      "op": "ADD"
    },
    "2625": {
      "op": "SWAP2"
    },
    "2626": {
      "op": "SWAP1"
    },
    "2627": {
      "op": "SWAP2"
    },
    "2628": {
      "op": "MSTORE"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2631": {
      "op": "SWAP1"
    },
    "2632": {
      "op": "SWAP2"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2636": {
      "op": "NOT"
    },
    "2637": {
      "op": "AND"
    },
    "2638": {
      "op": "SWAP1"
    },
    "2639": {
      "op": "SWAP2"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "ADD"
    },
    "2642": {
      "op": "SWAP1"
    },
    "2643": {
      "jump": "o",
      "op": "JUMP"
    },
    "2644": {
      "op": "JUMPDEST"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2647": {
      "op": "DUP2"
    },
    "2648": {
      "op": "MLOAD"
    },
    "2649": {
      "op": "DUP1"
    },
    "2650": {
      "op": "DUP5"
    },
    "2651": {
      "op": "MSTORE"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2654": {
      "op": "JUMPDEST"
    },
    "2655": {
      "op": "DUP2"
    },
    "2656": {
      "op": "DUP2"
    },
    "2657": {
      "op": "LT"
    },
    "2658": {
      "op": "ISZERO"
    },
    "2659": {
      "op": "PUSH2",
      "value": "0xA7A"
    },
    "2662": {
      "op": "JUMPI"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2665": {
      "op": "DUP2"
    },
    "2666": {
      "op": "DUP6"
    },
    "2667": {
      "op": "ADD"
    },
    "2668": {
      "op": "DUP2"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "op": "MLOAD"
    },
    "2671": {
      "op": "DUP7"
    },
    "2672": {
      "op": "DUP4"
    },
    "2673": {
      "op": "ADD"
    },
    "2674": {
      "op": "DUP3"
    },
    "2675": {
      "op": "ADD"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "op": "PUSH2",
      "value": "0xA5E"
    },
    "2681": {
      "op": "JUMP"
    },
    "2682": {
      "op": "JUMPDEST"
    },
    "2683": {
      "op": "DUP2"
    },
    "2684": {
      "op": "DUP2"
    },
    "2685": {
      "op": "GT"
    },
    "2686": {
      "op": "ISZERO"
    },
    "2687": {
      "op": "PUSH2",
      "value": "0xA8C"
    },
    "2690": {
      "op": "JUMPI"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2695": {
      "op": "DUP4"
    },
    "2696": {
      "op": "DUP8"
    },
    "2697": {
      "op": "ADD"
    },
    "2698": {
      "op": "ADD"
    },
    "2699": {
      "op": "MSTORE"
    },
    "2700": {
      "op": "JUMPDEST"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2704": {
      "op": "ADD"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2707": {
      "op": "NOT"
    },
    "2708": {
      "op": "AND"
    },
    "2709": {
      "op": "SWAP3"
    },
    "2710": {
      "op": "SWAP1"
    },
    "2711": {
      "op": "SWAP3"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2715": {
      "op": "ADD"
    },
    "2716": {
      "op": "SWAP3"
    },
    "2717": {
      "op": "SWAP2"
    },
    "2718": {
      "op": "POP"
    },
    "2719": {
      "op": "POP"
    },
    "2720": {
      "jump": "o",
      "op": "JUMP"
    },
    "2721": {
      "op": "JUMPDEST"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2728": {
      "op": "SHL"
    },
    "2729": {
      "op": "SUB"
    },
    "2730": {
      "op": "DUP13"
    },
    "2731": {
      "op": "DUP2"
    },
    "2732": {
      "op": "AND"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "MSTORE"
    },
    "2735": {
      "op": "DUP12"
    },
    "2736": {
      "op": "DUP2"
    },
    "2737": {
      "op": "AND"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2740": {
      "op": "DUP4"
    },
    "2741": {
      "op": "ADD"
    },
    "2742": {
      "op": "MSTORE"
    },
    "2743": {
      "op": "DUP11"
    },
    "2744": {
      "op": "DUP2"
    },
    "2745": {
      "op": "AND"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2748": {
      "op": "DUP4"
    },
    "2749": {
      "op": "ADD"
    },
    "2750": {
      "op": "MSTORE"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2753": {
      "op": "DUP3"
    },
    "2754": {
      "op": "ADD"
    },
    "2755": {
      "op": "DUP11"
    },
    "2756": {
      "op": "SWAP1"
    },
    "2757": {
      "op": "MSTORE"
    },
    "2758": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2763": {
      "op": "DUP4"
    },
    "2764": {
      "op": "ADD"
    },
    "2765": {
      "op": "DUP2"
    },
    "2766": {
      "op": "SWAP1"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2770": {
      "op": "SWAP2"
    },
    "2771": {
      "op": "PUSH2",
      "value": "0xADF"
    },
    "2774": {
      "op": "DUP5"
    },
    "2775": {
      "op": "DUP4"
    },
    "2776": {
      "op": "ADD"
    },
    "2777": {
      "op": "DUP12"
    },
    "2778": {
      "op": "DUP14"
    },
    "2779": {
      "op": "PUSH2",
      "value": "0xA2B"
    },
    "2782": {
      "jump": "i",
      "op": "JUMP"
    },
    "2783": {
      "op": "JUMPDEST"
    },
    "2784": {
      "op": "SWAP2"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "DUP4"
    },
    "2787": {
      "op": "DUP3"
    },
    "2788": {
      "op": "SUB"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2791": {
      "op": "DUP6"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH2",
      "value": "0xAF4"
    },
    "2797": {
      "op": "DUP3"
    },
    "2798": {
      "op": "DUP10"
    },
    "2799": {
      "op": "DUP12"
    },
    "2800": {
      "op": "PUSH2",
      "value": "0xA2B"
    },
    "2803": {
      "jump": "i",
      "op": "JUMP"
    },
    "2804": {
      "op": "JUMPDEST"
    },
    "2805": {
      "op": "SWAP7"
    },
    "2806": {
      "op": "AND"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2809": {
      "op": "DUP5"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "op": "MSTORE"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "op": "POP"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2816": {
      "op": "DUP2"
    },
    "2817": {
      "op": "ADD"
    },
    "2818": {
      "op": "SWAP3"
    },
    "2819": {
      "op": "SWAP1"
    },
    "2820": {
      "op": "SWAP3"
    },
    "2821": {
      "op": "MSTORE"
    },
    "2822": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2825": {
      "op": "SWAP1"
    },
    "2826": {
      "op": "SWAP2"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "SWAP9"
    },
    "2830": {
      "op": "SWAP8"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "op": "POP"
    },
    "2836": {
      "op": "POP"
    },
    "2837": {
      "op": "POP"
    },
    "2838": {
      "op": "POP"
    },
    "2839": {
      "jump": "o",
      "op": "JUMP"
    },
    "2840": {
      "op": "JUMPDEST"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2843": {
      "op": "DUP1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "op": "SUB"
    },
    "2848": {
      "op": "DUP5"
    },
    "2849": {
      "op": "AND"
    },
    "2850": {
      "op": "DUP2"
    },
    "2851": {
      "op": "MSTORE"
    },
    "2852": {
      "op": "DUP3"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2855": {
      "op": "DUP3"
    },
    "2856": {
      "op": "ADD"
    },
    "2857": {
      "op": "MSTORE"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2862": {
      "op": "DUP3"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "MSTORE"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2867": {
      "op": "PUSH2",
      "value": "0xB3F"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2872": {
      "op": "DUP4"
    },
    "2873": {
      "op": "ADD"
    },
    "2874": {
      "op": "DUP5"
    },
    "2875": {
      "op": "PUSH2",
      "value": "0xA54"
    },
    "2878": {
      "jump": "i",
      "op": "JUMP"
    },
    "2879": {
      "op": "JUMPDEST"
    },
    "2880": {
      "op": "SWAP6"
    },
    "2881": {
      "op": "SWAP5"
    },
    "2882": {
      "op": "POP"
    },
    "2883": {
      "op": "POP"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "op": "POP"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "jump": "o",
      "op": "JUMP"
    },
    "2888": {
      "op": "JUMPDEST"
    },
    "2889": {
      "op": "DUP3"
    },
    "2890": {
      "op": "DUP2"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2896": {
      "op": "DUP3"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2901": {
      "op": "PUSH2",
      "value": "0xB61"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2906": {
      "op": "DUP4"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "op": "DUP5"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0xA54"
    },
    "2912": {
      "jump": "i",
      "op": "JUMP"
    },
    "2913": {
      "op": "JUMPDEST"
    },
    "2914": {
      "op": "SWAP5"
    },
    "2915": {
      "op": "SWAP4"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "jump": "o",
      "op": "JUMP"
    },
    "2921": {
      "op": "JUMPDEST"
    },
    "2922": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2932": {
      "op": "MSTORE"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2937": {
      "op": "MSTORE"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2942": {
      "op": "REVERT"
    },
    "2943": {
      "op": "JUMPDEST"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "op": "SUB"
    },
    "2952": {
      "op": "DUP2"
    },
    "2953": {
      "op": "AND"
    },
    "2954": {
      "op": "DUP2"
    },
    "2955": {
      "op": "EQ"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0xB94"
    },
    "2959": {
      "op": "JUMPI"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "DUP1"
    },
    "2963": {
      "op": "REVERT"
    },
    "2964": {
      "op": "JUMPDEST"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "dca99bdf30c46e50bcdc17f817a402b767d4097e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC777/IERC777.sol\";\nimport \"../token/ERC777/IERC777Sender.sol\";\nimport \"../token/ERC777/IERC777Recipient.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/introspection/IERC1820Registry.sol\";\nimport \"../utils/introspection/ERC1820Implementer.sol\";\n\ncontract ERC777SenderRecipientMock is Context, IERC777Sender, IERC777Recipient, ERC1820Implementer {\n    event TokensToSendCalled(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData,\n        address token,\n        uint256 fromBalance,\n        uint256 toBalance\n    );\n\n    event TokensReceivedCalled(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData,\n        address token,\n        uint256 fromBalance,\n        uint256 toBalance\n    );\n\n    // Emitted in ERC777Mock. Here for easier decoding\n    event BeforeTokenTransfer();\n\n    bool private _shouldRevertSend;\n    bool private _shouldRevertReceive;\n\n    IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external override {\n        if (_shouldRevertSend) {\n            revert();\n        }\n\n        IERC777 token = IERC777(_msgSender());\n\n        uint256 fromBalance = token.balanceOf(from);\n        // when called due to burn, to will be the zero address, which will have a balance of 0\n        uint256 toBalance = token.balanceOf(to);\n\n        emit TokensToSendCalled(\n            operator,\n            from,\n            to,\n            amount,\n            userData,\n            operatorData,\n            address(token),\n            fromBalance,\n            toBalance\n        );\n    }\n\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external override {\n        if (_shouldRevertReceive) {\n            revert();\n        }\n\n        IERC777 token = IERC777(_msgSender());\n\n        uint256 fromBalance = token.balanceOf(from);\n        // when called due to burn, to will be the zero address, which will have a balance of 0\n        uint256 toBalance = token.balanceOf(to);\n\n        emit TokensReceivedCalled(\n            operator,\n            from,\n            to,\n            amount,\n            userData,\n            operatorData,\n            address(token),\n            fromBalance,\n            toBalance\n        );\n    }\n\n    function senderFor(address account) public {\n        _registerInterfaceForAddress(_TOKENS_SENDER_INTERFACE_HASH, account);\n\n        address self = address(this);\n        if (account == self) {\n            registerSender(self);\n        }\n    }\n\n    function registerSender(address sender) public {\n        _erc1820.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, sender);\n    }\n\n    function recipientFor(address account) public {\n        _registerInterfaceForAddress(_TOKENS_RECIPIENT_INTERFACE_HASH, account);\n\n        address self = address(this);\n        if (account == self) {\n            registerRecipient(self);\n        }\n    }\n\n    function registerRecipient(address recipient) public {\n        _erc1820.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, recipient);\n    }\n\n    function setShouldRevertSend(bool shouldRevert) public {\n        _shouldRevertSend = shouldRevert;\n    }\n\n    function setShouldRevertReceive(bool shouldRevert) public {\n        _shouldRevertReceive = shouldRevert;\n    }\n\n    function send(\n        IERC777 token,\n        address to,\n        uint256 amount,\n        bytes memory data\n    ) public {\n        // This is 777's send function, not the Solidity send function\n        token.send(to, amount, data); // solhint-disable-line check-send-result\n    }\n\n    function burn(\n        IERC777 token,\n        uint256 amount,\n        bytes memory data\n    ) public {\n        token.burn(amount, data);\n    }\n}\n",
  "sourceMap": "329:4127:84:-:0;;;1113:96;;;-1:-1:-1;;;;;;1113:96:84;;;;;329:4127;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/ERC777SenderRecipientMock.sol",
  "type": "contract"
}