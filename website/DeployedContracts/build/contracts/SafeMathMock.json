{
  "abi": [
    {
      "inputs": [],
      "name": "addMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "divWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doMul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "doSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "modMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "modWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mulMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subMemoryCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mem",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "subWithMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryAdd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryDiv",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "tryMul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "trySub",
      "outputs": [
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "108": "contracts/OpenZepellin/contracts/mocks/SafeMathMock.sol",
    "203": "contracts/OpenZepellin/contracts/utils/math/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/SafeMathMock.sol",
    "exportedSymbols": {
      "SafeMath": [
        27449
      ],
      "SafeMathMock": [
        13200
      ]
    },
    "id": 13201,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12816,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:108"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/math/SafeMath.sol",
        "file": "../utils/math/SafeMath.sol",
        "id": 12817,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13201,
        "sourceUnit": 27450,
        "src": "58:36:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13200,
        "linearizedBaseContracts": [
          13200
        ],
        "name": "SafeMathMock",
        "nameLocation": "105:12:108",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12834,
              "nodeType": "Block",
              "src": "209:45:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12830,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12819,
                        "src": "242:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12831,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12821,
                        "src": "245:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12828,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "226:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27172,
                      "src": "226:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 12832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "226:21:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 12827,
                  "id": 12833,
                  "nodeType": "Return",
                  "src": "219:28:108"
                }
              ]
            },
            "functionSelector": "884557bf",
            "id": 12835,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryAdd",
            "nameLocation": "133:6:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12819,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "148:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12835,
                  "src": "140:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12821,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "159:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12835,
                  "src": "151:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "139:22:108"
            },
            "returnParameters": {
              "id": 12827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12824,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "188:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12835,
                  "src": "183:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12826,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "202:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12835,
                  "src": "194:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:26:108"
            },
            "scope": 13200,
            "src": "124:130:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12852,
              "nodeType": "Block",
              "src": "345:45:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12848,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12837,
                        "src": "378:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12849,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12839,
                        "src": "381:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12846,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "362:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trySub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27200,
                      "src": "362:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 12850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:21:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 12845,
                  "id": 12851,
                  "nodeType": "Return",
                  "src": "355:28:108"
                }
              ]
            },
            "functionSelector": "a29962b1",
            "id": 12853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trySub",
            "nameLocation": "269:6:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12837,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "284:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "276:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12839,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "295:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "287:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:22:108"
            },
            "returnParameters": {
              "id": 12845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12842,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "324:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "319:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12841,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12844,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "338:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12853,
                  "src": "330:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "318:26:108"
            },
            "scope": 13200,
            "src": "260:130:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12870,
              "nodeType": "Block",
              "src": "481:45:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12866,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12855,
                        "src": "514:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12867,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12857,
                        "src": "517:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12864,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "498:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27242,
                      "src": "498:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 12868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:21:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 12863,
                  "id": 12869,
                  "nodeType": "Return",
                  "src": "491:28:108"
                }
              ]
            },
            "functionSelector": "6281efa4",
            "id": 12871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMul",
            "nameLocation": "405:6:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12855,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "420:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12871,
                  "src": "412:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12857,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "431:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12871,
                  "src": "423:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:22:108"
            },
            "returnParameters": {
              "id": 12863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12860,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "460:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12871,
                  "src": "455:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12859,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12862,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "474:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12871,
                  "src": "466:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:26:108"
            },
            "scope": 13200,
            "src": "396:130:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12888,
              "nodeType": "Block",
              "src": "617:45:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12884,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12873,
                        "src": "650:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12885,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12875,
                        "src": "653:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12882,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "634:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27270,
                      "src": "634:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 12886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:21:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 12881,
                  "id": 12887,
                  "nodeType": "Return",
                  "src": "627:28:108"
                }
              ]
            },
            "functionSelector": "736ecb18",
            "id": 12889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryDiv",
            "nameLocation": "541:6:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12873,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "556:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12889,
                  "src": "548:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12875,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "567:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12889,
                  "src": "559:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:22:108"
            },
            "returnParameters": {
              "id": 12881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12878,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "596:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12889,
                  "src": "591:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12880,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "610:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12889,
                  "src": "602:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:26:108"
            },
            "scope": 13200,
            "src": "532:130:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12906,
              "nodeType": "Block",
              "src": "753:45:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12902,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12891,
                        "src": "786:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12903,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12893,
                        "src": "789:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12900,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "770:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryMod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27298,
                      "src": "770:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 12904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:21:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 12899,
                  "id": 12905,
                  "nodeType": "Return",
                  "src": "763:28:108"
                }
              ]
            },
            "functionSelector": "38dc0867",
            "id": 12907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryMod",
            "nameLocation": "677:6:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12891,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "692:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12907,
                  "src": "684:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12893,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "703:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12907,
                  "src": "695:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:22:108"
            },
            "returnParameters": {
              "id": 12899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12896,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "732:4:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12907,
                  "src": "727:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12895,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12898,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "746:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12907,
                  "src": "738:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:26:108"
            },
            "scope": 13200,
            "src": "668:130:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12922,
              "nodeType": "Block",
              "src": "958:42:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12918,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12909,
                        "src": "988:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12919,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12911,
                        "src": "991:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12916,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "975:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27313,
                      "src": "975:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:18:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12915,
                  "id": 12921,
                  "nodeType": "Return",
                  "src": "968:25:108"
                }
              ]
            },
            "functionSelector": "dcc721d2",
            "id": 12923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAdd",
            "nameLocation": "900:5:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12909,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "914:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12923,
                  "src": "906:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12911,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "925:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12923,
                  "src": "917:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:22:108"
            },
            "returnParameters": {
              "id": 12915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12923,
                  "src": "949:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:9:108"
            },
            "scope": 13200,
            "src": "891:109:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12938,
              "nodeType": "Block",
              "src": "1073:42:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12934,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12925,
                        "src": "1103:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12935,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12927,
                        "src": "1106:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12932,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "1090:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27328,
                      "src": "1090:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:18:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12931,
                  "id": 12937,
                  "nodeType": "Return",
                  "src": "1083:25:108"
                }
              ]
            },
            "functionSelector": "6c7ac637",
            "id": 12939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doSub",
            "nameLocation": "1015:5:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12925,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1029:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1021:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12927,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1040:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1032:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:108"
            },
            "returnParameters": {
              "id": 12931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1064:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1063:9:108"
            },
            "scope": 13200,
            "src": "1006:109:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12954,
              "nodeType": "Block",
              "src": "1188:42:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12950,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12941,
                        "src": "1218:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12951,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12943,
                        "src": "1221:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12948,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "1205:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27343,
                      "src": "1205:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:18:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12947,
                  "id": 12953,
                  "nodeType": "Return",
                  "src": "1198:25:108"
                }
              ]
            },
            "functionSelector": "fb119198",
            "id": 12955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMul",
            "nameLocation": "1130:5:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12941,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1144:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12955,
                  "src": "1136:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12943,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1155:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12955,
                  "src": "1147:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1135:22:108"
            },
            "returnParameters": {
              "id": 12947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12955,
                  "src": "1179:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:9:108"
            },
            "scope": 13200,
            "src": "1121:109:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12970,
              "nodeType": "Block",
              "src": "1303:42:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12966,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12957,
                        "src": "1333:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12967,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12959,
                        "src": "1336:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12964,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "1320:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27358,
                      "src": "1320:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:18:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12963,
                  "id": 12969,
                  "nodeType": "Return",
                  "src": "1313:25:108"
                }
              ]
            },
            "functionSelector": "fc0ce503",
            "id": 12971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doDiv",
            "nameLocation": "1245:5:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12957,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1259:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12971,
                  "src": "1251:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12959,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1270:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12971,
                  "src": "1262:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1250:22:108"
            },
            "returnParameters": {
              "id": 12963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12971,
                  "src": "1294:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1293:9:108"
            },
            "scope": 13200,
            "src": "1236:109:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12986,
              "nodeType": "Block",
              "src": "1418:42:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12982,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12973,
                        "src": "1448:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12983,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12975,
                        "src": "1451:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12980,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "1435:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27373,
                      "src": "1435:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:18:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12979,
                  "id": 12985,
                  "nodeType": "Return",
                  "src": "1428:25:108"
                }
              ]
            },
            "functionSelector": "869f602f",
            "id": 12987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doMod",
            "nameLocation": "1360:5:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12973,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1374:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12987,
                  "src": "1366:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12975,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1385:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 12987,
                  "src": "1377:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:22:108"
            },
            "returnParameters": {
              "id": 12979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12987,
                  "src": "1409:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:9:108"
            },
            "scope": 13200,
            "src": "1351:109:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13005,
              "nodeType": "Block",
              "src": "1600:56:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13000,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12989,
                        "src": "1630:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13001,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12991,
                        "src": "1633:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13002,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12993,
                        "src": "1636:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 12998,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "1617:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 12999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27398,
                      "src": "1617:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 13003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:32:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12997,
                  "id": 13004,
                  "nodeType": "Return",
                  "src": "1610:39:108"
                }
              ]
            },
            "functionSelector": "9f5cec89",
            "id": 13006,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subWithMessage",
            "nameLocation": "1475:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12989,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1507:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13006,
                  "src": "1499:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12991,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1526:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13006,
                  "src": "1518:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12993,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1551:12:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13006,
                  "src": "1537:26:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12992,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:80:108"
            },
            "returnParameters": {
              "id": 12997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12996,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13006,
                  "src": "1591:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1590:9:108"
            },
            "scope": 13200,
            "src": "1466:190:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13024,
              "nodeType": "Block",
              "src": "1796:56:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13019,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13008,
                        "src": "1826:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13020,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13010,
                        "src": "1829:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13021,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13012,
                        "src": "1832:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 13017,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "1813:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 13018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27423,
                      "src": "1813:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 13022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:32:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13016,
                  "id": 13023,
                  "nodeType": "Return",
                  "src": "1806:39:108"
                }
              ]
            },
            "functionSelector": "3449b5fb",
            "id": 13025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divWithMessage",
            "nameLocation": "1671:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13008,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1703:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13025,
                  "src": "1695:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13010,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1722:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13025,
                  "src": "1714:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13012,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1747:12:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13025,
                  "src": "1733:26:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1685:80:108"
            },
            "returnParameters": {
              "id": 13016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13025,
                  "src": "1787:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:9:108"
            },
            "scope": 13200,
            "src": "1662:190:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13043,
              "nodeType": "Block",
              "src": "1992:56:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13038,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13027,
                        "src": "2022:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13039,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13029,
                        "src": "2025:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13040,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13031,
                        "src": "2028:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 13036,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27449,
                        "src": "2009:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 13037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27448,
                      "src": "2009:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 13041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:32:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13035,
                  "id": 13042,
                  "nodeType": "Return",
                  "src": "2002:39:108"
                }
              ]
            },
            "functionSelector": "a155bd62",
            "id": 13044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modWithMessage",
            "nameLocation": "1867:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13027,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1899:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13044,
                  "src": "1891:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13029,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1918:1:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13044,
                  "src": "1910:9:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13031,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "1943:12:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13044,
                  "src": "1929:26:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13030,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:80:108"
            },
            "returnParameters": {
              "id": 13035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13044,
                  "src": "1983:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1982:9:108"
            },
            "scope": 13200,
            "src": "1858:190:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13074,
              "nodeType": "Block",
              "src": "2114:255:108",
              "statements": [
                {
                  "assignments": [
                    13050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13050,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2132:6:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 13074,
                      "src": "2124:14:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2124:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13052,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 13051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2141:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2124:19:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2162:42:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2176:18:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2189:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2183:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:11:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2176:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13047,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2176:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13053,
                  "nodeType": "InlineAssembly",
                  "src": "2153:51:108"
                },
                {
                  "body": {
                    "id": 13071,
                    "nodeType": "Block",
                    "src": "2250:43:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2277:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 13068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2280:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13064,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27449,
                              "src": "2264:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 13066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27313,
                            "src": "2264:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 13069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2264:18:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13070,
                        "nodeType": "ExpressionStatement",
                        "src": "2264:18:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13058,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13055,
                      "src": "2233:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 13059,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13050,
                      "src": "2237:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2233:10:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13072,
                  "initializationExpression": {
                    "assignments": [
                      13055
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13055,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2226:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 13072,
                        "src": "2218:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2218:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 13057,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 13056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2230:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2218:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 13062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2245:3:108",
                      "subExpression": {
                        "id": 13061,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13055,
                        "src": "2247:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13063,
                    "nodeType": "ExpressionStatement",
                    "src": "2245:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "2213:80:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2311:52:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2325:28:108",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2342:4:108",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2336:5:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2336:11:108"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2349:3:108"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2332:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2332:21:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2325:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13047,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2325:3:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13047,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2349:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13073,
                  "nodeType": "InlineAssembly",
                  "src": "2302:61:108"
                }
              ]
            },
            "functionSelector": "fb24c860",
            "id": 13075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMemoryCheck",
            "nameLocation": "2063:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2077:2:108"
            },
            "returnParameters": {
              "id": 13048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13047,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2109:3:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13075,
                  "src": "2101:11:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2100:13:108"
            },
            "scope": 13200,
            "src": "2054:315:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13105,
              "nodeType": "Block",
              "src": "2435:255:108",
              "statements": [
                {
                  "assignments": [
                    13081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13081,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2453:6:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 13105,
                      "src": "2445:14:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13080,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2445:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13083,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 13082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2462:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2445:19:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2483:42:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2497:18:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2510:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2504:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2504:11:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2497:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13078,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2497:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13084,
                  "nodeType": "InlineAssembly",
                  "src": "2474:51:108"
                },
                {
                  "body": {
                    "id": 13102,
                    "nodeType": "Block",
                    "src": "2571:43:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2598:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 13099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2601:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13095,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27449,
                              "src": "2585:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 13097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27328,
                            "src": "2585:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 13100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2585:18:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13101,
                        "nodeType": "ExpressionStatement",
                        "src": "2585:18:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13089,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13086,
                      "src": "2554:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 13090,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13081,
                      "src": "2558:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2554:10:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13103,
                  "initializationExpression": {
                    "assignments": [
                      13086
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13086,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2547:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 13103,
                        "src": "2539:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2539:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 13088,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 13087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2551:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2539:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 13093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2566:3:108",
                      "subExpression": {
                        "id": 13092,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13086,
                        "src": "2568:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13094,
                    "nodeType": "ExpressionStatement",
                    "src": "2566:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "2534:80:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2632:52:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2646:28:108",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2663:4:108",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2657:5:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2657:11:108"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2670:3:108"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2653:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2653:21:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2646:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13078,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2646:3:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13078,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2670:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13104,
                  "nodeType": "InlineAssembly",
                  "src": "2623:61:108"
                }
              ]
            },
            "functionSelector": "fb999ded",
            "id": 13106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subMemoryCheck",
            "nameLocation": "2384:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:2:108"
            },
            "returnParameters": {
              "id": 13079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13078,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2430:3:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13106,
                  "src": "2422:11:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2422:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2421:13:108"
            },
            "scope": 13200,
            "src": "2375:315:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13136,
              "nodeType": "Block",
              "src": "2756:255:108",
              "statements": [
                {
                  "assignments": [
                    13112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13112,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2774:6:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 13136,
                      "src": "2766:14:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2766:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13114,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 13113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2783:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2766:19:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2804:42:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2818:18:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2831:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2825:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2825:11:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2818:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13109,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2818:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13115,
                  "nodeType": "InlineAssembly",
                  "src": "2795:51:108"
                },
                {
                  "body": {
                    "id": 13133,
                    "nodeType": "Block",
                    "src": "2892:43:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2919:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 13130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2922:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13126,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27449,
                              "src": "2906:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 13128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27343,
                            "src": "2906:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 13131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2906:18:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13132,
                        "nodeType": "ExpressionStatement",
                        "src": "2906:18:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13120,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13117,
                      "src": "2875:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 13121,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13112,
                      "src": "2879:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2875:10:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13134,
                  "initializationExpression": {
                    "assignments": [
                      13117
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13117,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2868:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 13134,
                        "src": "2860:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2860:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 13119,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 13118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2872:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2860:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 13124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2887:3:108",
                      "subExpression": {
                        "id": 13123,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13117,
                        "src": "2889:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13125,
                    "nodeType": "ExpressionStatement",
                    "src": "2887:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "2855:80:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2953:52:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2967:28:108",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2984:4:108",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2978:5:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2978:11:108"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "2991:3:108"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2974:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2974:21:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "2967:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13109,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2967:3:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13109,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2991:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13135,
                  "nodeType": "InlineAssembly",
                  "src": "2944:61:108"
                }
              ]
            },
            "functionSelector": "7e86d25c",
            "id": 13137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mulMemoryCheck",
            "nameLocation": "2705:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:108"
            },
            "returnParameters": {
              "id": 13110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13109,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "2751:3:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13137,
                  "src": "2743:11:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2742:13:108"
            },
            "scope": 13200,
            "src": "2696:315:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13167,
              "nodeType": "Block",
              "src": "3077:255:108",
              "statements": [
                {
                  "assignments": [
                    13143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13143,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3095:6:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 13167,
                      "src": "3087:14:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3087:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13145,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 13144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3104:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:19:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3125:42:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3139:18:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3152:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3146:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3146:11:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3139:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13140,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3139:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13146,
                  "nodeType": "InlineAssembly",
                  "src": "3116:51:108"
                },
                {
                  "body": {
                    "id": 13164,
                    "nodeType": "Block",
                    "src": "3213:43:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3240:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 13161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3243:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13157,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27449,
                              "src": "3227:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 13159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27358,
                            "src": "3227:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 13162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3227:18:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13163,
                        "nodeType": "ExpressionStatement",
                        "src": "3227:18:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13151,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13148,
                      "src": "3196:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 13152,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13143,
                      "src": "3200:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3196:10:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13165,
                  "initializationExpression": {
                    "assignments": [
                      13148
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13148,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3189:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 13165,
                        "src": "3181:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3181:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 13150,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 13149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3193:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3181:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 13155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3208:3:108",
                      "subExpression": {
                        "id": 13154,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13148,
                        "src": "3210:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13156,
                    "nodeType": "ExpressionStatement",
                    "src": "3208:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "3176:80:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3274:52:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3288:28:108",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3305:4:108",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3299:5:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3299:11:108"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3312:3:108"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3295:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3295:21:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3288:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13140,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3288:3:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13140,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3312:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13166,
                  "nodeType": "InlineAssembly",
                  "src": "3265:61:108"
                }
              ]
            },
            "functionSelector": "c460ae04",
            "id": 13168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divMemoryCheck",
            "nameLocation": "3026:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:2:108"
            },
            "returnParameters": {
              "id": 13141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13140,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "3072:3:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13168,
                  "src": "3064:11:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3064:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3063:13:108"
            },
            "scope": 13200,
            "src": "3017:315:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13198,
              "nodeType": "Block",
              "src": "3398:255:108",
              "statements": [
                {
                  "assignments": [
                    13174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13174,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3416:6:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 13198,
                      "src": "3408:14:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3408:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13176,
                  "initialValue": {
                    "hexValue": "3332",
                    "id": 13175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3425:2:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3408:19:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3446:42:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3460:18:108",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3473:4:108",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3467:5:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3467:11:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3460:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13171,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3460:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13177,
                  "nodeType": "InlineAssembly",
                  "src": "3437:51:108"
                },
                {
                  "body": {
                    "id": 13195,
                    "nodeType": "Block",
                    "src": "3534:43:108",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3561:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 13192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3564:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13188,
                              "name": "SafeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27449,
                              "src": "3548:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeMath_$27449_$",
                                "typeString": "type(library SafeMath)"
                              }
                            },
                            "id": 13190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27373,
                            "src": "3548:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 13193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3548:18:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13194,
                        "nodeType": "ExpressionStatement",
                        "src": "3548:18:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13182,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13179,
                      "src": "3517:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 13183,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13174,
                      "src": "3521:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3517:10:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13196,
                  "initializationExpression": {
                    "assignments": [
                      13179
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13179,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3510:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 13196,
                        "src": "3502:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3502:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 13181,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 13180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3514:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3502:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 13186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3529:3:108",
                      "subExpression": {
                        "id": 13185,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13179,
                        "src": "3531:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13187,
                    "nodeType": "ExpressionStatement",
                    "src": "3529:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "3497:80:108"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3595:52:108",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3609:28:108",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3626:4:108",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3620:5:108"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3620:11:108"
                            },
                            {
                              "name": "mem",
                              "nodeType": "YulIdentifier",
                              "src": "3633:3:108"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "3616:3:108"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3616:21:108"
                        },
                        "variableNames": [
                          {
                            "name": "mem",
                            "nodeType": "YulIdentifier",
                            "src": "3609:3:108"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 13171,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3609:3:108",
                      "valueSize": 1
                    },
                    {
                      "declaration": 13171,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3633:3:108",
                      "valueSize": 1
                    }
                  ],
                  "id": 13197,
                  "nodeType": "InlineAssembly",
                  "src": "3586:61:108"
                }
              ]
            },
            "functionSelector": "6f91e802",
            "id": 13199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modMemoryCheck",
            "nameLocation": "3347:14:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3361:2:108"
            },
            "returnParameters": {
              "id": 13172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13171,
                  "mutability": "mutable",
                  "name": "mem",
                  "nameLocation": "3393:3:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 13199,
                  "src": "3385:11:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3384:13:108"
            },
            "scope": 13200,
            "src": "3338:315:108",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13201,
        "src": "96:3559:108",
        "usedErrors": []
      }
    ],
    "src": "33:3623:108"
  },
  "bytecode": "608060405234801561001057600080fd5b50610814806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461021b578063fb1191981461022e578063fb24c86014610241578063fb999ded14610249578063fc0ce5031461025157600080fd5b80639f5cec89146101da578063a155bd62146101ed578063a29962b114610200578063c460ae041461021357600080fd5b80636f91e802116100e95780636f91e80214610191578063736ecb18146101995780637e86d25c146101ac578063869f602f146101b4578063884557bf146101c757600080fd5b80633449b5fb1461011b57806338dc0867146101415780636281efa41461016b5780636c7ac6371461017e575b600080fd5b61012e6101293660046105f2565b610264565b6040519081526020015b60405180910390f35b61015461014f3660046105d0565b610279565b604080519215158352602083019190915201610138565b6101546101793660046105d0565b610292565b61012e61018c3660046105d0565b61029f565b61012e6102b2565b6101546101a73660046105d0565b6102e7565b61012e6102f4565b61012e6101c23660046105d0565b610320565b6101546101d53660046105d0565b61032c565b61012e6101e83660046105f2565b610339565b61012e6101fb3660046105f2565b610346565b61015461020e3660046105d0565b610353565b61012e610360565b61012e6102293660046105d0565b61038c565b61012e61023c3660046105d0565b610398565b61012e6103a4565b61012e6103d0565b61012e61025f3660046105d0565b6103fc565b6000610271848484610408565b949350505050565b600080610286848461044b565b915091505b9250929050565b600080610286848461047b565b60006102ab83836104c1565b9392505050565b604051602060005b818110156102de576102cd6001806104cd565b506102d78161076d565b90506102ba565b50506040510390565b60008061028684846104d9565b604051602060005b818110156102de5761030f600180610509565b506103198161076d565b90506102fc565b60006102ab83836104cd565b6000806102868484610515565b6000610271848484610530565b600061027184848461055c565b6000806102868484610596565b604051602060005b818110156102de5761037b6001806105b8565b506103858161076d565b9050610368565b60006102ab83836105c4565b60006102ab8383610509565b604051602060005b818110156102de576103bf6001806105c4565b506103c98161076d565b90506103ac565b604051602060005b818110156102de576103eb6001806104c1565b506103f58161076d565b90506103d8565b60006102ab83836105b8565b600081836104325760405162461bcd60e51b815260040161042991906106b6565b60405180910390fd5b50828481610442576104426107b2565b04949350505050565b6000808261045e5750600090508061028b565b600183858161046f5761046f6107b2565b06915091509250929050565b6000808361048f575060019050600061028b565b838302838582816104a2576104a26107b2565b04146104b557600080925092505061028b565b60019590945092505050565b60006102ab8284610756565b60006102ab8284610788565b600080826104ec5750600090508061028b565b60018385816104fd576104fd6107b2565b04915091509250929050565b60006102ab8284610737565b600080838301848110156104b557600080925092505061028b565b600081848411156105545760405162461bcd60e51b815260040161042991906106b6565b505050900390565b6000818361057d5760405162461bcd60e51b815260040161042991906106b6565b5082848161058d5761058d6107b2565b06949350505050565b600080838311156105ac5750600090508061028b565b50600193919092039150565b60006102ab8284610723565b60006102ab828461070b565b600080604083850312156105e357600080fd5b50508035926020909101359150565b60008060006060848603121561060757600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561062d57600080fd5b818601915086601f83011261064157600080fd5b813581811115610653576106536107c8565b604051601f8201601f19908116603f0116810190838211818310171561067b5761067b6107c8565b8160405282815289602084870101111561069457600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208083528351808285015260005b818110156106e3578581018301518582016040015282016106c7565b818111156106f5576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561071e5761071e61079c565b500190565b600082610732576107326107b2565b500490565b60008160001904831182151516156107515761075161079c565b500290565b6000828210156107685761076861079c565b500390565b60006000198214156107815761078161079c565b5060010190565b600082610797576107976107b2565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d8b7a00b4f34967688117e381041ddf3aa6579ce2f5a359c89c72c41317af46f64736f6c63430008060033",
  "bytecodeSha1": "f27e928328b0a7b405a84697c23a4c7eec4d498f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SafeMathMock",
  "coverageMap": {
    "branches": {
      "108": {},
      "203": {
        "SafeMath.div": {
          "44": [
            5827,
            5832,
            true
          ]
        },
        "SafeMath.mod": {
          "51": [
            6703,
            6708,
            true
          ]
        },
        "SafeMath.sub": {
          "50": [
            5112,
            5118,
            true
          ]
        },
        "SafeMath.tryAdd": {
          "49": [
            771,
            776,
            false
          ]
        },
        "SafeMath.tryDiv": {
          "48": [
            2081,
            2087,
            false
          ]
        },
        "SafeMath.tryMod": {
          "45": [
            2430,
            2436,
            false
          ]
        },
        "SafeMath.tryMul": {
          "46": [
            1669,
            1675,
            false
          ],
          "47": [
            1742,
            1752,
            false
          ]
        },
        "SafeMath.trySub": {
          "52": [
            1102,
            1107,
            false
          ]
        }
      }
    },
    "statements": {
      "108": {
        "SafeMathMock.addMemoryCheck": {
          "18": [
            2264,
            2282
          ],
          "19": [
            2245,
            2248
          ]
        },
        "SafeMathMock.divMemoryCheck": {
          "14": [
            3227,
            3245
          ],
          "15": [
            3208,
            3211
          ]
        },
        "SafeMathMock.divWithMessage": {
          "0": [
            1806,
            1845
          ]
        },
        "SafeMathMock.doAdd": {
          "16": [
            968,
            993
          ]
        },
        "SafeMathMock.doDiv": {
          "22": [
            1313,
            1338
          ]
        },
        "SafeMathMock.doMod": {
          "9": [
            1428,
            1453
          ]
        },
        "SafeMathMock.doMul": {
          "17": [
            1198,
            1223
          ]
        },
        "SafeMathMock.doSub": {
          "3": [
            1083,
            1108
          ]
        },
        "SafeMathMock.modMemoryCheck": {
          "4": [
            3548,
            3566
          ],
          "5": [
            3529,
            3532
          ]
        },
        "SafeMathMock.modWithMessage": {
          "12": [
            2002,
            2041
          ]
        },
        "SafeMathMock.mulMemoryCheck": {
          "7": [
            2906,
            2924
          ],
          "8": [
            2887,
            2890
          ]
        },
        "SafeMathMock.subMemoryCheck": {
          "20": [
            2585,
            2603
          ],
          "21": [
            2566,
            2569
          ]
        },
        "SafeMathMock.subWithMessage": {
          "11": [
            1610,
            1649
          ]
        },
        "SafeMathMock.tryAdd": {
          "10": [
            219,
            247
          ]
        },
        "SafeMathMock.tryDiv": {
          "6": [
            627,
            655
          ]
        },
        "SafeMathMock.tryMod": {
          "1": [
            763,
            791
          ]
        },
        "SafeMathMock.tryMul": {
          "2": [
            491,
            519
          ]
        },
        "SafeMathMock.trySub": {
          "13": [
            355,
            383
          ]
        }
      },
      "203": {
        "SafeMath.add": {
          "43": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "23": [
            5819,
            5847
          ],
          "24": [
            5861,
            5873
          ],
          "42": [
            3913,
            3925
          ]
        },
        "SafeMath.mod": {
          "31": [
            4462,
            4474
          ],
          "38": [
            6695,
            6723
          ],
          "39": [
            6737,
            6749
          ]
        },
        "SafeMath.mul": {
          "34": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "30": [
            3185,
            3197
          ],
          "36": [
            5104,
            5133
          ],
          "37": [
            5147,
            5159
          ]
        },
        "SafeMath.tryAdd": {
          "35": [
            778,
            795
          ]
        },
        "SafeMath.tryDiv": {
          "32": [
            2089,
            2106
          ],
          "33": [
            2120,
            2140
          ]
        },
        "SafeMath.tryMod": {
          "25": [
            2438,
            2455
          ],
          "26": [
            2469,
            2489
          ]
        },
        "SafeMath.tryMul": {
          "27": [
            1677,
            1693
          ],
          "28": [
            1754,
            1771
          ],
          "29": [
            1785,
            1801
          ]
        },
        "SafeMath.trySub": {
          "40": [
            1109,
            1126
          ],
          "41": [
            1140,
            1160
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c80639f5cec89116100a2578063dcc721d211610071578063dcc721d21461021b578063fb1191981461022e578063fb24c86014610241578063fb999ded14610249578063fc0ce5031461025157600080fd5b80639f5cec89146101da578063a155bd62146101ed578063a29962b114610200578063c460ae041461021357600080fd5b80636f91e802116100e95780636f91e80214610191578063736ecb18146101995780637e86d25c146101ac578063869f602f146101b4578063884557bf146101c757600080fd5b80633449b5fb1461011b57806338dc0867146101415780636281efa41461016b5780636c7ac6371461017e575b600080fd5b61012e6101293660046105f2565b610264565b6040519081526020015b60405180910390f35b61015461014f3660046105d0565b610279565b604080519215158352602083019190915201610138565b6101546101793660046105d0565b610292565b61012e61018c3660046105d0565b61029f565b61012e6102b2565b6101546101a73660046105d0565b6102e7565b61012e6102f4565b61012e6101c23660046105d0565b610320565b6101546101d53660046105d0565b61032c565b61012e6101e83660046105f2565b610339565b61012e6101fb3660046105f2565b610346565b61015461020e3660046105d0565b610353565b61012e610360565b61012e6102293660046105d0565b61038c565b61012e61023c3660046105d0565b610398565b61012e6103a4565b61012e6103d0565b61012e61025f3660046105d0565b6103fc565b6000610271848484610408565b949350505050565b600080610286848461044b565b915091505b9250929050565b600080610286848461047b565b60006102ab83836104c1565b9392505050565b604051602060005b818110156102de576102cd6001806104cd565b506102d78161076d565b90506102ba565b50506040510390565b60008061028684846104d9565b604051602060005b818110156102de5761030f600180610509565b506103198161076d565b90506102fc565b60006102ab83836104cd565b6000806102868484610515565b6000610271848484610530565b600061027184848461055c565b6000806102868484610596565b604051602060005b818110156102de5761037b6001806105b8565b506103858161076d565b9050610368565b60006102ab83836105c4565b60006102ab8383610509565b604051602060005b818110156102de576103bf6001806105c4565b506103c98161076d565b90506103ac565b604051602060005b818110156102de576103eb6001806104c1565b506103f58161076d565b90506103d8565b60006102ab83836105b8565b600081836104325760405162461bcd60e51b815260040161042991906106b6565b60405180910390fd5b50828481610442576104426107b2565b04949350505050565b6000808261045e5750600090508061028b565b600183858161046f5761046f6107b2565b06915091509250929050565b6000808361048f575060019050600061028b565b838302838582816104a2576104a26107b2565b04146104b557600080925092505061028b565b60019590945092505050565b60006102ab8284610756565b60006102ab8284610788565b600080826104ec5750600090508061028b565b60018385816104fd576104fd6107b2565b04915091509250929050565b60006102ab8284610737565b600080838301848110156104b557600080925092505061028b565b600081848411156105545760405162461bcd60e51b815260040161042991906106b6565b505050900390565b6000818361057d5760405162461bcd60e51b815260040161042991906106b6565b5082848161058d5761058d6107b2565b06949350505050565b600080838311156105ac5750600090508061028b565b50600193919092039150565b60006102ab8284610723565b60006102ab828461070b565b600080604083850312156105e357600080fd5b50508035926020909101359150565b60008060006060848603121561060757600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561062d57600080fd5b818601915086601f83011261064157600080fd5b813581811115610653576106536107c8565b604051601f8201601f19908116603f0116810190838211818310171561067b5761067b6107c8565b8160405282815289602084870101111561069457600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208083528351808285015260005b818110156106e3578581018301518582016040015282016106c7565b818111156106f5576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561071e5761071e61079c565b500190565b600082610732576107326107b2565b500490565b60008160001904831182151516156107515761075161079c565b500290565b6000828210156107685761076861079c565b500390565b60006000198214156107815761078161079c565b5060010190565b600082610797576107976107b2565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d8b7a00b4f34967688117e381041ddf3aa6579ce2f5a359c89c72c41317af46f64736f6c63430008060033",
  "deployedSourceMap": "96:3559:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:190;;;;;;:::i;:::-;;:::i;:::-;;;2341:25:211;;;2329:2;2314:18;1662:190:108;;;;;;;;668:130;;;;;;:::i;:::-;;:::i;:::-;;;;1523:14:211;;1516:22;1498:41;;1570:2;1555:18;;1548:34;;;;1471:18;668:130:108;1453:135:211;396:130:108;;;;;;:::i;:::-;;:::i;1006:109::-;;;;;;:::i;:::-;;:::i;3338:315::-;;;:::i;532:130::-;;;;;;:::i;:::-;;:::i;2696:315::-;;;:::i;1351:109::-;;;;;;:::i;:::-;;:::i;124:130::-;;;;;;:::i;:::-;;:::i;1466:190::-;;;;;;:::i;:::-;;:::i;1858:::-;;;;;;:::i;:::-;;:::i;260:130::-;;;;;;:::i;:::-;;:::i;3017:315::-;;;:::i;891:109::-;;;;;;:::i;:::-;;:::i;1121:::-;;;;;;:::i;:::-;;:::i;2054:315::-;;;:::i;2375:::-;;;:::i;1236:109::-;;;;;;:::i;:::-;;:::i;1662:190::-;1787:7;1813:32;1826:1;1829;1832:12;1813;:32::i;:::-;1806:39;1662:190;-1:-1:-1;;;;1662:190:108:o;668:130::-;727:9;738:13;770:21;786:1;789;770:15;:21::i;:::-;763:28;;;;668:130;;;;;;:::o;396:::-;455:9;466:13;498:21;514:1;517;498:15;:21::i;1006:109::-;1064:7;1090:18;1103:1;1106;1090:12;:18::i;:::-;1083:25;1006:109;-1:-1:-1;;;1006:109:108:o;3338:315::-;3473:4;3467:11;3425:2;3385:11;3497:80;3521:6;3517:1;:10;3497:80;;;3548:18;3561:1;3564;3548:12;:18::i;:::-;-1:-1:-1;3529:3:108;;;:::i;:::-;;;3497:80;;;-1:-1:-1;;3626:4:108;3620:11;3616:21;;3338:315::o;532:130::-;591:9;602:13;634:21;650:1;653;634:15;:21::i;2696:315::-;2831:4;2825:11;2783:2;2743:11;2855:80;2879:6;2875:1;:10;2855:80;;;2906:18;2919:1;2922;2906:12;:18::i;:::-;-1:-1:-1;2887:3:108;;;:::i;:::-;;;2855:80;;1351:109;1409:7;1435:18;1448:1;1451;1435:12;:18::i;124:130::-;183:9;194:13;226:21;242:1;245;226:15;:21::i;1466:190::-;1591:7;1617:32;1630:1;1633;1636:12;1617;:32::i;1858:190::-;1983:7;2009:32;2022:1;2025;2028:12;2009;:32::i;260:130::-;319:9;330:13;362:21;378:1;381;362:15;:21::i;3017:315::-;3152:4;3146:11;3104:2;3064:11;3176:80;3200:6;3196:1;:10;3176:80;;;3227:18;3240:1;3243;3227:12;:18::i;:::-;-1:-1:-1;3208:3:108;;;:::i;:::-;;;3176:80;;891:109;949:7;975:18;988:1;991;975:12;:18::i;1121:109::-;1179:7;1205:18;1218:1;1221;1205:12;:18::i;2054:315::-;2189:4;2183:11;2141:2;2101:11;2213:80;2237:6;2233:1;:10;2213:80;;;2264:18;2277:1;2280;2264:12;:18::i;:::-;-1:-1:-1;2245:3:108;;;:::i;:::-;;;2213:80;;2375:315;2510:4;2504:11;2462:2;2422:11;2534:80;2558:6;2554:1;:10;2534:80;;;2585:18;2598:1;2601;2585:12;:18::i;:::-;-1:-1:-1;2566:3:108;;;:::i;:::-;;;2534:80;;1236:109;1294:7;1320:18;1333:1;1336;1320:12;:18::i;5660:230:203:-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:203;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:203:o;2316:190::-;2377:4;;2430:6;2426:29;;-1:-1:-1;2446:5:203;;-1:-1:-1;2446:5:203;2438:17;;2426:29;2477:4;2487:1;2483;:5;;;;;:::i;:::-;;2469:20;;;;2316:190;;;;;:::o;1325:493::-;1386:4;;1669:6;1665:28;;-1:-1:-1;1685:4:203;;-1:-1:-1;1691:1:203;1677:16;;1665:28;1719:5;;;1723:1;1719;:5;:1;1742:5;;;;:::i;:::-;;:10;1738:33;;1762:5;1769:1;1754:17;;;;;;;1738:33;1793:4;;1799:1;;-1:-1:-1;1325:493:203;-1:-1:-1;;;1325:493:203:o;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;4385:96::-;4443:7;4469:5;4473:1;4469;:5;:::i;1967:190::-;2028:4;;2081:6;2077:29;;-1:-1:-1;2097:5:203;;-1:-1:-1;2097:5:203;2089:17;;2077:29;2128:4;2138:1;2134;:5;;;;;:::i;:::-;;2120:20;;;;1967:190;;;;;:::o;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;626:216::-;687:4;;748:5;;;771;;;767:28;;;786:5;793:1;778:17;;;;;;;4945:231;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:203;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:203;;;4945:231::o;6536:230::-;6652:7;6710:12;6703:5;6695:28;;;;-1:-1:-1;;;6695:28:203;;;;;;;;:::i;:::-;;6748:1;6744;:5;;;;;:::i;:::-;;;6536:230;-1:-1:-1;;;;6536:230:203:o;988:189::-;1049:4;1055:7;1106:1;1102;:5;1098:28;;;-1:-1:-1;1117:5:203;;-1:-1:-1;1117:5:203;1109:17;;1098:28;-1:-1:-1;1148:4:203;;1154:5;;;;;-1:-1:-1;988:189:203:o;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;14:248:211:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:2;;;159:1;156;149:12;111:2;-1:-1:-1;;182:23:211;;;252:2;237:18;;;224:32;;-1:-1:-1;101:161:211:o;267:1058::-;354:6;362;370;423:2;411:9;402:7;398:23;394:32;391:2;;;439:1;436;429:12;391:2;475:9;462:23;452:33;;532:2;521:9;517:18;504:32;494:42;;587:2;576:9;572:18;559:32;610:18;651:2;643:6;640:14;637:2;;;667:1;664;657:12;637:2;705:6;694:9;690:22;680:32;;750:7;743:4;739:2;735:13;731:27;721:2;;772:1;769;762:12;721:2;808;795:16;830:2;826;823:10;820:2;;;836:18;;:::i;:::-;911:2;905:9;879:2;965:13;;-1:-1:-1;;961:22:211;;;985:2;957:31;953:40;941:53;;;1009:18;;;1029:22;;;1006:46;1003:2;;;1055:18;;:::i;:::-;1095:10;1091:2;1084:22;1130:2;1122:6;1115:18;1170:7;1165:2;1160;1156;1152:11;1148:20;1145:33;1142:2;;;1191:1;1188;1181:12;1142:2;1247;1242;1238;1234:11;1229:2;1221:6;1217:15;1204:46;1292:1;1287:2;1282;1274:6;1270:15;1266:24;1259:35;1313:6;1303:16;;;;;;;381:944;;;;;:::o;1593:597::-;1705:4;1734:2;1763;1752:9;1745:21;1795:6;1789:13;1838:6;1833:2;1822:9;1818:18;1811:34;1863:1;1873:140;1887:6;1884:1;1881:13;1873:140;;;1982:14;;;1978:23;;1972:30;1948:17;;;1967:2;1944:26;1937:66;1902:10;;1873:140;;;2031:6;2028:1;2025:13;2022:2;;;2101:1;2096:2;2087:6;2076:9;2072:22;2068:31;2061:42;2022:2;-1:-1:-1;2174:2:211;2153:15;-1:-1:-1;;2149:29:211;2134:45;;;;2181:2;2130:54;;1714:476;-1:-1:-1;;;1714:476:211:o;2377:128::-;2417:3;2448:1;2444:6;2441:1;2438:13;2435:2;;;2454:18;;:::i;:::-;-1:-1:-1;2490:9:211;;2425:80::o;2510:120::-;2550:1;2576;2566:2;;2581:18;;:::i;:::-;-1:-1:-1;2615:9:211;;2556:74::o;2635:168::-;2675:7;2741:1;2737;2733:6;2729:14;2726:1;2723:21;2718:1;2711:9;2704:17;2700:45;2697:2;;;2748:18;;:::i;:::-;-1:-1:-1;2788:9:211;;2687:116::o;2808:125::-;2848:4;2876:1;2873;2870:8;2867:2;;;2881:18;;:::i;:::-;-1:-1:-1;2918:9:211;;2857:76::o;2938:135::-;2977:3;-1:-1:-1;;2998:17:211;;2995:2;;;3018:18;;:::i;:::-;-1:-1:-1;3065:1:211;3054:13;;2985:88::o;3078:112::-;3110:1;3136;3126:2;;3141:18;;:::i;:::-;-1:-1:-1;3175:9:211;;3116:74::o;3195:127::-;3256:10;3251:3;3247:20;3244:1;3237:31;3287:4;3284:1;3277:15;3311:4;3308:1;3301:15;3327:127;3388:10;3383:3;3379:20;3376:1;3369:31;3419:4;3416:1;3409:15;3443:4;3440:1;3433:15;3459:127;3520:10;3515:3;3511:20;3508:1;3501:31;3551:4;3548:1;3541:15;3575:4;3572:1;3565:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    96,
    3655
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F5CEC89 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCC721D2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCC721D2 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xFB119198 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xFB24C860 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xFB999DED EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xFC0CE503 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F5CEC89 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA155BD62 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xA29962B1 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC460AE04 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F91E802 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6F91E802 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x736ECB18 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x7E86D25C EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x869F602F EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x884557BF EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3449B5FB EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x38DC0867 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x6281EFA4 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6C7AC637 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x360 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x4C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x2CD PUSH1 0x1 DUP1 PUSH2 0x4CD JUMP JUMPDEST POP PUSH2 0x2D7 DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x30F PUSH1 0x1 DUP1 PUSH2 0x509 JUMP JUMPDEST POP PUSH2 0x319 DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271 DUP5 DUP5 DUP5 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x286 DUP5 DUP5 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x37B PUSH1 0x1 DUP1 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH2 0x385 DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP1 POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x3BF PUSH1 0x1 DUP1 PUSH2 0x5C4 JUMP JUMPDEST POP PUSH2 0x3C9 DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP1 POP PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x3EB PUSH1 0x1 DUP1 PUSH2 0x4C1 JUMP JUMPDEST POP PUSH2 0x3F5 DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP4 DUP4 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x442 JUMPI PUSH2 0x442 PUSH2 0x7B2 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x45E JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x46F JUMPI PUSH2 0x46F PUSH2 0x7B2 JUMP JUMPDEST MOD SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x48F JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x28B JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x4A2 JUMPI PUSH2 0x4A2 PUSH2 0x7B2 JUMP JUMPDEST DIV EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x4EC JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x4FD JUMPI PUSH2 0x4FD PUSH2 0x7B2 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x28B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x58D JUMPI PUSH2 0x58D PUSH2 0x7B2 JUMP JUMPDEST MOD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x5AC JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x28B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB DUP3 DUP5 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0x7C8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x71E JUMPI PUSH2 0x71E PUSH2 0x79C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x732 JUMPI PUSH2 0x732 PUSH2 0x7B2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x751 JUMPI PUSH2 0x751 PUSH2 0x79C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x79C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0x79C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x797 JUMPI PUSH2 0x797 PUSH2 0x7B2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xB7 LOG0 SIGNEXTEND 0x4F CALLVALUE SWAP7 PUSH23 0x88117E381041DDF3AA6579CE2F5A359C89C72C41317AF4 PUSH16 0x64736F6C634300080600330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "MSTORE",
      "path": "108"
    },
    "5": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "CALLVALUE",
      "path": "108"
    },
    "6": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "7": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "ISZERO",
      "path": "108"
    },
    "8": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "12": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "108"
    },
    "16": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "17": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "POP",
      "path": "108"
    },
    "18": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "21": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "LT",
      "path": "108"
    },
    "22": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "26": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "CALLDATALOAD",
      "path": "108"
    },
    "29": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "SHR",
      "path": "108"
    },
    "32": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "33": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x9F5CEC89"
    },
    "38": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "GT",
      "path": "108"
    },
    "39": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "43": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "44": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xDCC721D2"
    },
    "49": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "GT",
      "path": "108"
    },
    "50": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "54": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "55": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xDCC721D2"
    },
    "60": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "61": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x21B"
    },
    "64": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "65": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "66": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xFB119198"
    },
    "71": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "72": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x22E"
    },
    "75": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "76": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "77": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xFB24C860"
    },
    "82": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "83": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x241"
    },
    "86": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "87": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "88": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xFB999DED"
    },
    "93": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "94": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x249"
    },
    "97": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "98": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "99": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xFC0CE503"
    },
    "104": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "105": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x251"
    },
    "108": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "109": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "112": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "108"
    },
    "113": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "114": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "115": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x9F5CEC89"
    },
    "120": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "121": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1DA"
    },
    "124": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "125": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "126": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xA155BD62"
    },
    "131": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "132": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1ED"
    },
    "135": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "136": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "137": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xA29962B1"
    },
    "142": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "143": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x200"
    },
    "146": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "147": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "148": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0xC460AE04"
    },
    "153": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "154": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x213"
    },
    "157": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "158": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "161": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "108"
    },
    "162": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "163": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "164": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x6F91E802"
    },
    "169": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "GT",
      "path": "108"
    },
    "170": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "174": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "175": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x6F91E802"
    },
    "180": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "181": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x191"
    },
    "184": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "185": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "186": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x736ECB18"
    },
    "191": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "192": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x199"
    },
    "195": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "196": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "197": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x7E86D25C"
    },
    "202": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "203": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1AC"
    },
    "206": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "207": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "208": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x869F602F"
    },
    "213": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "214": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1B4"
    },
    "217": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "218": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "219": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x884557BF"
    },
    "224": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "225": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1C7"
    },
    "228": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "229": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "232": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "108"
    },
    "233": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "234": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "235": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x3449B5FB"
    },
    "240": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "241": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "245": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "246": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x38DC0867"
    },
    "251": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "252": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x141"
    },
    "255": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "256": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "257": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x6281EFA4"
    },
    "262": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "263": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x16B"
    },
    "266": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "267": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "268": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH4",
      "path": "108",
      "value": "0x6C7AC637"
    },
    "273": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "EQ",
      "path": "108"
    },
    "274": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x17E"
    },
    "277": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "278": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "279": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "DUP1",
      "path": "108"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        96,
        3655
      ],
      "op": "REVERT",
      "path": "108"
    },
    "283": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "284": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "287": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x129"
    },
    "290": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "291": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "293": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5F2"
    },
    "296": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMP",
      "path": "108"
    },
    "297": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "298": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x264"
    },
    "301": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMP",
      "path": "108"
    },
    "302": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "303": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "305": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "313": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "315": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "316": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "DUP1",
      "path": "108"
    },
    "317": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SWAP2",
      "path": "108"
    },
    "318": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SUB",
      "path": "108"
    },
    "319": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "320": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "RETURN",
      "path": "108"
    },
    "321": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "322": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x154"
    },
    "325": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x14F"
    },
    "328": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "329": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "331": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "334": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "108"
    },
    "335": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "336": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x279"
    },
    "339": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "108"
    },
    "340": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "341": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "343": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "DUP1",
      "path": "108"
    },
    "344": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "345": {
      "op": "SWAP3"
    },
    "346": {
      "op": "ISZERO"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "DUP4"
    },
    "349": {
      "op": "MSTORE"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "352": {
      "op": "DUP4"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "op": "SWAP2"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "ADD"
    },
    "359": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x138"
    },
    "362": {
      "op": "JUMP"
    },
    "363": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "364": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x154"
    },
    "367": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x179"
    },
    "370": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "371": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "373": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "376": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        396,
        526
      ],
      "op": "JUMP",
      "path": "108"
    },
    "377": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "378": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x292"
    },
    "381": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        396,
        526
      ],
      "op": "JUMP",
      "path": "108"
    },
    "382": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "383": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "386": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x18C"
    },
    "389": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "390": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "392": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "395": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "108"
    },
    "396": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "397": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x29F"
    },
    "400": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "108"
    },
    "401": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "402": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "405": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2B2"
    },
    "408": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMP",
      "path": "108"
    },
    "409": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "410": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x154"
    },
    "413": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1A7"
    },
    "416": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "417": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "419": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "422": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        532,
        662
      ],
      "op": "JUMP",
      "path": "108"
    },
    "423": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "424": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2E7"
    },
    "427": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        532,
        662
      ],
      "op": "JUMP",
      "path": "108"
    },
    "428": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "429": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "432": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2F4"
    },
    "435": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2696,
        3011
      ],
      "op": "JUMP",
      "path": "108"
    },
    "436": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "437": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "440": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1C2"
    },
    "443": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "444": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "446": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "449": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMP",
      "path": "108"
    },
    "450": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "451": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x320"
    },
    "454": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMP",
      "path": "108"
    },
    "455": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "456": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x154"
    },
    "459": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1D5"
    },
    "462": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "463": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "465": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "468": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        124,
        254
      ],
      "op": "JUMP",
      "path": "108"
    },
    "469": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "470": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x32C"
    },
    "473": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        124,
        254
      ],
      "op": "JUMP",
      "path": "108"
    },
    "474": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "475": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "478": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1E8"
    },
    "481": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "482": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "484": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5F2"
    },
    "487": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMP",
      "path": "108"
    },
    "488": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "489": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x339"
    },
    "492": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMP",
      "path": "108"
    },
    "493": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "494": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "497": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x1FB"
    },
    "500": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "501": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "503": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5F2"
    },
    "506": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMP",
      "path": "108"
    },
    "507": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "508": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x346"
    },
    "511": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMP",
      "path": "108"
    },
    "512": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "513": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x154"
    },
    "516": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x20E"
    },
    "519": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "520": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "522": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "525": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        260,
        390
      ],
      "op": "JUMP",
      "path": "108"
    },
    "526": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "527": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x353"
    },
    "530": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        260,
        390
      ],
      "op": "JUMP",
      "path": "108"
    },
    "531": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "532": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "535": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x360"
    },
    "538": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3017,
        3332
      ],
      "op": "JUMP",
      "path": "108"
    },
    "539": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "540": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "543": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x229"
    },
    "546": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "547": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "549": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "552": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        891,
        1000
      ],
      "op": "JUMP",
      "path": "108"
    },
    "553": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "554": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x38C"
    },
    "557": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        891,
        1000
      ],
      "op": "JUMP",
      "path": "108"
    },
    "558": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "559": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "562": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x23C"
    },
    "565": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "566": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "568": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "571": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMP",
      "path": "108"
    },
    "572": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "573": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x398"
    },
    "576": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMP",
      "path": "108"
    },
    "577": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "578": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "581": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x3A4"
    },
    "584": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2054,
        2369
      ],
      "op": "JUMP",
      "path": "108"
    },
    "585": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "586": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "589": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x3D0"
    },
    "592": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2375,
        2690
      ],
      "op": "JUMP",
      "path": "108"
    },
    "593": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "594": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x12E"
    },
    "597": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x25F"
    },
    "600": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "CALLDATASIZE",
      "path": "108"
    },
    "601": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x4"
    },
    "603": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5D0"
    },
    "606": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMP",
      "path": "108"
    },
    "607": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "608": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x3FC"
    },
    "611": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMP",
      "path": "108"
    },
    "612": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "613": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1787,
        1794
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "615": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1813,
        1845
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 0,
      "value": "0x271"
    },
    "618": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1826,
        1827
      ],
      "op": "DUP5",
      "path": "108"
    },
    "619": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1829,
        1830
      ],
      "op": "DUP5",
      "path": "108"
    },
    "620": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1832,
        1844
      ],
      "op": "DUP5",
      "path": "108"
    },
    "621": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1813,
        1825
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x408"
    },
    "624": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "i",
      "offset": [
        1813,
        1845
      ],
      "op": "JUMP",
      "path": "108"
    },
    "625": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1813,
        1845
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "626": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1806,
        1845
      ],
      "op": "SWAP5",
      "path": "108"
    },
    "627": {
      "fn": "SafeMathMock.divWithMessage",
      "offset": [
        1662,
        1852
      ],
      "op": "SWAP4",
      "path": "108"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "fn": "SafeMathMock.divWithMessage",
      "jump": "o",
      "offset": [
        1662,
        1852
      ],
      "op": "JUMP",
      "path": "108"
    },
    "633": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "634": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        727,
        736
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "636": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        738,
        751
      ],
      "op": "DUP1",
      "path": "108"
    },
    "637": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        791
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 1,
      "value": "0x286"
    },
    "640": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        786,
        787
      ],
      "op": "DUP5",
      "path": "108"
    },
    "641": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        789,
        790
      ],
      "op": "DUP5",
      "path": "108"
    },
    "642": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        785
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x44B"
    },
    "645": {
      "fn": "SafeMathMock.tryMod",
      "jump": "i",
      "offset": [
        770,
        791
      ],
      "op": "JUMP",
      "path": "108"
    },
    "646": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        770,
        791
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "647": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "SWAP2",
      "path": "108"
    },
    "648": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "POP",
      "path": "108"
    },
    "649": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "SWAP2",
      "path": "108"
    },
    "650": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        763,
        791
      ],
      "op": "POP",
      "path": "108"
    },
    "651": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "652": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP3",
      "path": "108"
    },
    "653": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "POP",
      "path": "108"
    },
    "654": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP3",
      "path": "108"
    },
    "655": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "656": {
      "fn": "SafeMathMock.tryMod",
      "offset": [
        668,
        798
      ],
      "op": "POP",
      "path": "108"
    },
    "657": {
      "fn": "SafeMathMock.tryMod",
      "jump": "o",
      "offset": [
        668,
        798
      ],
      "op": "JUMP",
      "path": "108"
    },
    "658": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        396,
        526
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "659": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        455,
        464
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "661": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        466,
        479
      ],
      "op": "DUP1",
      "path": "108"
    },
    "662": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        498,
        519
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 2,
      "value": "0x286"
    },
    "665": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        514,
        515
      ],
      "op": "DUP5",
      "path": "108"
    },
    "666": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        517,
        518
      ],
      "op": "DUP5",
      "path": "108"
    },
    "667": {
      "fn": "SafeMathMock.tryMul",
      "offset": [
        498,
        513
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x47B"
    },
    "670": {
      "fn": "SafeMathMock.tryMul",
      "jump": "i",
      "offset": [
        498,
        519
      ],
      "op": "JUMP",
      "path": "108"
    },
    "671": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "672": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1064,
        1071
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "674": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1108
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 3,
      "value": "0x2AB"
    },
    "677": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1103,
        1104
      ],
      "op": "DUP4",
      "path": "108"
    },
    "678": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1106,
        1107
      ],
      "op": "DUP4",
      "path": "108"
    },
    "679": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1102
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x4C1"
    },
    "682": {
      "fn": "SafeMathMock.doSub",
      "jump": "i",
      "offset": [
        1090,
        1108
      ],
      "op": "JUMP",
      "path": "108"
    },
    "683": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1090,
        1108
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "684": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1083,
        1108
      ],
      "op": "SWAP4",
      "path": "108"
    },
    "685": {
      "fn": "SafeMathMock.doSub",
      "offset": [
        1006,
        1115
      ],
      "op": "SWAP3",
      "path": "108"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "op": "POP"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "fn": "SafeMathMock.doSub",
      "jump": "o",
      "offset": [
        1006,
        1115
      ],
      "op": "JUMP",
      "path": "108"
    },
    "690": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "691": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3473,
        3477
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "693": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3467,
        3478
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "694": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3425,
        3427
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x20"
    },
    "696": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3385,
        3396
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "698": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "699": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3521,
        3527
      ],
      "op": "DUP2",
      "path": "108"
    },
    "700": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3517,
        3518
      ],
      "op": "DUP2",
      "path": "108"
    },
    "701": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3517,
        3527
      ],
      "op": "LT",
      "path": "108"
    },
    "702": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "ISZERO",
      "path": "108"
    },
    "703": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2DE"
    },
    "706": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "707": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3548,
        3566
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 4,
      "value": "0x2CD"
    },
    "710": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3561,
        3562
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x1"
    },
    "712": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3564,
        3565
      ],
      "op": "DUP1",
      "path": "108"
    },
    "713": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3548,
        3560
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x4CD"
    },
    "716": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3548,
        3566
      ],
      "op": "JUMP",
      "path": "108"
    },
    "717": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3548,
        3566
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 5,
      "value": "0x2D7"
    },
    "722": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "DUP2",
      "path": "108"
    },
    "723": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x76D"
    },
    "726": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "i",
      "offset": [
        3529,
        3532
      ],
      "op": "JUMP",
      "path": "108"
    },
    "727": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "728": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "729": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "POP",
      "path": "108"
    },
    "730": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2BA"
    },
    "733": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMP",
      "path": "108"
    },
    "734": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3497,
        3577
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3626,
        3630
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "739": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3620,
        3631
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "740": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3616,
        3637
      ],
      "op": "SUB",
      "path": "108"
    },
    "741": {
      "fn": "SafeMathMock.modMemoryCheck",
      "offset": [
        3616,
        3637
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "742": {
      "fn": "SafeMathMock.modMemoryCheck",
      "jump": "o",
      "offset": [
        3338,
        3653
      ],
      "op": "JUMP",
      "path": "108"
    },
    "743": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        532,
        662
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "744": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        591,
        600
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "746": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        602,
        615
      ],
      "op": "DUP1",
      "path": "108"
    },
    "747": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        634,
        655
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 6,
      "value": "0x286"
    },
    "750": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        650,
        651
      ],
      "op": "DUP5",
      "path": "108"
    },
    "751": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        653,
        654
      ],
      "op": "DUP5",
      "path": "108"
    },
    "752": {
      "fn": "SafeMathMock.tryDiv",
      "offset": [
        634,
        649
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x4D9"
    },
    "755": {
      "fn": "SafeMathMock.tryDiv",
      "jump": "i",
      "offset": [
        634,
        655
      ],
      "op": "JUMP",
      "path": "108"
    },
    "756": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2696,
        3011
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "757": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2831,
        2835
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "759": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2825,
        2836
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "760": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2783,
        2785
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x20"
    },
    "762": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2743,
        2754
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "764": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "765": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2879,
        2885
      ],
      "op": "DUP2",
      "path": "108"
    },
    "766": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2875,
        2876
      ],
      "op": "DUP2",
      "path": "108"
    },
    "767": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2875,
        2885
      ],
      "op": "LT",
      "path": "108"
    },
    "768": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "ISZERO",
      "path": "108"
    },
    "769": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2DE"
    },
    "772": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "773": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2906,
        2924
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 7,
      "value": "0x30F"
    },
    "776": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2919,
        2920
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x1"
    },
    "778": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2922,
        2923
      ],
      "op": "DUP1",
      "path": "108"
    },
    "779": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2906,
        2918
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x509"
    },
    "782": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2906,
        2924
      ],
      "op": "JUMP",
      "path": "108"
    },
    "783": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2906,
        2924
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 8,
      "value": "0x319"
    },
    "788": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "DUP2",
      "path": "108"
    },
    "789": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x76D"
    },
    "792": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "jump": "i",
      "offset": [
        2887,
        2890
      ],
      "op": "JUMP",
      "path": "108"
    },
    "793": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "794": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "795": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2887,
        2890
      ],
      "op": "POP",
      "path": "108"
    },
    "796": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2FC"
    },
    "799": {
      "fn": "SafeMathMock.mulMemoryCheck",
      "offset": [
        2855,
        2935
      ],
      "op": "JUMP",
      "path": "108"
    },
    "800": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1351,
        1460
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "801": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1409,
        1416
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "803": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1435,
        1453
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 9,
      "value": "0x2AB"
    },
    "806": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1448,
        1449
      ],
      "op": "DUP4",
      "path": "108"
    },
    "807": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1451,
        1452
      ],
      "op": "DUP4",
      "path": "108"
    },
    "808": {
      "fn": "SafeMathMock.doMod",
      "offset": [
        1435,
        1447
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x4CD"
    },
    "811": {
      "fn": "SafeMathMock.doMod",
      "jump": "i",
      "offset": [
        1435,
        1453
      ],
      "op": "JUMP",
      "path": "108"
    },
    "812": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        124,
        254
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "813": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        183,
        192
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "815": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        194,
        207
      ],
      "op": "DUP1",
      "path": "108"
    },
    "816": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        226,
        247
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 10,
      "value": "0x286"
    },
    "819": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        242,
        243
      ],
      "op": "DUP5",
      "path": "108"
    },
    "820": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        245,
        246
      ],
      "op": "DUP5",
      "path": "108"
    },
    "821": {
      "fn": "SafeMathMock.tryAdd",
      "offset": [
        226,
        241
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x515"
    },
    "824": {
      "fn": "SafeMathMock.tryAdd",
      "jump": "i",
      "offset": [
        226,
        247
      ],
      "op": "JUMP",
      "path": "108"
    },
    "825": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1466,
        1656
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "826": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1591,
        1598
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "828": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1617,
        1649
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 11,
      "value": "0x271"
    },
    "831": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1630,
        1631
      ],
      "op": "DUP5",
      "path": "108"
    },
    "832": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1633,
        1634
      ],
      "op": "DUP5",
      "path": "108"
    },
    "833": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1636,
        1648
      ],
      "op": "DUP5",
      "path": "108"
    },
    "834": {
      "fn": "SafeMathMock.subWithMessage",
      "offset": [
        1617,
        1629
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x530"
    },
    "837": {
      "fn": "SafeMathMock.subWithMessage",
      "jump": "i",
      "offset": [
        1617,
        1649
      ],
      "op": "JUMP",
      "path": "108"
    },
    "838": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1858,
        2048
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "839": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        1983,
        1990
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "841": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2009,
        2041
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 12,
      "value": "0x271"
    },
    "844": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2022,
        2023
      ],
      "op": "DUP5",
      "path": "108"
    },
    "845": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2025,
        2026
      ],
      "op": "DUP5",
      "path": "108"
    },
    "846": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2028,
        2040
      ],
      "op": "DUP5",
      "path": "108"
    },
    "847": {
      "fn": "SafeMathMock.modWithMessage",
      "offset": [
        2009,
        2021
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x55C"
    },
    "850": {
      "fn": "SafeMathMock.modWithMessage",
      "jump": "i",
      "offset": [
        2009,
        2041
      ],
      "op": "JUMP",
      "path": "108"
    },
    "851": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        260,
        390
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "852": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        319,
        328
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "854": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        330,
        343
      ],
      "op": "DUP1",
      "path": "108"
    },
    "855": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        362,
        383
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 13,
      "value": "0x286"
    },
    "858": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        378,
        379
      ],
      "op": "DUP5",
      "path": "108"
    },
    "859": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        381,
        382
      ],
      "op": "DUP5",
      "path": "108"
    },
    "860": {
      "fn": "SafeMathMock.trySub",
      "offset": [
        362,
        377
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x596"
    },
    "863": {
      "fn": "SafeMathMock.trySub",
      "jump": "i",
      "offset": [
        362,
        383
      ],
      "op": "JUMP",
      "path": "108"
    },
    "864": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3017,
        3332
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "865": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3152,
        3156
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "867": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3146,
        3157
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "868": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3104,
        3106
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x20"
    },
    "870": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3064,
        3075
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "872": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "873": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3200,
        3206
      ],
      "op": "DUP2",
      "path": "108"
    },
    "874": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP2",
      "path": "108"
    },
    "875": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3196,
        3206
      ],
      "op": "LT",
      "path": "108"
    },
    "876": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "ISZERO",
      "path": "108"
    },
    "877": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2DE"
    },
    "880": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "881": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3227,
        3245
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 14,
      "value": "0x37B"
    },
    "884": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3240,
        3241
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x1"
    },
    "886": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3243,
        3244
      ],
      "op": "DUP1",
      "path": "108"
    },
    "887": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3227,
        3239
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5B8"
    },
    "890": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3227,
        3245
      ],
      "op": "JUMP",
      "path": "108"
    },
    "891": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3227,
        3245
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 15,
      "value": "0x385"
    },
    "896": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "DUP2",
      "path": "108"
    },
    "897": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x76D"
    },
    "900": {
      "fn": "SafeMathMock.divMemoryCheck",
      "jump": "i",
      "offset": [
        3208,
        3211
      ],
      "op": "JUMP",
      "path": "108"
    },
    "901": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "902": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "903": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3208,
        3211
      ],
      "op": "POP",
      "path": "108"
    },
    "904": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x368"
    },
    "907": {
      "fn": "SafeMathMock.divMemoryCheck",
      "offset": [
        3176,
        3256
      ],
      "op": "JUMP",
      "path": "108"
    },
    "908": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        891,
        1000
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "909": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        949,
        956
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "911": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        975,
        993
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 16,
      "value": "0x2AB"
    },
    "914": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        988,
        989
      ],
      "op": "DUP4",
      "path": "108"
    },
    "915": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        991,
        992
      ],
      "op": "DUP4",
      "path": "108"
    },
    "916": {
      "fn": "SafeMathMock.doAdd",
      "offset": [
        975,
        987
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5C4"
    },
    "919": {
      "fn": "SafeMathMock.doAdd",
      "jump": "i",
      "offset": [
        975,
        993
      ],
      "op": "JUMP",
      "path": "108"
    },
    "920": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1121,
        1230
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "921": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1179,
        1186
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "923": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1205,
        1223
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 17,
      "value": "0x2AB"
    },
    "926": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1218,
        1219
      ],
      "op": "DUP4",
      "path": "108"
    },
    "927": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1221,
        1222
      ],
      "op": "DUP4",
      "path": "108"
    },
    "928": {
      "fn": "SafeMathMock.doMul",
      "offset": [
        1205,
        1217
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x509"
    },
    "931": {
      "fn": "SafeMathMock.doMul",
      "jump": "i",
      "offset": [
        1205,
        1223
      ],
      "op": "JUMP",
      "path": "108"
    },
    "932": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2054,
        2369
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "933": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2189,
        2193
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "935": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2183,
        2194
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "936": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2141,
        2143
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x20"
    },
    "938": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2101,
        2112
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "940": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "941": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2237,
        2243
      ],
      "op": "DUP2",
      "path": "108"
    },
    "942": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2233,
        2234
      ],
      "op": "DUP2",
      "path": "108"
    },
    "943": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2233,
        2243
      ],
      "op": "LT",
      "path": "108"
    },
    "944": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "ISZERO",
      "path": "108"
    },
    "945": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2DE"
    },
    "948": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "949": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2264,
        2282
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 18,
      "value": "0x3BF"
    },
    "952": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2277,
        2278
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x1"
    },
    "954": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2280,
        2281
      ],
      "op": "DUP1",
      "path": "108"
    },
    "955": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2264,
        2276
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5C4"
    },
    "958": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2264,
        2282
      ],
      "op": "JUMP",
      "path": "108"
    },
    "959": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2264,
        2282
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 19,
      "value": "0x3C9"
    },
    "964": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "DUP2",
      "path": "108"
    },
    "965": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x76D"
    },
    "968": {
      "fn": "SafeMathMock.addMemoryCheck",
      "jump": "i",
      "offset": [
        2245,
        2248
      ],
      "op": "JUMP",
      "path": "108"
    },
    "969": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "970": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "971": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2245,
        2248
      ],
      "op": "POP",
      "path": "108"
    },
    "972": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x3AC"
    },
    "975": {
      "fn": "SafeMathMock.addMemoryCheck",
      "offset": [
        2213,
        2293
      ],
      "op": "JUMP",
      "path": "108"
    },
    "976": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2375,
        2690
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "977": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2510,
        2514
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x40"
    },
    "979": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2504,
        2515
      ],
      "op": "MLOAD",
      "path": "108"
    },
    "980": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2462,
        2464
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x20"
    },
    "982": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2422,
        2433
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "984": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "985": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2558,
        2564
      ],
      "op": "DUP2",
      "path": "108"
    },
    "986": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2554,
        2555
      ],
      "op": "DUP2",
      "path": "108"
    },
    "987": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2554,
        2564
      ],
      "op": "LT",
      "path": "108"
    },
    "988": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "ISZERO",
      "path": "108"
    },
    "989": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x2DE"
    },
    "992": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "JUMPI",
      "path": "108"
    },
    "993": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2585,
        2603
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 20,
      "value": "0x3EB"
    },
    "996": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2598,
        2599
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x1"
    },
    "998": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2601,
        2602
      ],
      "op": "DUP1",
      "path": "108"
    },
    "999": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2585,
        2597
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x4C1"
    },
    "1002": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2585,
        2603
      ],
      "op": "JUMP",
      "path": "108"
    },
    "1003": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2585,
        2603
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 21,
      "value": "0x3F5"
    },
    "1008": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "DUP2",
      "path": "108"
    },
    "1009": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x76D"
    },
    "1012": {
      "fn": "SafeMathMock.subMemoryCheck",
      "jump": "i",
      "offset": [
        2566,
        2569
      ],
      "op": "JUMP",
      "path": "108"
    },
    "1013": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "1014": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "SWAP1",
      "path": "108"
    },
    "1015": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2566,
        2569
      ],
      "op": "POP",
      "path": "108"
    },
    "1016": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x3D8"
    },
    "1019": {
      "fn": "SafeMathMock.subMemoryCheck",
      "offset": [
        2534,
        2614
      ],
      "op": "JUMP",
      "path": "108"
    },
    "1020": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1236,
        1345
      ],
      "op": "JUMPDEST",
      "path": "108"
    },
    "1021": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1294,
        1301
      ],
      "op": "PUSH1",
      "path": "108",
      "value": "0x0"
    },
    "1023": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1320,
        1338
      ],
      "op": "PUSH2",
      "path": "108",
      "statement": 22,
      "value": "0x2AB"
    },
    "1026": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1333,
        1334
      ],
      "op": "DUP4",
      "path": "108"
    },
    "1027": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1336,
        1337
      ],
      "op": "DUP4",
      "path": "108"
    },
    "1028": {
      "fn": "SafeMathMock.doDiv",
      "offset": [
        1320,
        1332
      ],
      "op": "PUSH2",
      "path": "108",
      "value": "0x5B8"
    },
    "1031": {
      "fn": "SafeMathMock.doDiv",
      "jump": "i",
      "offset": [
        1320,
        1338
      ],
      "op": "JUMP",
      "path": "108"
    },
    "1032": {
      "fn": "SafeMath.div",
      "offset": [
        5660,
        5890
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1033": {
      "fn": "SafeMath.div",
      "offset": [
        5776,
        5783
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1035": {
      "fn": "SafeMath.div",
      "offset": [
        5834,
        5846
      ],
      "op": "DUP2",
      "path": "203",
      "statement": 23
    },
    "1036": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        5827,
        5832
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1037": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x432"
    },
    "1040": {
      "branch": 44,
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1041": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x40"
    },
    "1043": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "MLOAD",
      "path": "203"
    },
    "1044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1052": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "MSTORE",
      "path": "203"
    },
    "1053": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x4"
    },
    "1055": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "ADD",
      "path": "203"
    },
    "1056": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x429"
    },
    "1059": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1060": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1061": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x6B6"
    },
    "1064": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        5819,
        5847
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1065": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1066": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x40"
    },
    "1068": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "MLOAD",
      "path": "203"
    },
    "1069": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1070": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1071": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "SUB",
      "path": "203"
    },
    "1072": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1073": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "203"
    },
    "1074": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1075": {
      "fn": "SafeMath.div",
      "offset": [
        5819,
        5847
      ],
      "op": "POP",
      "path": "203"
    },
    "1076": {
      "fn": "SafeMath.div",
      "offset": [
        5872,
        5873
      ],
      "op": "DUP3",
      "path": "203",
      "statement": 24
    },
    "1077": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5869
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1078": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1079": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x442"
    },
    "1082": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1083": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x442"
    },
    "1086": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x7B2"
    },
    "1089": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        5868,
        5873
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1090": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1091": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "DIV",
      "path": "203"
    },
    "1092": {
      "fn": "SafeMath.div",
      "offset": [
        5868,
        5873
      ],
      "op": "SWAP5",
      "path": "203"
    },
    "1093": {
      "fn": "SafeMath.div",
      "offset": [
        5660,
        5890
      ],
      "op": "SWAP4",
      "path": "203"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        5660,
        5890
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1099": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2316,
        2506
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1100": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2381
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1102": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2377,
        2381
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1103": {
      "branch": 45,
      "fn": "SafeMath.tryMod",
      "offset": [
        2430,
        2436
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1104": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2426,
        2455
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x45E"
    },
    "1107": {
      "branch": 45,
      "fn": "SafeMath.tryMod",
      "offset": [
        2426,
        2455
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2446,
        2451
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 25,
      "value": "0x0"
    },
    "1111": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2446,
        2451
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2446,
        2451
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1114": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x28B"
    },
    "1117": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2438,
        2455
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1118": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2426,
        2455
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1119": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2477,
        2481
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 26,
      "value": "0x1"
    },
    "1121": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2487,
        2488
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1122": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2484
      ],
      "op": "DUP6",
      "path": "203"
    },
    "1123": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1124": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x46F"
    },
    "1127": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1128": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x46F"
    },
    "1131": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x7B2"
    },
    "1134": {
      "fn": "SafeMath.tryMod",
      "jump": "i",
      "offset": [
        2483,
        2488
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1135": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1136": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2483,
        2488
      ],
      "op": "MOD",
      "path": "203"
    },
    "1137": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2469,
        2489
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1138": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2469,
        2489
      ],
      "op": "POP",
      "path": "203"
    },
    "1139": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2469,
        2489
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1140": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2469,
        2489
      ],
      "op": "POP",
      "path": "203"
    },
    "1141": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2316,
        2506
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1142": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2316,
        2506
      ],
      "op": "POP",
      "path": "203"
    },
    "1143": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2316,
        2506
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1144": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2316,
        2506
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1145": {
      "fn": "SafeMath.tryMod",
      "offset": [
        2316,
        2506
      ],
      "op": "POP",
      "path": "203"
    },
    "1146": {
      "fn": "SafeMath.tryMod",
      "jump": "o",
      "offset": [
        2316,
        2506
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1147": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1325,
        1818
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1148": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1386,
        1390
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1150": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1386,
        1390
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1151": {
      "branch": 46,
      "fn": "SafeMath.tryMul",
      "offset": [
        1669,
        1675
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1152": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1665,
        1693
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x48F"
    },
    "1155": {
      "branch": 46,
      "fn": "SafeMath.tryMul",
      "offset": [
        1665,
        1693
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1689
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 27,
      "value": "0x1"
    },
    "1159": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1685,
        1689
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1160": {
      "op": "POP"
    },
    "1161": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1691,
        1692
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1163": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1677,
        1693
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x28B"
    },
    "1166": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1677,
        1693
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1167": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1665,
        1693
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1168": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1719,
        1724
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1169": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1719,
        1724
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1170": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1719,
        1724
      ],
      "op": "MUL",
      "path": "203"
    },
    "1171": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1723,
        1724
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1172": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1719,
        1720
      ],
      "op": "DUP6",
      "path": "203"
    },
    "1173": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1719,
        1724
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1174": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1719,
        1720
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1175": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4A2"
    },
    "1178": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1747
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1179": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4A2"
    },
    "1182": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x7B2"
    },
    "1185": {
      "fn": "SafeMath.tryMul",
      "jump": "i",
      "offset": [
        1742,
        1747
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1186": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1747
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1187": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1747
      ],
      "op": "DIV",
      "path": "203"
    },
    "1188": {
      "branch": 47,
      "fn": "SafeMath.tryMul",
      "offset": [
        1742,
        1752
      ],
      "op": "EQ",
      "path": "203"
    },
    "1189": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1738,
        1771
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4B5"
    },
    "1192": {
      "branch": 47,
      "fn": "SafeMath.tryMul",
      "offset": [
        1738,
        1771
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1193": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1762,
        1767
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 28,
      "value": "0x0"
    },
    "1195": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1769,
        1770
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1196": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1197": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "POP",
      "path": "203"
    },
    "1198": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1199": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "POP",
      "path": "203"
    },
    "1200": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "POP",
      "path": "203"
    },
    "1201": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x28B"
    },
    "1204": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1754,
        1771
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1205": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1738,
        1771
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1206": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1797
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 29,
      "value": "0x1"
    },
    "1208": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1793,
        1797
      ],
      "op": "SWAP6",
      "path": "203"
    },
    "1209": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1799,
        1800
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1210": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1799,
        1800
      ],
      "op": "SWAP5",
      "path": "203"
    },
    "1211": {
      "op": "POP"
    },
    "1212": {
      "fn": "SafeMath.tryMul",
      "offset": [
        1325,
        1818
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "op": "POP"
    },
    "1216": {
      "fn": "SafeMath.tryMul",
      "jump": "o",
      "offset": [
        1325,
        1818
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1217": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1218": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1220": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "203",
      "statement": 30,
      "value": "0x2AB"
    },
    "1223": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1224": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1225": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x756"
    },
    "1228": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1229": {
      "fn": "SafeMath.mod",
      "offset": [
        4385,
        4481
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1230": {
      "fn": "SafeMath.mod",
      "offset": [
        4443,
        4450
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1232": {
      "fn": "SafeMath.mod",
      "offset": [
        4469,
        4474
      ],
      "op": "PUSH2",
      "path": "203",
      "statement": 31,
      "value": "0x2AB"
    },
    "1235": {
      "fn": "SafeMath.mod",
      "offset": [
        4473,
        4474
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1236": {
      "fn": "SafeMath.mod",
      "offset": [
        4469,
        4470
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1237": {
      "fn": "SafeMath.mod",
      "offset": [
        4469,
        4474
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x788"
    },
    "1240": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        4469,
        4474
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1241": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1967,
        2157
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1242": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2032
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1244": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2028,
        2032
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1245": {
      "branch": 48,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2081,
        2087
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1246": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2077,
        2106
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4EC"
    },
    "1249": {
      "branch": 48,
      "fn": "SafeMath.tryDiv",
      "offset": [
        2077,
        2106
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2097,
        2102
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 32,
      "value": "0x0"
    },
    "1253": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2097,
        2102
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2097,
        2102
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1256": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2089,
        2106
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x28B"
    },
    "1259": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2089,
        2106
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1260": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2077,
        2106
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1261": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2128,
        2132
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 33,
      "value": "0x1"
    },
    "1263": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2138,
        2139
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1264": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2135
      ],
      "op": "DUP6",
      "path": "203"
    },
    "1265": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1266": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4FD"
    },
    "1269": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1270": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4FD"
    },
    "1273": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x7B2"
    },
    "1276": {
      "fn": "SafeMath.tryDiv",
      "jump": "i",
      "offset": [
        2134,
        2139
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1277": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1278": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2134,
        2139
      ],
      "op": "DIV",
      "path": "203"
    },
    "1279": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2120,
        2140
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1280": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2120,
        2140
      ],
      "op": "POP",
      "path": "203"
    },
    "1281": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2120,
        2140
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1282": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        2120,
        2140
      ],
      "op": "POP",
      "path": "203"
    },
    "1283": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1967,
        2157
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1284": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1967,
        2157
      ],
      "op": "POP",
      "path": "203"
    },
    "1285": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1967,
        2157
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1286": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1967,
        2157
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1287": {
      "fn": "SafeMath.tryDiv",
      "offset": [
        1967,
        2157
      ],
      "op": "POP",
      "path": "203"
    },
    "1288": {
      "fn": "SafeMath.tryDiv",
      "jump": "o",
      "offset": [
        1967,
        2157
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1289": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1290": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1292": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "203",
      "statement": 34,
      "value": "0x2AB"
    },
    "1295": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1296": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1297": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x737"
    },
    "1300": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1301": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        626,
        842
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1302": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        687,
        691
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1304": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        687,
        691
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1305": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        748,
        753
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1306": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        748,
        753
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1307": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        748,
        753
      ],
      "op": "ADD",
      "path": "203"
    },
    "1308": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        771,
        776
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1309": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        771,
        776
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1310": {
      "branch": 49,
      "fn": "SafeMath.tryAdd",
      "offset": [
        771,
        776
      ],
      "op": "LT",
      "path": "203"
    },
    "1311": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        767,
        795
      ],
      "op": "ISZERO",
      "path": "203"
    },
    "1312": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        767,
        795
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x4B5"
    },
    "1315": {
      "branch": 49,
      "fn": "SafeMath.tryAdd",
      "offset": [
        767,
        795
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1316": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        786,
        791
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 35,
      "value": "0x0"
    },
    "1318": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        793,
        794
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1319": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1320": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "POP",
      "path": "203"
    },
    "1321": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1322": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "POP",
      "path": "203"
    },
    "1323": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "POP",
      "path": "203"
    },
    "1324": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x28B"
    },
    "1327": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        778,
        795
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1328": {
      "fn": "SafeMath.sub",
      "offset": [
        4945,
        5176
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1329": {
      "fn": "SafeMath.sub",
      "offset": [
        5061,
        5068
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1331": {
      "fn": "SafeMath.sub",
      "offset": [
        5120,
        5132
      ],
      "op": "DUP2",
      "path": "203",
      "statement": 36
    },
    "1332": {
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1333": {
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1334": {
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "GT",
      "path": "203"
    },
    "1335": {
      "branch": 50,
      "fn": "SafeMath.sub",
      "offset": [
        5112,
        5118
      ],
      "op": "ISZERO",
      "path": "203"
    },
    "1336": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x554"
    },
    "1339": {
      "branch": 50,
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1340": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x40"
    },
    "1342": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "MLOAD",
      "path": "203"
    },
    "1343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1351": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "MSTORE",
      "path": "203"
    },
    "1352": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x4"
    },
    "1354": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "ADD",
      "path": "203"
    },
    "1355": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x429"
    },
    "1358": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1359": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1360": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x6B6"
    },
    "1363": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        5104,
        5133
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1364": {
      "fn": "SafeMath.sub",
      "offset": [
        5104,
        5133
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "SafeMath.sub",
      "offset": [
        5154,
        5159
      ],
      "op": "SWAP1",
      "path": "203",
      "statement": 37
    },
    "1369": {
      "fn": "SafeMath.sub",
      "offset": [
        5154,
        5159
      ],
      "op": "SUB",
      "path": "203"
    },
    "1370": {
      "fn": "SafeMath.sub",
      "offset": [
        5154,
        5159
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1371": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        4945,
        5176
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1372": {
      "fn": "SafeMath.mod",
      "offset": [
        6536,
        6766
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1373": {
      "fn": "SafeMath.mod",
      "offset": [
        6652,
        6659
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1375": {
      "fn": "SafeMath.mod",
      "offset": [
        6710,
        6722
      ],
      "op": "DUP2",
      "path": "203",
      "statement": 38
    },
    "1376": {
      "branch": 51,
      "fn": "SafeMath.mod",
      "offset": [
        6703,
        6708
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1377": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x57D"
    },
    "1380": {
      "branch": 51,
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1381": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x40"
    },
    "1383": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "MLOAD",
      "path": "203"
    },
    "1384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1392": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "MSTORE",
      "path": "203"
    },
    "1393": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x4"
    },
    "1395": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "ADD",
      "path": "203"
    },
    "1396": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x429"
    },
    "1399": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1400": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1401": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x6B6"
    },
    "1404": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        6695,
        6723
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1405": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1406": {
      "fn": "SafeMath.mod",
      "offset": [
        6695,
        6723
      ],
      "op": "POP",
      "path": "203"
    },
    "1407": {
      "fn": "SafeMath.mod",
      "offset": [
        6748,
        6749
      ],
      "op": "DUP3",
      "path": "203",
      "statement": 39
    },
    "1408": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6745
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1409": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "DUP2",
      "path": "203"
    },
    "1410": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x58D"
    },
    "1413": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1414": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x58D"
    },
    "1417": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x7B2"
    },
    "1420": {
      "fn": "SafeMath.mod",
      "jump": "i",
      "offset": [
        6744,
        6749
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1421": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1422": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "MOD",
      "path": "203"
    },
    "1423": {
      "fn": "SafeMath.mod",
      "offset": [
        6744,
        6749
      ],
      "op": "SWAP5",
      "path": "203"
    },
    "1424": {
      "fn": "SafeMath.mod",
      "offset": [
        6536,
        6766
      ],
      "op": "SWAP4",
      "path": "203"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "fn": "SafeMath.mod",
      "jump": "o",
      "offset": [
        6536,
        6766
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1430": {
      "fn": "SafeMath.trySub",
      "offset": [
        988,
        1177
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1431": {
      "fn": "SafeMath.trySub",
      "offset": [
        1049,
        1053
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1433": {
      "fn": "SafeMath.trySub",
      "offset": [
        1055,
        1062
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1434": {
      "fn": "SafeMath.trySub",
      "offset": [
        1106,
        1107
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1435": {
      "fn": "SafeMath.trySub",
      "offset": [
        1102,
        1103
      ],
      "op": "DUP4",
      "path": "203"
    },
    "1436": {
      "branch": 52,
      "fn": "SafeMath.trySub",
      "offset": [
        1102,
        1107
      ],
      "op": "GT",
      "path": "203"
    },
    "1437": {
      "fn": "SafeMath.trySub",
      "offset": [
        1098,
        1126
      ],
      "op": "ISZERO",
      "path": "203"
    },
    "1438": {
      "fn": "SafeMath.trySub",
      "offset": [
        1098,
        1126
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x5AC"
    },
    "1441": {
      "branch": 52,
      "fn": "SafeMath.trySub",
      "offset": [
        1098,
        1126
      ],
      "op": "JUMPI",
      "path": "203"
    },
    "1442": {
      "op": "POP"
    },
    "1443": {
      "fn": "SafeMath.trySub",
      "offset": [
        1117,
        1122
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 40,
      "value": "0x0"
    },
    "1445": {
      "fn": "SafeMath.trySub",
      "offset": [
        1117,
        1122
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "SafeMath.trySub",
      "offset": [
        1117,
        1122
      ],
      "op": "DUP1",
      "path": "203"
    },
    "1448": {
      "fn": "SafeMath.trySub",
      "offset": [
        1109,
        1126
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x28B"
    },
    "1451": {
      "fn": "SafeMath.trySub",
      "offset": [
        1109,
        1126
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1452": {
      "fn": "SafeMath.trySub",
      "offset": [
        1098,
        1126
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "fn": "SafeMath.trySub",
      "offset": [
        1148,
        1152
      ],
      "op": "PUSH1",
      "path": "203",
      "statement": 41,
      "value": "0x1"
    },
    "1456": {
      "fn": "SafeMath.trySub",
      "offset": [
        1148,
        1152
      ],
      "op": "SWAP4",
      "path": "203"
    },
    "1457": {
      "fn": "SafeMath.trySub",
      "offset": [
        1154,
        1159
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1458": {
      "fn": "SafeMath.trySub",
      "offset": [
        1154,
        1159
      ],
      "op": "SWAP1",
      "path": "203"
    },
    "1459": {
      "fn": "SafeMath.trySub",
      "offset": [
        1154,
        1159
      ],
      "op": "SWAP3",
      "path": "203"
    },
    "1460": {
      "fn": "SafeMath.trySub",
      "offset": [
        1154,
        1159
      ],
      "op": "SUB",
      "path": "203"
    },
    "1461": {
      "fn": "SafeMath.trySub",
      "offset": [
        1154,
        1159
      ],
      "op": "SWAP2",
      "path": "203"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "fn": "SafeMath.trySub",
      "jump": "o",
      "offset": [
        988,
        1177
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1464": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1465": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1467": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "203",
      "statement": 42,
      "value": "0x2AB"
    },
    "1470": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1471": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1472": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x723"
    },
    "1475": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1476": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "203"
    },
    "1477": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "203",
      "value": "0x0"
    },
    "1479": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "203",
      "statement": 43,
      "value": "0x2AB"
    },
    "1482": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "203"
    },
    "1483": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "203"
    },
    "1484": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "203",
      "value": "0x70B"
    },
    "1487": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "203"
    },
    "1488": {
      "op": "JUMPDEST"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1491": {
      "op": "DUP1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1494": {
      "op": "DUP4"
    },
    "1495": {
      "op": "DUP6"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "op": "SLT"
    },
    "1498": {
      "op": "ISZERO"
    },
    "1499": {
      "op": "PUSH2",
      "value": "0x5E3"
    },
    "1502": {
      "op": "JUMPI"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1505": {
      "op": "DUP1"
    },
    "1506": {
      "op": "REVERT"
    },
    "1507": {
      "op": "JUMPDEST"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "DUP1"
    },
    "1511": {
      "op": "CALLDATALOAD"
    },
    "1512": {
      "op": "SWAP3"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1515": {
      "op": "SWAP1"
    },
    "1516": {
      "op": "SWAP2"
    },
    "1517": {
      "op": "ADD"
    },
    "1518": {
      "op": "CALLDATALOAD"
    },
    "1519": {
      "op": "SWAP2"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "jump": "o",
      "op": "JUMP"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1525": {
      "op": "DUP1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1530": {
      "op": "DUP5"
    },
    "1531": {
      "op": "DUP7"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "op": "SLT"
    },
    "1534": {
      "op": "ISZERO"
    },
    "1535": {
      "op": "PUSH2",
      "value": "0x607"
    },
    "1538": {
      "op": "JUMPI"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1541": {
      "op": "DUP1"
    },
    "1542": {
      "op": "REVERT"
    },
    "1543": {
      "op": "JUMPDEST"
    },
    "1544": {
      "op": "DUP4"
    },
    "1545": {
      "op": "CALLDATALOAD"
    },
    "1546": {
      "op": "SWAP3"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1550": {
      "op": "DUP5"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "CALLDATALOAD"
    },
    "1553": {
      "op": "SWAP2"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1557": {
      "op": "DUP5"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "CALLDATALOAD"
    },
    "1560": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1569": {
      "op": "DUP1"
    },
    "1570": {
      "op": "DUP3"
    },
    "1571": {
      "op": "GT"
    },
    "1572": {
      "op": "ISZERO"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x62D"
    },
    "1576": {
      "op": "JUMPI"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "REVERT"
    },
    "1581": {
      "op": "JUMPDEST"
    },
    "1582": {
      "op": "DUP2"
    },
    "1583": {
      "op": "DUP7"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "SWAP2"
    },
    "1586": {
      "op": "POP"
    },
    "1587": {
      "op": "DUP7"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1590": {
      "op": "DUP4"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "SLT"
    },
    "1593": {
      "op": "PUSH2",
      "value": "0x641"
    },
    "1596": {
      "op": "JUMPI"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1599": {
      "op": "DUP1"
    },
    "1600": {
      "op": "REVERT"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "DUP2"
    },
    "1603": {
      "op": "CALLDATALOAD"
    },
    "1604": {
      "op": "DUP2"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "GT"
    },
    "1607": {
      "op": "ISZERO"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "1618": {
      "jump": "i",
      "op": "JUMP"
    },
    "1619": {
      "op": "JUMPDEST"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1622": {
      "op": "MLOAD"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1625": {
      "op": "DUP3"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1629": {
      "op": "NOT"
    },
    "1630": {
      "op": "SWAP1"
    },
    "1631": {
      "op": "DUP2"
    },
    "1632": {
      "op": "AND"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "AND"
    },
    "1637": {
      "op": "DUP2"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "SWAP1"
    },
    "1640": {
      "op": "DUP4"
    },
    "1641": {
      "op": "DUP3"
    },
    "1642": {
      "op": "GT"
    },
    "1643": {
      "op": "DUP2"
    },
    "1644": {
      "op": "DUP4"
    },
    "1645": {
      "op": "LT"
    },
    "1646": {
      "op": "OR"
    },
    "1647": {
      "op": "ISZERO"
    },
    "1648": {
      "op": "PUSH2",
      "value": "0x67B"
    },
    "1651": {
      "op": "JUMPI"
    },
    "1652": {
      "op": "PUSH2",
      "value": "0x67B"
    },
    "1655": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "1658": {
      "jump": "i",
      "op": "JUMP"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "DUP2"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "DUP2"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "DUP10"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1670": {
      "op": "DUP5"
    },
    "1671": {
      "op": "DUP8"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "ADD"
    },
    "1674": {
      "op": "GT"
    },
    "1675": {
      "op": "ISZERO"
    },
    "1676": {
      "op": "PUSH2",
      "value": "0x694"
    },
    "1679": {
      "op": "JUMPI"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1682": {
      "op": "DUP1"
    },
    "1683": {
      "op": "REVERT"
    },
    "1684": {
      "op": "JUMPDEST"
    },
    "1685": {
      "op": "DUP3"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1688": {
      "op": "DUP7"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1692": {
      "op": "DUP4"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "op": "CALLDATACOPY"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1699": {
      "op": "DUP5"
    },
    "1700": {
      "op": "DUP4"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "ADD"
    },
    "1703": {
      "op": "MSTORE"
    },
    "1704": {
      "op": "DUP1"
    },
    "1705": {
      "op": "SWAP6"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "op": "SWAP3"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "op": "SWAP3"
    },
    "1715": {
      "op": "POP"
    },
    "1716": {
      "op": "SWAP3"
    },
    "1717": {
      "jump": "o",
      "op": "JUMP"
    },
    "1718": {
      "op": "JUMPDEST"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1723": {
      "op": "DUP1"
    },
    "1724": {
      "op": "DUP4"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "DUP4"
    },
    "1727": {
      "op": "MLOAD"
    },
    "1728": {
      "op": "DUP1"
    },
    "1729": {
      "op": "DUP3"
    },
    "1730": {
      "op": "DUP6"
    },
    "1731": {
      "op": "ADD"
    },
    "1732": {
      "op": "MSTORE"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "op": "DUP2"
    },
    "1737": {
      "op": "DUP2"
    },
    "1738": {
      "op": "LT"
    },
    "1739": {
      "op": "ISZERO"
    },
    "1740": {
      "op": "PUSH2",
      "value": "0x6E3"
    },
    "1743": {
      "op": "JUMPI"
    },
    "1744": {
      "op": "DUP6"
    },
    "1745": {
      "op": "DUP2"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "DUP4"
    },
    "1748": {
      "op": "ADD"
    },
    "1749": {
      "op": "MLOAD"
    },
    "1750": {
      "op": "DUP6"
    },
    "1751": {
      "op": "DUP3"
    },
    "1752": {
      "op": "ADD"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1755": {
      "op": "ADD"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "DUP3"
    },
    "1758": {
      "op": "ADD"
    },
    "1759": {
      "op": "PUSH2",
      "value": "0x6C7"
    },
    "1762": {
      "op": "JUMP"
    },
    "1763": {
      "op": "JUMPDEST"
    },
    "1764": {
      "op": "DUP2"
    },
    "1765": {
      "op": "DUP2"
    },
    "1766": {
      "op": "GT"
    },
    "1767": {
      "op": "ISZERO"
    },
    "1768": {
      "op": "PUSH2",
      "value": "0x6F5"
    },
    "1771": {
      "op": "JUMPI"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1776": {
      "op": "DUP4"
    },
    "1777": {
      "op": "DUP8"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "op": "ADD"
    },
    "1780": {
      "op": "MSTORE"
    },
    "1781": {
      "op": "JUMPDEST"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1788": {
      "op": "NOT"
    },
    "1789": {
      "op": "AND"
    },
    "1790": {
      "op": "SWAP3"
    },
    "1791": {
      "op": "SWAP1"
    },
    "1792": {
      "op": "SWAP3"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "op": "SWAP4"
    },
    "1798": {
      "op": "SWAP3"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "op": "POP"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "jump": "o",
      "op": "JUMP"
    },
    "1803": {
      "op": "JUMPDEST"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1806": {
      "op": "DUP3"
    },
    "1807": {
      "op": "NOT"
    },
    "1808": {
      "op": "DUP3"
    },
    "1809": {
      "op": "GT"
    },
    "1810": {
      "op": "ISZERO"
    },
    "1811": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1814": {
      "op": "JUMPI"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1818": {
      "op": "PUSH2",
      "value": "0x79C"
    },
    "1821": {
      "jump": "i",
      "op": "JUMP"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "POP"
    },
    "1824": {
      "op": "ADD"
    },
    "1825": {
      "op": "SWAP1"
    },
    "1826": {
      "jump": "o",
      "op": "JUMP"
    },
    "1827": {
      "op": "JUMPDEST"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1830": {
      "op": "DUP3"
    },
    "1831": {
      "op": "PUSH2",
      "value": "0x732"
    },
    "1834": {
      "op": "JUMPI"
    },
    "1835": {
      "op": "PUSH2",
      "value": "0x732"
    },
    "1838": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "1841": {
      "jump": "i",
      "op": "JUMP"
    },
    "1842": {
      "op": "JUMPDEST"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "op": "DIV"
    },
    "1845": {
      "op": "SWAP1"
    },
    "1846": {
      "jump": "o",
      "op": "JUMP"
    },
    "1847": {
      "op": "JUMPDEST"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1850": {
      "op": "DUP2"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1853": {
      "op": "NOT"
    },
    "1854": {
      "op": "DIV"
    },
    "1855": {
      "op": "DUP4"
    },
    "1856": {
      "op": "GT"
    },
    "1857": {
      "op": "DUP3"
    },
    "1858": {
      "op": "ISZERO"
    },
    "1859": {
      "op": "ISZERO"
    },
    "1860": {
      "op": "AND"
    },
    "1861": {
      "op": "ISZERO"
    },
    "1862": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1865": {
      "op": "JUMPI"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1869": {
      "op": "PUSH2",
      "value": "0x79C"
    },
    "1872": {
      "jump": "i",
      "op": "JUMP"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "MUL"
    },
    "1876": {
      "op": "SWAP1"
    },
    "1877": {
      "jump": "o",
      "op": "JUMP"
    },
    "1878": {
      "op": "JUMPDEST"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "op": "DUP3"
    },
    "1882": {
      "op": "DUP3"
    },
    "1883": {
      "op": "LT"
    },
    "1884": {
      "op": "ISZERO"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x768"
    },
    "1888": {
      "op": "JUMPI"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x768"
    },
    "1892": {
      "op": "PUSH2",
      "value": "0x79C"
    },
    "1895": {
      "jump": "i",
      "op": "JUMP"
    },
    "1896": {
      "op": "JUMPDEST"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "op": "SWAP1"
    },
    "1900": {
      "jump": "o",
      "op": "JUMP"
    },
    "1901": {
      "op": "JUMPDEST"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1906": {
      "op": "NOT"
    },
    "1907": {
      "op": "DUP3"
    },
    "1908": {
      "op": "EQ"
    },
    "1909": {
      "op": "ISZERO"
    },
    "1910": {
      "op": "PUSH2",
      "value": "0x781"
    },
    "1913": {
      "op": "JUMPI"
    },
    "1914": {
      "op": "PUSH2",
      "value": "0x781"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x79C"
    },
    "1920": {
      "jump": "i",
      "op": "JUMP"
    },
    "1921": {
      "op": "JUMPDEST"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "SWAP1"
    },
    "1927": {
      "jump": "o",
      "op": "JUMP"
    },
    "1928": {
      "op": "JUMPDEST"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1931": {
      "op": "DUP3"
    },
    "1932": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1935": {
      "op": "JUMPI"
    },
    "1936": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "1942": {
      "jump": "i",
      "op": "JUMP"
    },
    "1943": {
      "op": "JUMPDEST"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "MOD"
    },
    "1946": {
      "op": "SWAP1"
    },
    "1947": {
      "jump": "o",
      "op": "JUMP"
    },
    "1948": {
      "op": "JUMPDEST"
    },
    "1949": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1969": {
      "op": "REVERT"
    },
    "1970": {
      "op": "JUMPDEST"
    },
    "1971": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1981": {
      "op": "MSTORE"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1986": {
      "op": "MSTORE"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1991": {
      "op": "REVERT"
    },
    "1992": {
      "op": "JUMPDEST"
    },
    "1993": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2013": {
      "op": "REVERT"
    }
  },
  "sha1": "731b1eeef892d98f03d186222d06276c621820ee",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/SafeMath.sol\";\n\ncontract SafeMathMock {\n    function tryAdd(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryAdd(a, b);\n    }\n\n    function trySub(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.trySub(a, b);\n    }\n\n    function tryMul(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMul(a, b);\n    }\n\n    function tryDiv(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryDiv(a, b);\n    }\n\n    function tryMod(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {\n        return SafeMath.tryMod(a, b);\n    }\n\n    // using the do* naming convention to avoid warnings due to clashing opcode names\n\n    function doAdd(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.add(a, b);\n    }\n\n    function doSub(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.sub(a, b);\n    }\n\n    function doMul(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mul(a, b);\n    }\n\n    function doDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.div(a, b);\n    }\n\n    function doMod(uint256 a, uint256 b) public pure returns (uint256) {\n        return SafeMath.mod(a, b);\n    }\n\n    function subWithMessage(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) public pure returns (uint256) {\n        return SafeMath.sub(a, b, errorMessage);\n    }\n\n    function divWithMessage(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) public pure returns (uint256) {\n        return SafeMath.div(a, b, errorMessage);\n    }\n\n    function modWithMessage(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) public pure returns (uint256) {\n        return SafeMath.mod(a, b, errorMessage);\n    }\n\n    function addMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.add(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function subMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.sub(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function mulMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.mul(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function divMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.div(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n\n    function modMemoryCheck() public pure returns (uint256 mem) {\n        uint256 length = 32;\n        assembly {\n            mem := mload(0x40)\n        }\n        for (uint256 i = 0; i < length; ++i) {\n            SafeMath.mod(1, 1);\n        }\n        assembly {\n            mem := sub(mload(0x40), mem)\n        }\n    }\n}\n",
  "sourceMap": "96:3559:108:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/SafeMathMock.sol",
  "type": "contract"
}