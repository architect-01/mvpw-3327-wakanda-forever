{
  "abi": [
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "157": "contracts/OpenZepellin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "32": "contracts/OpenZepellin/contracts/interfaces/draft-IERC2612.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/interfaces/draft-IERC2612.sol",
    "exportedSymbols": {
      "IERC20Permit": [
        20395
      ],
      "IERC2612": [
        6174
      ]
    },
    "id": 6175,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6170,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "98:23:32"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "file": "../token/ERC20/extensions/draft-IERC20Permit.sol",
        "id": 6171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6175,
        "sourceUnit": 20396,
        "src": "123:58:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6172,
              "name": "IERC20Permit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20395,
              "src": "205:12:32"
            },
            "id": 6173,
            "nodeType": "InheritanceSpecifier",
            "src": "205:12:32"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 6174,
        "linearizedBaseContracts": [
          6174,
          20395
        ],
        "name": "IERC2612",
        "nameLocation": "193:8:32",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6175,
        "src": "183:37:32",
        "usedErrors": []
      }
    ],
    "src": "98:123:32"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "IERC2612",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "IERC20Permit"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
      },
      "nonces(address)": {
        "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
      }
    },
    "version": 1
  },
  "offset": [
    183,
    220
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "3c0201f47bf8d9a8d961c9de61b6fae478300d1f",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (interfaces/draft-IERC2612.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/extensions/draft-IERC20Permit.sol\";\n\ninterface IERC2612 is IERC20Permit {}\n",
  "sourceMap": "",
  "sourcePath": "contracts/OpenZepellin/contracts/interfaces/draft-IERC2612.sol",
  "type": "interface"
}