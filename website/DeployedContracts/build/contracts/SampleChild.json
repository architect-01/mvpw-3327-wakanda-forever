{
  "abi": [
    {
      "inputs": [],
      "name": "child",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "father",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gramps",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mother",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_gramps",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_father",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_child",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_gramps",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_father",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isHuman",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mother",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "130": "contracts/OpenZepellin/contracts/proxy/utils/Initializable.sol",
    "99": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "Initializable": [
        15984
      ],
      "SampleChild": [
        11906
      ],
      "SampleFather": [
        11865
      ],
      "SampleGramps": [
        11837
      ],
      "SampleHuman": [
        11787
      ],
      "SampleMother": [
        11812
      ]
    },
    "id": 11907,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11770,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:99"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 11771,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11907,
        "sourceUnit": 15985,
        "src": "58:42:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11773,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "496:13:99"
            },
            "id": 11774,
            "nodeType": "InheritanceSpecifier",
            "src": "496:13:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11772,
          "nodeType": "StructuredDocumentation",
          "src": "411:60:99",
          "text": " Sample base intializable contract that is a human"
        },
        "fullyImplemented": true,
        "id": 11787,
        "linearizedBaseContracts": [
          11787,
          15984
        ],
        "name": "SampleHuman",
        "nameLocation": "481:11:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4a6c9db6",
            "id": 11776,
            "mutability": "mutable",
            "name": "isHuman",
            "nameLocation": "528:7:99",
            "nodeType": "VariableDeclaration",
            "scope": 11787,
            "src": "516:19:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11775,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "516:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11785,
              "nodeType": "Block",
              "src": "583:31:99",
              "statements": [
                {
                  "expression": {
                    "id": 11783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11781,
                      "name": "isHuman",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11776,
                      "src": "593:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "603:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "593:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11784,
                  "nodeType": "ExpressionStatement",
                  "src": "593:14:99"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 11786,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11779,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11778,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "571:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "551:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:99"
            },
            "returnParameters": {
              "id": 11780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:99"
            },
            "scope": 11787,
            "src": "542:72:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "472:144:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11789,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "716:13:99"
            },
            "id": 11790,
            "nodeType": "InheritanceSpecifier",
            "src": "716:13:99"
          },
          {
            "baseName": {
              "id": 11791,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11787,
              "src": "731:11:99"
            },
            "id": 11792,
            "nodeType": "InheritanceSpecifier",
            "src": "731:11:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11788,
          "nodeType": "StructuredDocumentation",
          "src": "618:72:99",
          "text": " Sample base intializable contract that defines a field mother"
        },
        "fullyImplemented": true,
        "id": 11812,
        "linearizedBaseContracts": [
          11812,
          11787,
          15984
        ],
        "name": "SampleMother",
        "nameLocation": "700:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ed7dfee3",
            "id": 11794,
            "mutability": "mutable",
            "name": "mother",
            "nameLocation": "764:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11812,
            "src": "749:21:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11793,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "749:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11810,
              "nodeType": "Block",
              "src": "839:65:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11801,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11787,
                        "src": "849:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$11787_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 11803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11786,
                      "src": "849:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:24:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11805,
                  "nodeType": "ExpressionStatement",
                  "src": "849:24:99"
                },
                {
                  "expression": {
                    "id": 11808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11806,
                      "name": "mother",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11794,
                      "src": "883:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11807,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11796,
                      "src": "892:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "883:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11809,
                  "nodeType": "ExpressionStatement",
                  "src": "883:14:99"
                }
              ]
            },
            "functionSelector": "fe4b84df",
            "id": 11811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11798,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "827:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "827:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "786:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11796,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "805:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11811,
                  "src": "797:13:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:15:99"
            },
            "returnParameters": {
              "id": 11800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:99"
            },
            "scope": 11812,
            "src": "777:127:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "691:215:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11814,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1006:13:99"
            },
            "id": 11815,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:13:99"
          },
          {
            "baseName": {
              "id": 11816,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11787,
              "src": "1021:11:99"
            },
            "id": 11817,
            "nodeType": "InheritanceSpecifier",
            "src": "1021:11:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11813,
          "nodeType": "StructuredDocumentation",
          "src": "908:72:99",
          "text": " Sample base intializable contract that defines a field gramps"
        },
        "fullyImplemented": true,
        "id": 11837,
        "linearizedBaseContracts": [
          11837,
          11787,
          15984
        ],
        "name": "SampleGramps",
        "nameLocation": "990:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fa39851f",
            "id": 11819,
            "mutability": "mutable",
            "name": "gramps",
            "nameLocation": "1053:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11837,
            "src": "1039:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11818,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1039:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11835,
              "nodeType": "Block",
              "src": "1134:65:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11826,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11787,
                        "src": "1144:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$11787_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 11828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11786,
                      "src": "1144:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:24:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11830,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:24:99"
                },
                {
                  "expression": {
                    "id": 11833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11831,
                      "name": "gramps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11819,
                      "src": "1178:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11832,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11821,
                      "src": "1187:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1178:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11834,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:14:99"
                }
              ]
            },
            "functionSelector": "f62d1888",
            "id": 11836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11824,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11823,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1122:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1075:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11821,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1100:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11836,
                  "src": "1086:19:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:21:99"
            },
            "returnParameters": {
              "id": 11825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:99"
            },
            "scope": 11837,
            "src": "1066:133:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "981:220:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11839,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1325:13:99"
            },
            "id": 11840,
            "nodeType": "InheritanceSpecifier",
            "src": "1325:13:99"
          },
          {
            "baseName": {
              "id": 11841,
              "name": "SampleGramps",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11837,
              "src": "1340:12:99"
            },
            "id": 11842,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:12:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11838,
          "nodeType": "StructuredDocumentation",
          "src": "1203:96:99",
          "text": " Sample base intializable contract that defines a field father and extends from gramps"
        },
        "fullyImplemented": true,
        "id": 11865,
        "linearizedBaseContracts": [
          11865,
          11837,
          11787,
          15984
        ],
        "name": "SampleFather",
        "nameLocation": "1309:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1c8aca3b",
            "id": 11844,
            "mutability": "mutable",
            "name": "father",
            "nameLocation": "1374:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11865,
            "src": "1359:21:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11863,
              "nodeType": "Block",
              "src": "1466:75:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11856,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11846,
                        "src": "1500:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 11853,
                        "name": "SampleGramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11837,
                        "src": "1476:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleGramps_$11837_$",
                          "typeString": "type(contract SampleGramps)"
                        }
                      },
                      "id": 11855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11836,
                      "src": "1476:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 11857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11858,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:32:99"
                },
                {
                  "expression": {
                    "id": 11861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11859,
                      "name": "father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11844,
                      "src": "1518:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11860,
                      "name": "_father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11848,
                      "src": "1527:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1518:16:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11862,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:16:99"
                }
              ]
            },
            "functionSelector": "8beaf7d7",
            "id": 11864,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11850,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1454:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1454:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1396:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11846,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1421:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11864,
                  "src": "1407:21:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11845,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11848,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1438:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11864,
                  "src": "1430:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:40:99"
            },
            "returnParameters": {
              "id": 11852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:99"
            },
            "scope": 11865,
            "src": "1387:154:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "1300:243:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11867,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1623:13:99"
            },
            "id": 11868,
            "nodeType": "InheritanceSpecifier",
            "src": "1623:13:99"
          },
          {
            "baseName": {
              "id": 11869,
              "name": "SampleMother",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11812,
              "src": "1638:12:99"
            },
            "id": 11870,
            "nodeType": "InheritanceSpecifier",
            "src": "1638:12:99"
          },
          {
            "baseName": {
              "id": 11871,
              "name": "SampleFather",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11865,
              "src": "1652:12:99"
            },
            "id": 11872,
            "nodeType": "InheritanceSpecifier",
            "src": "1652:12:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11866,
          "nodeType": "StructuredDocumentation",
          "src": "1545:53:99",
          "text": " Child extends from mother, father (gramps)"
        },
        "fullyImplemented": true,
        "id": 11906,
        "linearizedBaseContracts": [
          11906,
          11865,
          11837,
          11812,
          11787,
          15984
        ],
        "name": "SampleChild",
        "nameLocation": "1608:11:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "237b5e96",
            "id": 11874,
            "mutability": "mutable",
            "name": "child",
            "nameLocation": "1686:5:99",
            "nodeType": "VariableDeclaration",
            "scope": 11906,
            "src": "1671:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1671:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11904,
              "nodeType": "Block",
              "src": "1848:124:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11890,
                        "name": "_mother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11876,
                        "src": "1882:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11887,
                        "name": "SampleMother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11812,
                        "src": "1858:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleMother_$11812_$",
                          "typeString": "type(contract SampleMother)"
                        }
                      },
                      "id": 11889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11811,
                      "src": "1858:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11892,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:32:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11896,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11878,
                        "src": "1924:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 11897,
                        "name": "_father",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11880,
                        "src": "1933:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11893,
                        "name": "SampleFather",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11865,
                        "src": "1900:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleFather_$11865_$",
                          "typeString": "type(contract SampleFather)"
                        }
                      },
                      "id": 11895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11864,
                      "src": "1900:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 11898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:41:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11899,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:41:99"
                },
                {
                  "expression": {
                    "id": 11902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11900,
                      "name": "child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11874,
                      "src": "1951:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11901,
                      "name": "_child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11882,
                      "src": "1959:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1951:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11903,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:14:99"
                }
              ]
            },
            "functionSelector": "6f2edbd2",
            "id": 11905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11884,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1836:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1836:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1707:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11876,
                  "mutability": "mutable",
                  "name": "_mother",
                  "nameLocation": "1735:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1727:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11878,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1766:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1752:21:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11880,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1791:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1783:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11882,
                  "mutability": "mutable",
                  "name": "_child",
                  "nameLocation": "1816:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1808:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:111:99"
            },
            "returnParameters": {
              "id": 11886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:99"
            },
            "scope": 11906,
            "src": "1698:274:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "1599:375:99",
        "usedErrors": []
      }
    ],
    "src": "33:1942:99"
  },
  "bytecode": "608060405234801561001057600080fd5b506107bb806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638beaf7d7116100665780638beaf7d714610108578063ed7dfee31461011b578063f62d188814610124578063fa39851f14610137578063fe4b84df1461014c57600080fd5b80631c8aca3b146100a3578063237b5e96146100bf5780634a6c9db6146100c85780636f2edbd2146100eb5780638129fc1c14610100575b600080fd5b6100ac60035481565b6040519081526020015b60405180910390f35b6100ac60045481565b6000546100db9062010000900460ff1681565b60405190151581526020016100b6565b6100fe6100f936600461063a565b61015f565b005b6100fe6101f0565b6100fe6101163660046105dc565b61026d565b6100ac60015481565b6100fe61013236600461059f565b6102e9565b61013f610372565b6040516100b69190610691565b6100fe61015a366004610621565b610400565b600054610100900460ff1680610178575060005460ff16155b61019d5760405162461bcd60e51b8152600401610194906106e6565b60405180910390fd5b600054610100900460ff161580156101bf576000805461ffff19166101011790555b6101c885610400565b6101d2848461026d565b600482905580156101e9576000805461ff00191690555b5050505050565b600054610100900460ff1680610209575060005460ff16155b6102255760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff16158015610247576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561026a576000805461ff00191690555b50565b600054610100900460ff1680610286575060005460ff16155b6102a25760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff161580156102c4576000805461ffff19166101011790555b6102cd836102e9565b600382905580156102e4576000805461ff00191690555b505050565b600054610100900460ff1680610302575060005460ff16155b61031e5760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff16158015610340576000805461ffff19166101011790555b6103486101f0565b815161035b906002906020850190610479565b50801561036e576000805461ff00191690555b5050565b6002805461037f90610734565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90610734565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b600054610100900460ff1680610419575060005460ff16155b6104355760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff16158015610457576000805461ffff19166101011790555b61045f6101f0565b6001829055801561036e576000805461ff00191690555050565b82805461048590610734565b90600052602060002090601f0160209004810192826104a757600085556104ed565b82601f106104c057805160ff19168380011785556104ed565b828001600101855582156104ed579182015b828111156104ed5782518255916020019190600101906104d2565b506104f99291506104fd565b5090565b5b808211156104f957600081556001016104fe565b600082601f83011261052357600080fd5b813567ffffffffffffffff8082111561053e5761053e61076f565b604051601f8301601f19908116603f011681019082821181831017156105665761056661076f565b8160405283815286602085880101111561057f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156105b157600080fd5b813567ffffffffffffffff8111156105c857600080fd5b6105d484828501610512565b949350505050565b600080604083850312156105ef57600080fd5b823567ffffffffffffffff81111561060657600080fd5b61061285828601610512565b95602094909401359450505050565b60006020828403121561063357600080fd5b5035919050565b6000806000806080858703121561065057600080fd5b84359350602085013567ffffffffffffffff81111561066e57600080fd5b61067a87828801610512565b949794965050505060408301359260600135919050565b600060208083528351808285015260005b818110156106be578581018301518582016040015282016106a2565b818111156106d0576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061074857607f821691505b6020821081141561076957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209b54a5f2a940f5d8ac5fc4fb9cf3c58b0ce30e4c78db5dd2af1e8a15c58cbb9464736f6c63430008060033",
  "bytecodeSha1": "23939d60e594cd8c541580f78ef028d4409f7c51",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SampleChild",
  "coverageMap": {
    "branches": {
      "130": {
        "SampleMother.initialize": {
          "10": [
            2037,
            2050,
            true
          ],
          "11": [
            2055,
            2067,
            true
          ]
        }
      },
      "99": {}
    },
    "statements": {
      "130": {},
      "99": {
        "SampleChild.initialize": {
          "0": [
            1858,
            1890
          ],
          "1": [
            1900,
            1941
          ],
          "2": [
            1951,
            1965
          ]
        },
        "SampleFather.initialize": {
          "4": [
            1476,
            1508
          ],
          "5": [
            1518,
            1534
          ]
        },
        "SampleGramps.initialize": {
          "6": [
            1144,
            1168
          ],
          "7": [
            1178,
            1192
          ]
        },
        "SampleHuman.initialize": {
          "3": [
            593,
            607
          ]
        },
        "SampleMother.initialize": {
          "8": [
            849,
            873
          ],
          "9": [
            883,
            897
          ]
        }
      }
    }
  },
  "dependencies": [
    "Initializable",
    "SampleFather",
    "SampleGramps",
    "SampleHuman",
    "SampleMother"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638beaf7d7116100665780638beaf7d714610108578063ed7dfee31461011b578063f62d188814610124578063fa39851f14610137578063fe4b84df1461014c57600080fd5b80631c8aca3b146100a3578063237b5e96146100bf5780634a6c9db6146100c85780636f2edbd2146100eb5780638129fc1c14610100575b600080fd5b6100ac60035481565b6040519081526020015b60405180910390f35b6100ac60045481565b6000546100db9062010000900460ff1681565b60405190151581526020016100b6565b6100fe6100f936600461063a565b61015f565b005b6100fe6101f0565b6100fe6101163660046105dc565b61026d565b6100ac60015481565b6100fe61013236600461059f565b6102e9565b61013f610372565b6040516100b69190610691565b6100fe61015a366004610621565b610400565b600054610100900460ff1680610178575060005460ff16155b61019d5760405162461bcd60e51b8152600401610194906106e6565b60405180910390fd5b600054610100900460ff161580156101bf576000805461ffff19166101011790555b6101c885610400565b6101d2848461026d565b600482905580156101e9576000805461ff00191690555b5050505050565b600054610100900460ff1680610209575060005460ff16155b6102255760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff16158015610247576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561026a576000805461ff00191690555b50565b600054610100900460ff1680610286575060005460ff16155b6102a25760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff161580156102c4576000805461ffff19166101011790555b6102cd836102e9565b600382905580156102e4576000805461ff00191690555b505050565b600054610100900460ff1680610302575060005460ff16155b61031e5760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff16158015610340576000805461ffff19166101011790555b6103486101f0565b815161035b906002906020850190610479565b50801561036e576000805461ff00191690555b5050565b6002805461037f90610734565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90610734565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b600054610100900460ff1680610419575060005460ff16155b6104355760405162461bcd60e51b8152600401610194906106e6565b600054610100900460ff16158015610457576000805461ffff19166101011790555b61045f6101f0565b6001829055801561036e576000805461ff00191690555050565b82805461048590610734565b90600052602060002090601f0160209004810192826104a757600085556104ed565b82601f106104c057805160ff19168380011785556104ed565b828001600101855582156104ed579182015b828111156104ed5782518255916020019190600101906104d2565b506104f99291506104fd565b5090565b5b808211156104f957600081556001016104fe565b600082601f83011261052357600080fd5b813567ffffffffffffffff8082111561053e5761053e61076f565b604051601f8301601f19908116603f011681019082821181831017156105665761056661076f565b8160405283815286602085880101111561057f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156105b157600080fd5b813567ffffffffffffffff8111156105c857600080fd5b6105d484828501610512565b949350505050565b600080604083850312156105ef57600080fd5b823567ffffffffffffffff81111561060657600080fd5b61061285828601610512565b95602094909401359450505050565b60006020828403121561063357600080fd5b5035919050565b6000806000806080858703121561065057600080fd5b84359350602085013567ffffffffffffffff81111561066e57600080fd5b61067a87828801610512565b949794965050505060408301359260600135919050565b600060208083528351808285015260005b818110156106be578581018301518582016040015282016106a2565b818111156106d0576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061074857607f821691505b6020821081141561076957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209b54a5f2a940f5d8ac5fc4fb9cf3c58b0ce30e4c78db5dd2af1e8a15c58cbb9464736f6c63430008060033",
  "deployedSourceMap": "1599:375:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:21;;;;;;;;;3532:25:211;;;3520:2;3505:18;1359:21:99;;;;;;;;1671:20;;;;;;516:19;;;;;;;;;;;;;;;2342:14:211;;2335:22;2317:41;;2305:2;2290:18;516:19:99;2272:92:211;1698:274:99;;;;;;:::i;:::-;;:::i;:::-;;542:72;;;:::i;1387:154::-;;;;;;:::i;:::-;;:::i;749:21::-;;;;;;1066:133;;;;;;:::i;:::-;;:::i;1039:20::-;;;:::i;:::-;;;;;;;:::i;777:127::-;;;;;;:::i;:::-;;:::i;1698:274::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;;;;;;;;;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;1858:32:99::1;1882:7;1858:23;:32::i;:::-;1900:41;1924:7;1933;1900:23;:41::i;:::-;1951:5;:14:::0;;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;1698:274:99;;;;:::o;542:72::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;593:7:99::1;:14:::0;;-1:-1:-1;;593:14:99::1;::::0;::::1;::::0;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;542:72:99:o;1387:154::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;1476:32:99::1;1500:7;1476:23;:32::i;:::-;1518:6;:16:::0;;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;1387:154:99;;:::o;1066:133::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;1144:24:99::1;:22;:24::i;:::-;1178:14:::0;;::::1;::::0;:6:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2299::130::0;2295:66;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;1066:133:99;:::o;1039:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;777:127::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;849:24:99::1;:22;:24::i;:::-;883:6;:14:::0;;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2019:348;777:127:99;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:719:211;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;128:1;125;118:12;77:2;164:6;151:20;190:18;227:2;223;220:10;217:2;;;233:18;;:::i;:::-;308:2;302:9;276:2;362:13;;-1:-1:-1;;358:22:211;;;382:2;354:31;350:40;338:53;;;406:18;;;426:22;;;403:46;400:2;;;452:18;;:::i;:::-;492:10;488:2;481:22;527:2;519:6;512:18;573:3;566:4;561:2;553:6;549:15;545:26;542:35;539:2;;;590:1;587;580:12;539:2;654;647:4;639:6;635:17;628:4;620:6;616:17;603:54;701:1;694:4;689:2;681:6;677:15;673:26;666:37;721:6;712:15;;;;;;67:666;;;;:::o;738:322::-;807:6;860:2;848:9;839:7;835:23;831:32;828:2;;;876:1;873;866:12;828:2;916:9;903:23;949:18;941:6;938:30;935:2;;;981:1;978;971:12;935:2;1004:50;1046:7;1037:6;1026:9;1022:22;1004:50;:::i;:::-;994:60;818:242;-1:-1:-1;;;;818:242:211:o;1065:390::-;1143:6;1151;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1260:9;1247:23;1293:18;1285:6;1282:30;1279:2;;;1325:1;1322;1315:12;1279:2;1348:50;1390:7;1381:6;1370:9;1366:22;1348:50;:::i;:::-;1338:60;1445:2;1430:18;;;;1417:32;;-1:-1:-1;;;;1162:293:211:o;1460:180::-;1519:6;1572:2;1560:9;1551:7;1547:23;1543:32;1540:2;;;1588:1;1585;1578:12;1540:2;-1:-1:-1;1611:23:211;;1530:110;-1:-1:-1;1530:110:211:o;1645:527::-;1741:6;1749;1757;1765;1818:3;1806:9;1797:7;1793:23;1789:33;1786:2;;;1835:1;1832;1825:12;1786:2;1871:9;1858:23;1848:33;;1932:2;1921:9;1917:18;1904:32;1959:18;1951:6;1948:30;1945:2;;;1991:1;1988;1981:12;1945:2;2014:50;2056:7;2047:6;2036:9;2032:22;2014:50;:::i;:::-;1776:396;;2004:60;;-1:-1:-1;;;;2111:2:211;2096:18;;2083:32;;2162:2;2147:18;2134:32;;1776:396;-1:-1:-1;1776:396:211:o;2369:597::-;2481:4;2510:2;2539;2528:9;2521:21;2571:6;2565:13;2614:6;2609:2;2598:9;2594:18;2587:34;2639:1;2649:140;2663:6;2660:1;2657:13;2649:140;;;2758:14;;;2754:23;;2748:30;2724:17;;;2743:2;2720:26;2713:66;2678:10;;2649:140;;;2807:6;2804:1;2801:13;2798:2;;;2877:1;2872:2;2863:6;2852:9;2848:22;2844:31;2837:42;2798:2;-1:-1:-1;2950:2:211;2929:15;-1:-1:-1;;2925:29:211;2910:45;;;;2957:2;2906:54;;2490:476;-1:-1:-1;;;2490:476:211:o;2971:410::-;3173:2;3155:21;;;3212:2;3192:18;;;3185:30;3251:34;3246:2;3231:18;;3224:62;-1:-1:-1;;;3317:2:211;3302:18;;3295:44;3371:3;3356:19;;3145:236::o;3568:380::-;3647:1;3643:12;;;;3690;;;3711:2;;3765:4;3757:6;3753:17;3743:27;;3711:2;3818;3810:6;3807:14;3787:18;3784:38;3781:2;;;3864:10;3859:3;3855:20;3852:1;3845:31;3899:4;3896:1;3889:15;3927:4;3924:1;3917:15;3781:2;;3623:325;;;:::o;3953:127::-;4014:10;4009:3;4005:20;4002:1;3995:31;4045:4;4042:1;4035:15;4069:4;4066:1;4059:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "Child extends from mother, father (gramps)",
    "version": 1
  },
  "offset": [
    1599,
    1974
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BEAF7D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8BEAF7D7 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xED7DFEE3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xFA39851F EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C8ACA3B EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x237B5E96 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x4A6C9DB6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x6F2EDBD2 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xDB SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6 JUMP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x63A JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH2 0xAC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x59F JUMP JUMPDEST PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x621 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x178 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1C8 DUP6 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x1D2 DUP5 DUP5 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x209 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x286 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2CD DUP4 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x302 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x348 PUSH2 0x1F0 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x35B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x479 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x37F SWAP1 PUSH2 0x734 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AB SWAP1 PUSH2 0x734 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x419 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x435 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x45F PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x734 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x4ED JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4C0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4ED JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4ED JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4D2 JUMP JUMPDEST POP PUSH2 0x4F9 SWAP3 SWAP2 POP PUSH2 0x4FD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53E PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x76F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP5 DUP3 DUP6 ADD PUSH2 0x512 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x612 DUP6 DUP3 DUP7 ADD PUSH2 0x512 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67A DUP8 DUP3 DUP9 ADD PUSH2 0x512 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6A2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x748 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x769 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 SLOAD 0xA5 CALLCODE 0xA9 BLOCKHASH CREATE2 0xD8 0xAC 0x5F 0xC4 0xFB SWAP13 RETURN 0xC5 DUP12 0xC 0xE3 0xE 0x4C PUSH25 0xDB5DD2AF1E8A15C58CBB9464736F6C63430008060033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "5": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "CALLVALUE",
      "path": "99"
    },
    "6": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "7": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "ISZERO",
      "path": "99"
    },
    "8": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "12": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "REVERT",
      "path": "99"
    },
    "16": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "17": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "POP",
      "path": "99"
    },
    "18": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "21": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "LT",
      "path": "99"
    },
    "22": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "26": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "CALLDATALOAD",
      "path": "99"
    },
    "29": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "SHR",
      "path": "99"
    },
    "32": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "33": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x8BEAF7D7"
    },
    "38": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "GT",
      "path": "99"
    },
    "39": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "43": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "44": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x8BEAF7D7"
    },
    "49": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "50": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x108"
    },
    "53": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "54": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "55": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xED7DFEE3"
    },
    "60": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "61": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x11B"
    },
    "64": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "65": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "66": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xF62D1888"
    },
    "71": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "72": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x124"
    },
    "75": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "76": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "77": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xFA39851F"
    },
    "82": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "83": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x137"
    },
    "86": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "87": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "88": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xFE4B84DF"
    },
    "93": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "94": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x14C"
    },
    "97": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "98": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "101": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "REVERT",
      "path": "99"
    },
    "102": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "103": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "104": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x1C8ACA3B"
    },
    "109": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "110": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "114": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "115": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x237B5E96"
    },
    "120": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "121": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xBF"
    },
    "124": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "125": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "126": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x4A6C9DB6"
    },
    "131": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "132": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xC8"
    },
    "135": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "136": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "137": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x6F2EDBD2"
    },
    "142": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "143": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xEB"
    },
    "146": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "147": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "148": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x8129FC1C"
    },
    "153": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "EQ",
      "path": "99"
    },
    "154": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x100"
    },
    "157": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "158": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "159": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "DUP1",
      "path": "99"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1599,
        1974
      ],
      "op": "REVERT",
      "path": "99"
    },
    "163": {
      "offset": [
        1359,
        1380
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "164": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAC"
    },
    "167": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x3"
    },
    "169": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "170": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "DUP2",
      "path": "99"
    },
    "171": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "JUMP",
      "path": "99"
    },
    "172": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "173": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "175": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "176": {
      "op": "SWAP1"
    },
    "177": {
      "op": "DUP2"
    },
    "178": {
      "op": "MSTORE"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "181": {
      "op": "ADD"
    },
    "182": {
      "offset": [
        1359,
        1380
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "183": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "185": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "186": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "DUP1",
      "path": "99"
    },
    "187": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "188": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SUB",
      "path": "99"
    },
    "189": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "190": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "RETURN",
      "path": "99"
    },
    "191": {
      "offset": [
        1671,
        1691
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "192": {
      "fn": null,
      "offset": [
        1671,
        1691
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAC"
    },
    "195": {
      "fn": null,
      "offset": [
        1671,
        1691
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "197": {
      "fn": null,
      "offset": [
        1671,
        1691
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "198": {
      "fn": null,
      "offset": [
        1671,
        1691
      ],
      "op": "DUP2",
      "path": "99"
    },
    "199": {
      "fn": null,
      "offset": [
        1671,
        1691
      ],
      "op": "JUMP",
      "path": "99"
    },
    "200": {
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "201": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "203": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "204": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xDB"
    },
    "207": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "208": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH3",
      "path": "99",
      "value": "0x10000"
    },
    "212": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "213": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DIV",
      "path": "99"
    },
    "214": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0xFF"
    },
    "216": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "AND",
      "path": "99"
    },
    "217": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DUP2",
      "path": "99"
    },
    "218": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMP",
      "path": "99"
    },
    "219": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "220": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "222": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "223": {
      "op": "SWAP1"
    },
    "224": {
      "op": "ISZERO"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "DUP2"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "230": {
      "op": "ADD"
    },
    "231": {
      "offset": [
        516,
        535
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xB6"
    },
    "234": {
      "op": "JUMP"
    },
    "235": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "236": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xFE"
    },
    "239": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xF9"
    },
    "242": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "243": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "245": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x63A"
    },
    "248": {
      "fn": "SampleChild.initialize",
      "jump": "i",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMP",
      "path": "99"
    },
    "249": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "250": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x15F"
    },
    "253": {
      "fn": "SampleChild.initialize",
      "jump": "i",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMP",
      "path": "99"
    },
    "254": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "255": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "STOP",
      "path": "99"
    },
    "256": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "257": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xFE"
    },
    "260": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1F0"
    },
    "263": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "99"
    },
    "264": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "265": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xFE"
    },
    "268": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x116"
    },
    "271": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "272": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "274": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x5DC"
    },
    "277": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMP",
      "path": "99"
    },
    "278": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "279": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x26D"
    },
    "282": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMP",
      "path": "99"
    },
    "283": {
      "offset": [
        749,
        770
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "284": {
      "fn": "SampleFather.initialize",
      "offset": [
        749,
        770
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAC"
    },
    "287": {
      "fn": "SampleFather.initialize",
      "offset": [
        749,
        770
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "289": {
      "fn": "SampleFather.initialize",
      "offset": [
        749,
        770
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "290": {
      "fn": "SampleFather.initialize",
      "offset": [
        749,
        770
      ],
      "op": "DUP2",
      "path": "99"
    },
    "291": {
      "fn": "SampleFather.initialize",
      "offset": [
        749,
        770
      ],
      "op": "JUMP",
      "path": "99"
    },
    "292": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "293": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xFE"
    },
    "296": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x132"
    },
    "299": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "300": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "302": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x59F"
    },
    "305": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "306": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "307": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2E9"
    },
    "310": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "311": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "312": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x13F"
    },
    "315": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x372"
    },
    "318": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "319": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "320": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "322": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "323": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xB6"
    },
    "326": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "327": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "328": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x691"
    },
    "331": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "332": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "333": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xFE"
    },
    "336": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x15A"
    },
    "339": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "340": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "342": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x621"
    },
    "345": {
      "fn": "SampleMother.initialize",
      "jump": "i",
      "offset": [
        777,
        904
      ],
      "op": "JUMP",
      "path": "99"
    },
    "346": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "347": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x400"
    },
    "350": {
      "fn": "SampleMother.initialize",
      "jump": "i",
      "offset": [
        777,
        904
      ],
      "op": "JUMP",
      "path": "99"
    },
    "351": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "352": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "354": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "355": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "358": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "359": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "360": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "362": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "363": {
      "fn": "SampleChild.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "364": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x178"
    },
    "367": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "368": {
      "op": "POP"
    },
    "369": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "371": {
      "fn": "SampleChild.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "372": {
      "fn": "SampleChild.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "374": {
      "fn": "SampleChild.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "375": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "376": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "377": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x19D"
    },
    "380": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "381": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "383": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "392": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "393": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "395": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "396": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x194"
    },
    "399": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "400": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x6E6"
    },
    "403": {
      "fn": "SampleChild.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "404": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "405": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "407": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "408": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "DUP1",
      "path": "130"
    },
    "409": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP2",
      "path": "130"
    },
    "410": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SUB",
      "path": "130"
    },
    "411": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "412": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "130"
    },
    "413": {
      "fn": "SampleChild.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "414": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "416": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "417": {
      "fn": "SampleChild.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "420": {
      "fn": "SampleChild.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "421": {
      "fn": "SampleChild.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "422": {
      "fn": "SampleChild.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "424": {
      "fn": "SampleChild.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "425": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "426": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "427": {
      "fn": "SampleChild.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "428": {
      "fn": "SampleChild.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x1BF"
    },
    "431": {
      "fn": "SampleChild.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "432": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "434": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "435": {
      "fn": "SampleChild.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "436": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "439": {
      "op": "NOT"
    },
    "440": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "441": {
      "fn": "SampleChild.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "444": {
      "fn": "SampleChild.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "445": {
      "fn": "SampleChild.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "446": {
      "fn": "SampleChild.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "447": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "448": {
      "fn": "SampleChild.initialize",
      "offset": [
        1858,
        1890
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 0,
      "value": "0x1C8"
    },
    "451": {
      "fn": "SampleChild.initialize",
      "offset": [
        1882,
        1889
      ],
      "op": "DUP6",
      "path": "99"
    },
    "452": {
      "fn": "SampleChild.initialize",
      "offset": [
        1858,
        1881
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x400"
    },
    "455": {
      "fn": "SampleChild.initialize",
      "jump": "i",
      "offset": [
        1858,
        1890
      ],
      "op": "JUMP",
      "path": "99"
    },
    "456": {
      "fn": "SampleChild.initialize",
      "offset": [
        1858,
        1890
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "457": {
      "fn": "SampleChild.initialize",
      "offset": [
        1900,
        1941
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 1,
      "value": "0x1D2"
    },
    "460": {
      "fn": "SampleChild.initialize",
      "offset": [
        1924,
        1931
      ],
      "op": "DUP5",
      "path": "99"
    },
    "461": {
      "fn": "SampleChild.initialize",
      "offset": [
        1933,
        1940
      ],
      "op": "DUP5",
      "path": "99"
    },
    "462": {
      "fn": "SampleChild.initialize",
      "offset": [
        1900,
        1923
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x26D"
    },
    "465": {
      "fn": "SampleChild.initialize",
      "jump": "i",
      "offset": [
        1900,
        1941
      ],
      "op": "JUMP",
      "path": "99"
    },
    "466": {
      "fn": "SampleChild.initialize",
      "offset": [
        1900,
        1941
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "467": {
      "fn": "SampleChild.initialize",
      "offset": [
        1951,
        1956
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 2,
      "value": "0x4"
    },
    "469": {
      "fn": "SampleChild.initialize",
      "offset": [
        1951,
        1965
      ],
      "op": "DUP3",
      "path": "99"
    },
    "470": {
      "fn": "SampleChild.initialize",
      "offset": [
        1951,
        1965
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "471": {
      "fn": "SampleChild.initialize",
      "offset": [
        1951,
        1965
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "472": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "473": {
      "fn": "SampleChild.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "474": {
      "fn": "SampleChild.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x1E9"
    },
    "477": {
      "fn": "SampleChild.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "478": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "480": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "481": {
      "fn": "SampleChild.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "482": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "485": {
      "op": "NOT"
    },
    "486": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "487": {
      "fn": "SampleChild.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "488": {
      "fn": "SampleChild.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "489": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "490": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "491": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "POP",
      "path": "99"
    },
    "492": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "POP",
      "path": "99"
    },
    "493": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "POP",
      "path": "99"
    },
    "494": {
      "fn": "SampleChild.initialize",
      "offset": [
        1698,
        1972
      ],
      "op": "POP",
      "path": "99"
    },
    "495": {
      "fn": "SampleChild.initialize",
      "jump": "o",
      "offset": [
        1698,
        1972
      ],
      "op": "JUMP",
      "path": "99"
    },
    "496": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "497": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "499": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "500": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "503": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "504": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "505": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "507": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "508": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "509": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x209"
    },
    "512": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "513": {
      "op": "POP"
    },
    "514": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "516": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "517": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "519": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "520": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "521": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "522": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x225"
    },
    "525": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "526": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "528": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "537": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "538": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "540": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "541": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x194"
    },
    "544": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "545": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x6E6"
    },
    "548": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "549": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "550": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "552": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "553": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "556": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "557": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "558": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "560": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "561": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "562": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "563": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "564": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x247"
    },
    "567": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "568": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "570": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "571": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "572": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "575": {
      "op": "NOT"
    },
    "576": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "577": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "580": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "581": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "582": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "583": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "584": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        600
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 3,
      "value": "0x0"
    },
    "586": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "DUP1",
      "path": "99"
    },
    "587": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "588": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "592": {
      "op": "NOT"
    },
    "593": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "AND",
      "path": "99"
    },
    "594": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "PUSH3",
      "path": "99",
      "value": "0x10000"
    },
    "598": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "OR",
      "path": "99"
    },
    "599": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "600": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "601": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "602": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "603": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x26A"
    },
    "606": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "607": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "609": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "610": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "611": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "614": {
      "op": "NOT"
    },
    "615": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "616": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "617": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "618": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "619": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "620": {
      "fn": "SampleHuman.initialize",
      "jump": "o",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "99"
    },
    "621": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "622": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "624": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "625": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "628": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "629": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "630": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "632": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "633": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "634": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x286"
    },
    "637": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "638": {
      "op": "POP"
    },
    "639": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "641": {
      "fn": "SampleFather.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "642": {
      "fn": "SampleFather.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "644": {
      "fn": "SampleFather.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "645": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "646": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "647": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x2A2"
    },
    "650": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "651": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "653": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "662": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "663": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "665": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "666": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x194"
    },
    "669": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "670": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x6E6"
    },
    "673": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "674": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "675": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "677": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "678": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "681": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "682": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "683": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "685": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "686": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "687": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "688": {
      "fn": "SampleFather.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "689": {
      "fn": "SampleFather.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x2C4"
    },
    "692": {
      "fn": "SampleFather.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "693": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "695": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "696": {
      "fn": "SampleFather.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "697": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "700": {
      "op": "NOT"
    },
    "701": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "702": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "705": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "706": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "707": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "708": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "709": {
      "fn": "SampleFather.initialize",
      "offset": [
        1476,
        1508
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 4,
      "value": "0x2CD"
    },
    "712": {
      "fn": "SampleFather.initialize",
      "offset": [
        1500,
        1507
      ],
      "op": "DUP4",
      "path": "99"
    },
    "713": {
      "fn": "SampleFather.initialize",
      "offset": [
        1476,
        1499
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2E9"
    },
    "716": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        1476,
        1508
      ],
      "op": "JUMP",
      "path": "99"
    },
    "717": {
      "fn": "SampleFather.initialize",
      "offset": [
        1476,
        1508
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "718": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1524
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 5,
      "value": "0x3"
    },
    "720": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "DUP3",
      "path": "99"
    },
    "721": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "722": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "723": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "724": {
      "fn": "SampleFather.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "725": {
      "fn": "SampleFather.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x2E4"
    },
    "728": {
      "fn": "SampleFather.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "729": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "731": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "732": {
      "fn": "SampleFather.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "733": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "736": {
      "op": "NOT"
    },
    "737": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "738": {
      "fn": "SampleFather.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "739": {
      "fn": "SampleFather.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "740": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "741": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "742": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "POP",
      "path": "99"
    },
    "743": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "POP",
      "path": "99"
    },
    "744": {
      "fn": "SampleFather.initialize",
      "jump": "o",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMP",
      "path": "99"
    },
    "745": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "746": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "748": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "749": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "752": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "753": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "754": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "756": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "757": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "758": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x302"
    },
    "761": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "762": {
      "op": "POP"
    },
    "763": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "765": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "766": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "768": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "769": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "770": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "771": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x31E"
    },
    "774": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "775": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "777": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "786": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "787": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "789": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "790": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x194"
    },
    "793": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "794": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x6E6"
    },
    "797": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "798": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "799": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "801": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "802": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "805": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "806": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "807": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "809": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "810": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "811": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "812": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "813": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x340"
    },
    "816": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "817": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "819": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "820": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "821": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "824": {
      "op": "NOT"
    },
    "825": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "826": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "829": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "830": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "831": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "832": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "833": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 6,
      "value": "0x348"
    },
    "836": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1166
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1F0"
    },
    "839": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMP",
      "path": "99"
    },
    "840": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "841": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP2",
      "path": "99",
      "statement": 7
    },
    "842": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "843": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x35B"
    },
    "846": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "847": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x2"
    },
    "849": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "850": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "852": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP6",
      "path": "99"
    },
    "853": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "ADD",
      "path": "99"
    },
    "854": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "855": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x479"
    },
    "858": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMP",
      "path": "99"
    },
    "859": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "860": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "POP",
      "path": "99"
    },
    "861": {
      "offset": [
        2299,
        2313
      ],
      "op": "DUP1",
      "path": "130"
    },
    "862": {
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "863": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x36E"
    },
    "866": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "867": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "869": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "870": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "871": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "874": {
      "op": "NOT"
    },
    "875": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "876": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "877": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "878": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "879": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "880": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "POP",
      "path": "99"
    },
    "881": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "882": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "883": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x2"
    },
    "885": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "886": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "887": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x37F"
    },
    "890": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "891": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x734"
    },
    "894": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "895": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "896": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "897": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "899": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "900": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "902": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "903": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "904": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "99"
    },
    "905": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "99"
    },
    "906": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "908": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "909": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "911": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "912": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "913": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "914": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "915": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "917": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "918": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "919": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP3",
      "path": "99"
    },
    "920": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "921": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "922": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "923": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "924": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "925": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "927": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "928": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "929": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "930": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "931": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x3AB"
    },
    "934": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "935": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x734"
    },
    "938": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "939": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "940": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "941": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ISZERO",
      "path": "99"
    },
    "942": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x3F8"
    },
    "945": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "946": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "947": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "949": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "LT",
      "path": "99"
    },
    "950": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x3CD"
    },
    "953": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "954": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x100"
    },
    "957": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "958": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "959": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "960": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "99"
    },
    "961": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "99"
    },
    "962": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "963": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "964": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "965": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "967": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "968": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "969": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x3F8"
    },
    "972": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "973": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "974": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "975": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "976": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "977": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "978": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "980": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "981": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "983": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "985": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "KECCAK256",
      "path": "99"
    },
    "986": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "987": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "988": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "989": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "990": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "991": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "992": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "993": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "995": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "996": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "997": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "999": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "1000": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "1001": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "1002": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "GT",
      "path": "99"
    },
    "1003": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x3DB"
    },
    "1006": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "1007": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "1008": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "1009": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SUB",
      "path": "99"
    },
    "1010": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "1012": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "AND",
      "path": "99"
    },
    "1013": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "1014": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "1015": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "1016": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "1017": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "1018": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "1019": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "1020": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "1021": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "1022": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "1023": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "1024": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "1025": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "1027": {
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "1028": {
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "1031": {
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "1032": {
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "1033": {
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "1035": {
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "1036": {
      "branch": 10,
      "fn": "SampleMother.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "1037": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x419"
    },
    "1040": {
      "branch": 10,
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "1041": {
      "op": "POP"
    },
    "1042": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "1044": {
      "fn": "SampleMother.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "1045": {
      "fn": "SampleMother.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "1047": {
      "branch": 11,
      "fn": "SampleMother.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "1048": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "1049": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "1050": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x435"
    },
    "1053": {
      "branch": 11,
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "1054": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "1056": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "1057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "1065": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "1066": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "1068": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "1069": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x194"
    },
    "1072": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "1073": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x6E6"
    },
    "1076": {
      "fn": "SampleMother.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "1077": {
      "fn": "SampleMother.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "1078": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "1080": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "1081": {
      "fn": "SampleMother.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "1084": {
      "fn": "SampleMother.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "1085": {
      "fn": "SampleMother.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "1086": {
      "fn": "SampleMother.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "1088": {
      "fn": "SampleMother.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "1089": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "1090": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "1091": {
      "fn": "SampleMother.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "1092": {
      "fn": "SampleMother.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x457"
    },
    "1095": {
      "fn": "SampleMother.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "1096": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "1098": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "1099": {
      "fn": "SampleMother.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "1100": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1103": {
      "op": "NOT"
    },
    "1104": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "1105": {
      "fn": "SampleMother.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "1108": {
      "fn": "SampleMother.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "1109": {
      "fn": "SampleMother.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "1110": {
      "fn": "SampleMother.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "1111": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "1112": {
      "fn": "SampleMother.initialize",
      "offset": [
        849,
        873
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 8,
      "value": "0x45F"
    },
    "1115": {
      "fn": "SampleMother.initialize",
      "offset": [
        849,
        871
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1F0"
    },
    "1118": {
      "fn": "SampleMother.initialize",
      "jump": "i",
      "offset": [
        849,
        873
      ],
      "op": "JUMP",
      "path": "99"
    },
    "1119": {
      "fn": "SampleMother.initialize",
      "offset": [
        849,
        873
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "1120": {
      "fn": "SampleMother.initialize",
      "offset": [
        883,
        889
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 9,
      "value": "0x1"
    },
    "1122": {
      "fn": "SampleMother.initialize",
      "offset": [
        883,
        897
      ],
      "op": "DUP3",
      "path": "99"
    },
    "1123": {
      "fn": "SampleMother.initialize",
      "offset": [
        883,
        897
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "1124": {
      "fn": "SampleMother.initialize",
      "offset": [
        883,
        897
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "1125": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "1126": {
      "fn": "SampleMother.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "1127": {
      "fn": "SampleMother.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x36E"
    },
    "1130": {
      "fn": "SampleMother.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "1131": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "1133": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "1134": {
      "fn": "SampleMother.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "1135": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1138": {
      "op": "NOT"
    },
    "1139": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "1140": {
      "fn": "SampleMother.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "1141": {
      "fn": "SampleMother.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "1142": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "1143": {
      "fn": "SampleMother.initialize",
      "offset": [
        777,
        904
      ],
      "op": "POP",
      "path": "99"
    },
    "1144": {
      "fn": "SampleMother.initialize",
      "jump": "o",
      "offset": [
        777,
        904
      ],
      "op": "JUMP",
      "path": "99"
    },
    "1145": {
      "op": "JUMPDEST"
    },
    "1146": {
      "op": "DUP3"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "SLOAD"
    },
    "1149": {
      "op": "PUSH2",
      "value": "0x485"
    },
    "1152": {
      "op": "SWAP1"
    },
    "1153": {
      "op": "PUSH2",
      "value": "0x734"
    },
    "1156": {
      "jump": "i",
      "op": "JUMP"
    },
    "1157": {
      "op": "JUMPDEST"
    },
    "1158": {
      "op": "SWAP1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1161": {
      "op": "MSTORE"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1166": {
      "op": "KECCAK256"
    },
    "1167": {
      "op": "SWAP1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1173": {
      "op": "SWAP1"
    },
    "1174": {
      "op": "DIV"
    },
    "1175": {
      "op": "DUP2"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "SWAP3"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "PUSH2",
      "value": "0x4A7"
    },
    "1182": {
      "op": "JUMPI"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1185": {
      "op": "DUP6"
    },
    "1186": {
      "op": "SSTORE"
    },
    "1187": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1190": {
      "op": "JUMP"
    },
    "1191": {
      "op": "JUMPDEST"
    },
    "1192": {
      "op": "DUP3"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1195": {
      "op": "LT"
    },
    "1196": {
      "op": "PUSH2",
      "value": "0x4C0"
    },
    "1199": {
      "op": "JUMPI"
    },
    "1200": {
      "op": "DUP1"
    },
    "1201": {
      "op": "MLOAD"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1204": {
      "op": "NOT"
    },
    "1205": {
      "op": "AND"
    },
    "1206": {
      "op": "DUP4"
    },
    "1207": {
      "op": "DUP1"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "OR"
    },
    "1210": {
      "op": "DUP6"
    },
    "1211": {
      "op": "SSTORE"
    },
    "1212": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1215": {
      "op": "JUMP"
    },
    "1216": {
      "op": "JUMPDEST"
    },
    "1217": {
      "op": "DUP3"
    },
    "1218": {
      "op": "DUP1"
    },
    "1219": {
      "op": "ADD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "ADD"
    },
    "1223": {
      "op": "DUP6"
    },
    "1224": {
      "op": "SSTORE"
    },
    "1225": {
      "op": "DUP3"
    },
    "1226": {
      "op": "ISZERO"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1230": {
      "op": "JUMPI"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "DUP3"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "DUP3"
    },
    "1236": {
      "op": "DUP2"
    },
    "1237": {
      "op": "GT"
    },
    "1238": {
      "op": "ISZERO"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1242": {
      "op": "JUMPI"
    },
    "1243": {
      "op": "DUP3"
    },
    "1244": {
      "op": "MLOAD"
    },
    "1245": {
      "op": "DUP3"
    },
    "1246": {
      "op": "SSTORE"
    },
    "1247": {
      "op": "SWAP2"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1250": {
      "op": "ADD"
    },
    "1251": {
      "op": "SWAP2"
    },
    "1252": {
      "op": "SWAP1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "ADD"
    },
    "1256": {
      "op": "SWAP1"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1260": {
      "op": "JUMP"
    },
    "1261": {
      "op": "JUMPDEST"
    },
    "1262": {
      "op": "POP"
    },
    "1263": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1266": {
      "op": "SWAP3"
    },
    "1267": {
      "op": "SWAP2"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1272": {
      "jump": "i",
      "op": "JUMP"
    },
    "1273": {
      "op": "JUMPDEST"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "op": "SWAP1"
    },
    "1276": {
      "jump": "o",
      "op": "JUMP"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "JUMPDEST"
    },
    "1279": {
      "op": "DUP1"
    },
    "1280": {
      "op": "DUP3"
    },
    "1281": {
      "op": "GT"
    },
    "1282": {
      "op": "ISZERO"
    },
    "1283": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1286": {
      "op": "JUMPI"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1289": {
      "op": "DUP2"
    },
    "1290": {
      "op": "SSTORE"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x4FE"
    },
    "1297": {
      "op": "JUMP"
    },
    "1298": {
      "op": "JUMPDEST"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1301": {
      "op": "DUP3"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1304": {
      "op": "DUP4"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "SLT"
    },
    "1307": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1310": {
      "op": "JUMPI"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "op": "DUP1"
    },
    "1314": {
      "op": "REVERT"
    },
    "1315": {
      "op": "JUMPDEST"
    },
    "1316": {
      "op": "DUP2"
    },
    "1317": {
      "op": "CALLDATALOAD"
    },
    "1318": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1327": {
      "op": "DUP1"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "GT"
    },
    "1330": {
      "op": "ISZERO"
    },
    "1331": {
      "op": "PUSH2",
      "value": "0x53E"
    },
    "1334": {
      "op": "JUMPI"
    },
    "1335": {
      "op": "PUSH2",
      "value": "0x53E"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1341": {
      "jump": "i",
      "op": "JUMP"
    },
    "1342": {
      "op": "JUMPDEST"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1345": {
      "op": "MLOAD"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1348": {
      "op": "DUP4"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1352": {
      "op": "NOT"
    },
    "1353": {
      "op": "SWAP1"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "AND"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1358": {
      "op": "ADD"
    },
    "1359": {
      "op": "AND"
    },
    "1360": {
      "op": "DUP2"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "SWAP1"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "GT"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "DUP4"
    },
    "1368": {
      "op": "LT"
    },
    "1369": {
      "op": "OR"
    },
    "1370": {
      "op": "ISZERO"
    },
    "1371": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1374": {
      "op": "JUMPI"
    },
    "1375": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1381": {
      "jump": "i",
      "op": "JUMP"
    },
    "1382": {
      "op": "JUMPDEST"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1386": {
      "op": "MSTORE"
    },
    "1387": {
      "op": "DUP4"
    },
    "1388": {
      "op": "DUP2"
    },
    "1389": {
      "op": "MSTORE"
    },
    "1390": {
      "op": "DUP7"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1393": {
      "op": "DUP6"
    },
    "1394": {
      "op": "DUP9"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "op": "GT"
    },
    "1398": {
      "op": "ISZERO"
    },
    "1399": {
      "op": "PUSH2",
      "value": "0x57F"
    },
    "1402": {
      "op": "JUMPI"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1405": {
      "op": "DUP1"
    },
    "1406": {
      "op": "REVERT"
    },
    "1407": {
      "op": "JUMPDEST"
    },
    "1408": {
      "op": "DUP4"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1411": {
      "op": "DUP8"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1415": {
      "op": "DUP4"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "CALLDATACOPY"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "op": "DUP6"
    },
    "1423": {
      "op": "DUP4"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "DUP1"
    },
    "1428": {
      "op": "SWAP5"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "op": "SWAP3"
    },
    "1435": {
      "op": "SWAP2"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "jump": "o",
      "op": "JUMP"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1444": {
      "op": "DUP3"
    },
    "1445": {
      "op": "DUP5"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "op": "SLT"
    },
    "1448": {
      "op": "ISZERO"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B1"
    },
    "1452": {
      "op": "JUMPI"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1455": {
      "op": "DUP1"
    },
    "1456": {
      "op": "REVERT"
    },
    "1457": {
      "op": "JUMPDEST"
    },
    "1458": {
      "op": "DUP2"
    },
    "1459": {
      "op": "CALLDATALOAD"
    },
    "1460": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1469": {
      "op": "DUP2"
    },
    "1470": {
      "op": "GT"
    },
    "1471": {
      "op": "ISZERO"
    },
    "1472": {
      "op": "PUSH2",
      "value": "0x5C8"
    },
    "1475": {
      "op": "JUMPI"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1478": {
      "op": "DUP1"
    },
    "1479": {
      "op": "REVERT"
    },
    "1480": {
      "op": "JUMPDEST"
    },
    "1481": {
      "op": "PUSH2",
      "value": "0x5D4"
    },
    "1484": {
      "op": "DUP5"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "DUP6"
    },
    "1487": {
      "op": "ADD"
    },
    "1488": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1491": {
      "jump": "i",
      "op": "JUMP"
    },
    "1492": {
      "op": "JUMPDEST"
    },
    "1493": {
      "op": "SWAP5"
    },
    "1494": {
      "op": "SWAP4"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "jump": "o",
      "op": "JUMP"
    },
    "1500": {
      "op": "JUMPDEST"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1503": {
      "op": "DUP1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1506": {
      "op": "DUP4"
    },
    "1507": {
      "op": "DUP6"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "op": "SLT"
    },
    "1510": {
      "op": "ISZERO"
    },
    "1511": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1514": {
      "op": "JUMPI"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1517": {
      "op": "DUP1"
    },
    "1518": {
      "op": "REVERT"
    },
    "1519": {
      "op": "JUMPDEST"
    },
    "1520": {
      "op": "DUP3"
    },
    "1521": {
      "op": "CALLDATALOAD"
    },
    "1522": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1531": {
      "op": "DUP2"
    },
    "1532": {
      "op": "GT"
    },
    "1533": {
      "op": "ISZERO"
    },
    "1534": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "1537": {
      "op": "JUMPI"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "DUP1"
    },
    "1541": {
      "op": "REVERT"
    },
    "1542": {
      "op": "JUMPDEST"
    },
    "1543": {
      "op": "PUSH2",
      "value": "0x612"
    },
    "1546": {
      "op": "DUP6"
    },
    "1547": {
      "op": "DUP3"
    },
    "1548": {
      "op": "DUP7"
    },
    "1549": {
      "op": "ADD"
    },
    "1550": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1553": {
      "jump": "i",
      "op": "JUMP"
    },
    "1554": {
      "op": "JUMPDEST"
    },
    "1555": {
      "op": "SWAP6"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1558": {
      "op": "SWAP5"
    },
    "1559": {
      "op": "SWAP1"
    },
    "1560": {
      "op": "SWAP5"
    },
    "1561": {
      "op": "ADD"
    },
    "1562": {
      "op": "CALLDATALOAD"
    },
    "1563": {
      "op": "SWAP5"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "jump": "o",
      "op": "JUMP"
    },
    "1569": {
      "op": "JUMPDEST"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "DUP5"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "op": "SLT"
    },
    "1578": {
      "op": "ISZERO"
    },
    "1579": {
      "op": "PUSH2",
      "value": "0x633"
    },
    "1582": {
      "op": "JUMPI"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1585": {
      "op": "DUP1"
    },
    "1586": {
      "op": "REVERT"
    },
    "1587": {
      "op": "JUMPDEST"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "CALLDATALOAD"
    },
    "1590": {
      "op": "SWAP2"
    },
    "1591": {
      "op": "SWAP1"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "jump": "o",
      "op": "JUMP"
    },
    "1594": {
      "op": "JUMPDEST"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1597": {
      "op": "DUP1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "DUP1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1603": {
      "op": "DUP6"
    },
    "1604": {
      "op": "DUP8"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "op": "SLT"
    },
    "1607": {
      "op": "ISZERO"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x650"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1614": {
      "op": "DUP1"
    },
    "1615": {
      "op": "REVERT"
    },
    "1616": {
      "op": "JUMPDEST"
    },
    "1617": {
      "op": "DUP5"
    },
    "1618": {
      "op": "CALLDATALOAD"
    },
    "1619": {
      "op": "SWAP4"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1623": {
      "op": "DUP6"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "CALLDATALOAD"
    },
    "1626": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1635": {
      "op": "DUP2"
    },
    "1636": {
      "op": "GT"
    },
    "1637": {
      "op": "ISZERO"
    },
    "1638": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1641": {
      "op": "JUMPI"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1644": {
      "op": "DUP1"
    },
    "1645": {
      "op": "REVERT"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x67A"
    },
    "1650": {
      "op": "DUP8"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "DUP9"
    },
    "1653": {
      "op": "ADD"
    },
    "1654": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1657": {
      "jump": "i",
      "op": "JUMP"
    },
    "1658": {
      "op": "JUMPDEST"
    },
    "1659": {
      "op": "SWAP5"
    },
    "1660": {
      "op": "SWAP8"
    },
    "1661": {
      "op": "SWAP5"
    },
    "1662": {
      "op": "SWAP7"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "op": "POP"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1669": {
      "op": "DUP4"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "CALLDATALOAD"
    },
    "1672": {
      "op": "SWAP3"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "CALLDATALOAD"
    },
    "1677": {
      "op": "SWAP2"
    },
    "1678": {
      "op": "SWAP1"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "jump": "o",
      "op": "JUMP"
    },
    "1681": {
      "op": "JUMPDEST"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1686": {
      "op": "DUP1"
    },
    "1687": {
      "op": "DUP4"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "op": "DUP4"
    },
    "1690": {
      "op": "MLOAD"
    },
    "1691": {
      "op": "DUP1"
    },
    "1692": {
      "op": "DUP3"
    },
    "1693": {
      "op": "DUP6"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "MSTORE"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1698": {
      "op": "JUMPDEST"
    },
    "1699": {
      "op": "DUP2"
    },
    "1700": {
      "op": "DUP2"
    },
    "1701": {
      "op": "LT"
    },
    "1702": {
      "op": "ISZERO"
    },
    "1703": {
      "op": "PUSH2",
      "value": "0x6BE"
    },
    "1706": {
      "op": "JUMPI"
    },
    "1707": {
      "op": "DUP6"
    },
    "1708": {
      "op": "DUP2"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "op": "DUP4"
    },
    "1711": {
      "op": "ADD"
    },
    "1712": {
      "op": "MLOAD"
    },
    "1713": {
      "op": "DUP6"
    },
    "1714": {
      "op": "DUP3"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1718": {
      "op": "ADD"
    },
    "1719": {
      "op": "MSTORE"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "PUSH2",
      "value": "0x6A2"
    },
    "1725": {
      "op": "JUMP"
    },
    "1726": {
      "op": "JUMPDEST"
    },
    "1727": {
      "op": "DUP2"
    },
    "1728": {
      "op": "DUP2"
    },
    "1729": {
      "op": "GT"
    },
    "1730": {
      "op": "ISZERO"
    },
    "1731": {
      "op": "PUSH2",
      "value": "0x6D0"
    },
    "1734": {
      "op": "JUMPI"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1739": {
      "op": "DUP4"
    },
    "1740": {
      "op": "DUP8"
    },
    "1741": {
      "op": "ADD"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "op": "MSTORE"
    },
    "1744": {
      "op": "JUMPDEST"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1748": {
      "op": "ADD"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1751": {
      "op": "NOT"
    },
    "1752": {
      "op": "AND"
    },
    "1753": {
      "op": "SWAP3"
    },
    "1754": {
      "op": "SWAP1"
    },
    "1755": {
      "op": "SWAP3"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1759": {
      "op": "ADD"
    },
    "1760": {
      "op": "SWAP4"
    },
    "1761": {
      "op": "SWAP3"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "op": "POP"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "jump": "o",
      "op": "JUMP"
    },
    "1766": {
      "op": "JUMPDEST"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1769": {
      "op": "DUP1"
    },
    "1770": {
      "op": "DUP3"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1774": {
      "op": "SWAP1"
    },
    "1775": {
      "op": "DUP3"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "MSTORE"
    },
    "1778": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1813": {
      "op": "DUP3"
    },
    "1814": {
      "op": "ADD"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1833": {
      "op": "SHL"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1836": {
      "op": "DUP3"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1841": {
      "op": "ADD"
    },
    "1842": {
      "op": "SWAP1"
    },
    "1843": {
      "jump": "o",
      "op": "JUMP"
    },
    "1844": {
      "op": "JUMPDEST"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "DUP2"
    },
    "1848": {
      "op": "DUP2"
    },
    "1849": {
      "op": "SHR"
    },
    "1850": {
      "op": "SWAP1"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "AND"
    },
    "1853": {
      "op": "DUP1"
    },
    "1854": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1857": {
      "op": "JUMPI"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1860": {
      "op": "DUP3"
    },
    "1861": {
      "op": "AND"
    },
    "1862": {
      "op": "SWAP2"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "JUMPDEST"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1867": {
      "op": "DUP3"
    },
    "1868": {
      "op": "LT"
    },
    "1869": {
      "op": "DUP2"
    },
    "1870": {
      "op": "EQ"
    },
    "1871": {
      "op": "ISZERO"
    },
    "1872": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1875": {
      "op": "JUMPI"
    },
    "1876": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1891": {
      "op": "MSTORE"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1896": {
      "op": "REVERT"
    },
    "1897": {
      "op": "JUMPDEST"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "op": "SWAP2"
    },
    "1900": {
      "op": "SWAP1"
    },
    "1901": {
      "op": "POP"
    },
    "1902": {
      "jump": "o",
      "op": "JUMP"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1911": {
      "op": "SHL"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1914": {
      "op": "MSTORE"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1919": {
      "op": "MSTORE"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1924": {
      "op": "REVERT"
    }
  },
  "sha1": "e5d5fb97e35fc725af618e81bf0e1c1b779a15ab",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n// Sample contracts showing upgradeability with multiple inheritance.\n// Child contract inherits from Father and Mother contracts, and Father extends from Gramps.\n//\n//         Human\n//       /       \\\n//      |       Gramps\n//      |         |\n//    Mother    Father\n//      |         |\n//      -- Child --\n\n/**\n * Sample base intializable contract that is a human\n */\ncontract SampleHuman is Initializable {\n    bool public isHuman;\n\n    function initialize() public initializer {\n        isHuman = true;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field mother\n */\ncontract SampleMother is Initializable, SampleHuman {\n    uint256 public mother;\n\n    function initialize(uint256 value) public virtual initializer {\n        SampleHuman.initialize();\n        mother = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field gramps\n */\ncontract SampleGramps is Initializable, SampleHuman {\n    string public gramps;\n\n    function initialize(string memory value) public virtual initializer {\n        SampleHuman.initialize();\n        gramps = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field father and extends from gramps\n */\ncontract SampleFather is Initializable, SampleGramps {\n    uint256 public father;\n\n    function initialize(string memory _gramps, uint256 _father) public initializer {\n        SampleGramps.initialize(_gramps);\n        father = _father;\n    }\n}\n\n/**\n * Child extends from mother, father (gramps)\n */\ncontract SampleChild is Initializable, SampleMother, SampleFather {\n    uint256 public child;\n\n    function initialize(\n        uint256 _mother,\n        string memory _gramps,\n        uint256 _father,\n        uint256 _child\n    ) public initializer {\n        SampleMother.initialize(_mother);\n        SampleFather.initialize(_gramps, _father);\n        child = _child;\n    }\n}\n",
  "sourceMap": "1599:375:99:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
  "type": "contract"
}