{
  "abi": [
    {
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUnset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "setDeadline",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "114": "contracts/OpenZepellin/contracts/mocks/TimersBlockNumberImpl.sol",
    "186": "contracts/OpenZepellin/contracts/utils/Timers.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/TimersBlockNumberImpl.sol",
    "exportedSymbols": {
      "Timers": [
        25162
      ],
      "TimersBlockNumberImpl": [
        13629
      ]
    },
    "id": 13630,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13549,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:114"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/Timers.sol",
        "file": "../utils/Timers.sol",
        "id": 13550,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13630,
        "sourceUnit": 25163,
        "src": "58:29:114",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13629,
        "linearizedBaseContracts": [
          13629
        ],
        "name": "TimersBlockNumberImpl",
        "nameLocation": "98:21:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13554,
            "libraryName": {
              "id": 13551,
              "name": "Timers",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25162,
              "src": "132:6:114"
            },
            "nodeType": "UsingForDirective",
            "src": "126:36:114",
            "typeName": {
              "id": 13553,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13552,
                "name": "Timers.BlockNumber",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25059,
                "src": "143:18:114"
              },
              "referencedDeclaration": 25059,
              "src": "143:18:114",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BlockNumber_$25059_storage_ptr",
                "typeString": "struct Timers.BlockNumber"
              }
            }
          },
          {
            "constant": false,
            "id": 13557,
            "mutability": "mutable",
            "name": "_timer",
            "nameLocation": "195:6:114",
            "nodeType": "VariableDeclaration",
            "scope": 13629,
            "src": "168:33:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
              "typeString": "struct Timers.BlockNumber"
            },
            "typeName": {
              "id": 13556,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13555,
                "name": "Timers.BlockNumber",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25059,
                "src": "168:18:114"
              },
              "referencedDeclaration": 25059,
              "src": "168:18:114",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BlockNumber_$25059_storage_ptr",
                "typeString": "struct Timers.BlockNumber"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13566,
              "nodeType": "Block",
              "src": "260:44:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13562,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "277:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25071,
                      "src": "277:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_BlockNumber_$25059_memory_ptr_$returns$_t_uint64_$bound_to$_t_struct$_BlockNumber_$25059_memory_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber memory) pure returns (uint64)"
                      }
                    },
                    "id": 13564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 13561,
                  "id": 13565,
                  "nodeType": "Return",
                  "src": "270:27:114"
                }
              ]
            },
            "functionSelector": "5f8d96de",
            "id": 13567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeadline",
            "nameLocation": "217:11:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:2:114"
            },
            "returnParameters": {
              "id": 13561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13567,
                  "src": "252:6:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13559,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "251:8:114"
            },
            "scope": 13629,
            "src": "208:96:114",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13578,
              "nodeType": "Block",
              "src": "356:46:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13575,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13569,
                        "src": "385:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 13572,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "366:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13574,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDeadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25086,
                      "src": "366:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BlockNumber_$25059_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_struct$_BlockNumber_$25059_storage_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber storage pointer,uint64)"
                      }
                    },
                    "id": 13576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "366:29:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13577,
                  "nodeType": "ExpressionStatement",
                  "src": "366:29:114"
                }
              ]
            },
            "functionSelector": "aebc0483",
            "id": 13579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDeadline",
            "nameLocation": "319:11:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13569,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "338:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 13579,
                  "src": "331:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13568,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "330:18:114"
            },
            "returnParameters": {
              "id": 13571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:114"
            },
            "scope": 13629,
            "src": "310:92:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13587,
              "nodeType": "Block",
              "src": "432:31:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13582,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "442:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13584,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25099,
                      "src": "442:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BlockNumber_$25059_storage_ptr_$returns$__$bound_to$_t_struct$_BlockNumber_$25059_storage_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber storage pointer)"
                      }
                    },
                    "id": 13585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:14:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13586,
                  "nodeType": "ExpressionStatement",
                  "src": "442:14:114"
                }
              ]
            },
            "functionSelector": "d826f88f",
            "id": 13588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reset",
            "nameLocation": "417:5:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:114"
            },
            "returnParameters": {
              "id": 13581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:114"
            },
            "scope": 13629,
            "src": "408:55:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13597,
              "nodeType": "Block",
              "src": "515:40:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13593,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "532:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isUnset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25113,
                      "src": "532:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_BlockNumber_$25059_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_BlockNumber_$25059_memory_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber memory) pure returns (bool)"
                      }
                    },
                    "id": 13595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:16:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13592,
                  "id": 13596,
                  "nodeType": "Return",
                  "src": "525:23:114"
                }
              ]
            },
            "functionSelector": "2260fe3a",
            "id": 13598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUnset",
            "nameLocation": "478:7:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:2:114"
            },
            "returnParameters": {
              "id": 13592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13598,
                  "src": "509:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13590,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:6:114"
            },
            "scope": 13629,
            "src": "469:86:114",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13607,
              "nodeType": "Block",
              "src": "609:42:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13603,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "626:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13604,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isStarted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25127,
                      "src": "626:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_BlockNumber_$25059_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_BlockNumber_$25059_memory_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber memory) pure returns (bool)"
                      }
                    },
                    "id": 13605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "626:18:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13602,
                  "id": 13606,
                  "nodeType": "Return",
                  "src": "619:25:114"
                }
              ]
            },
            "functionSelector": "544736e6",
            "id": 13608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStarted",
            "nameLocation": "570:9:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:114"
            },
            "returnParameters": {
              "id": 13602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13608,
                  "src": "603:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13600,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:6:114"
            },
            "scope": 13629,
            "src": "561:90:114",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13617,
              "nodeType": "Block",
              "src": "705:42:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13613,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "722:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isPending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25142,
                      "src": "722:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_BlockNumber_$25059_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_BlockNumber_$25059_memory_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber memory) view returns (bool)"
                      }
                    },
                    "id": 13615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "722:18:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13612,
                  "id": 13616,
                  "nodeType": "Return",
                  "src": "715:25:114"
                }
              ]
            },
            "functionSelector": "9c30ad7e",
            "id": 13618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPending",
            "nameLocation": "666:9:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:2:114"
            },
            "returnParameters": {
              "id": 13612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13618,
                  "src": "699:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:6:114"
            },
            "scope": 13629,
            "src": "657:90:114",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13627,
              "nodeType": "Block",
              "src": "801:42:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13623,
                        "name": "_timer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13557,
                        "src": "818:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockNumber_$25059_storage",
                          "typeString": "struct Timers.BlockNumber storage ref"
                        }
                      },
                      "id": 13624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isExpired",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25161,
                      "src": "818:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_BlockNumber_$25059_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_BlockNumber_$25059_memory_ptr_$",
                        "typeString": "function (struct Timers.BlockNumber memory) view returns (bool)"
                      }
                    },
                    "id": 13625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:18:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13622,
                  "id": 13626,
                  "nodeType": "Return",
                  "src": "811:25:114"
                }
              ]
            },
            "functionSelector": "2f13b60c",
            "id": 13628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExpired",
            "nameLocation": "762:9:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:2:114"
            },
            "returnParameters": {
              "id": 13622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13628,
                  "src": "795:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:6:114"
            },
            "scope": 13629,
            "src": "753:90:114",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13630,
        "src": "89:756:114",
        "usedErrors": []
      }
    ],
    "src": "33:813:114"
  },
  "bytecode": "608060405234801561001057600080fd5b50610243806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f8d96de1161005b5780635f8d96de146100e05780639c30ad7e14610107578063aebc04831461012a578063d826f88f1461015c57600080fd5b80632260fe3a146100825780632f13b60c146100b5578063544736e6146100bd575b600080fd5b604080516020810190915260005467ffffffffffffffff1690819052155b60405190151581526020015b60405180910390f35b6100a0610169565b604080516020810190915260005467ffffffffffffffff169081905215156100a0565b604080516020808201835260005467ffffffffffffffff16918290529151908152016100ac565b604080516020810190915260005467ffffffffffffffff169081905243106100a0565b61015a6101383660046101dc565b6000805467ffffffffffffffff831667ffffffffffffffff1990911617905550565b005b61015a61018e565b905090565b60408051602081019091526000805467ffffffffffffffff16825290610164906101a6565b6101a46000805467ffffffffffffffff19169055565b565b60006101bc825167ffffffffffffffff16151590565b80156101d6575043826000015167ffffffffffffffff1611155b92915050565b6000602082840312156101ee57600080fd5b813567ffffffffffffffff8116811461020657600080fd5b939250505056fea2646970667358221220f90a7cad453cec04c504c1f866cce1fd6052ccb4e8d03ff878a234b54162620364736f6c63430008060033",
  "bytecodeSha1": "e00cb98be41f5f69d76e02997720a3cdcc4c2077",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "TimersBlockNumberImpl",
  "coverageMap": {
    "branches": {
      "114": {},
      "186": {}
    },
    "statements": {
      "114": {
        "TimersBlockNumberImpl.getDeadline": {
          "4": [
            270,
            297
          ]
        },
        "TimersBlockNumberImpl.isExpired": {
          "9": [
            811,
            836
          ]
        },
        "TimersBlockNumberImpl.isPending": {
          "5": [
            715,
            740
          ]
        },
        "TimersBlockNumberImpl.isStarted": {
          "2": [
            619,
            644
          ]
        },
        "TimersBlockNumberImpl.isUnset": {
          "0": [
            525,
            548
          ]
        },
        "TimersBlockNumberImpl.reset": {
          "10": [
            442,
            456
          ]
        },
        "TimersBlockNumberImpl.setDeadline": {
          "7": [
            366,
            395
          ]
        }
      },
      "186": {
        "Timers.isExpired": {
          "12": [
            1974,
            2032
          ]
        },
        "Timers.isPending": {
          "6": [
            1840,
            1877
          ]
        },
        "Timers.isStarted": {
          "3": [
            1717,
            1743
          ]
        },
        "Timers.isUnset": {
          "1": [
            1593,
            1620
          ]
        },
        "Timers.reset": {
          "11": [
            1479,
            1498
          ]
        },
        "Timers.setDeadline": {
          "8": [
            1378,
            1405
          ]
        }
      }
    }
  },
  "dependencies": [
    "Timers"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f8d96de1161005b5780635f8d96de146100e05780639c30ad7e14610107578063aebc04831461012a578063d826f88f1461015c57600080fd5b80632260fe3a146100825780632f13b60c146100b5578063544736e6146100bd575b600080fd5b604080516020810190915260005467ffffffffffffffff1690819052155b60405190151581526020015b60405180910390f35b6100a0610169565b604080516020810190915260005467ffffffffffffffff169081905215156100a0565b604080516020808201835260005467ffffffffffffffff16918290529151908152016100ac565b604080516020810190915260005467ffffffffffffffff169081905243106100a0565b61015a6101383660046101dc565b6000805467ffffffffffffffff831667ffffffffffffffff1990911617905550565b005b61015a61018e565b905090565b60408051602081019091526000805467ffffffffffffffff16825290610164906101a6565b6101a46000805467ffffffffffffffff19169055565b565b60006101bc825167ffffffffffffffff16151590565b80156101d6575043826000015167ffffffffffffffff1611155b92915050565b6000602082840312156101ee57600080fd5b813567ffffffffffffffff8116811461020657600080fd5b939250505056fea2646970667358221220f90a7cad453cec04c504c1f866cce1fd6052ccb4e8d03ff878a234b54162620364736f6c63430008060033",
  "deployedSourceMap": "89:756:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:86;532:14;;;;;;;;;-1:-1:-1;532:14:114;;;;;;;1600:20:186;469:86:114;;;468:14:211;;461:22;443:41;;431:2;416:18;469:86:114;;;;;;;;753:90;;;:::i;561:::-;626:16;;;;;;;;;-1:-1:-1;626:16:114;;;;;;;1724:19:186;;561:90:114;469:86;208:96;277:18;;;;;;;;;-1:-1:-1;277:18:114;;;;;;;208:96;;639:50:211;;;612:18;208:96:114;594:101:211;657:90:114;722:16;;;;;;;;;-1:-1:-1;722:16:114;;;;;;;1865:12:186;-1:-1:-1;657:90:114;469:86;310:92;;;;;;:::i;:::-;366:6;1378:27:186;;;;;-1:-1:-1;;1378:27:186;;;;;;310:92:114;;;;408:55;;;:::i;532:16::-;525:23;;469:86;:::o;753:90::-;818:16;;;;;;;;;795:4;818:16;;;;;;795:4;818:18;;:16;:18::i;408:55::-;442:14;:6;1479:19:186;;-1:-1:-1;;1479:19:186;;;1418:87;442:14:114;408:55::o;1890:149:186:-;1958:4;1981:16;1991:5;1724:15;:19;;;;;1633:117;1981:16;:51;;;;;2020:12;2001:5;:15;;;:31;;;;1981:51;1974:58;1890:149;-1:-1:-1;;1890:149:186:o;14:284:211:-;72:6;125:2;113:9;104:7;100:23;96:32;93:2;;;141:1;138;131:12;93:2;180:9;167:23;230:18;223:5;219:30;212:5;209:41;199:2;;264:1;261;254:12;199:2;287:5;83:215;-1:-1:-1;;;83:215:211:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    89,
    845
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F8D96DE GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x5F8D96DE EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x9C30AD7E EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xAEBC0483 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2260FE3A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2F13B60C EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x544736E6 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 SWAP1 MSTORE ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 SWAP1 MSTORE ISZERO ISZERO PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP3 SWAP1 MSTORE SWAP2 MLOAD SWAP1 DUP2 MSTORE ADD PUSH2 0xAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 SWAP1 MSTORE NUMBER LT PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15A PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 MSTORE SWAP1 PUSH2 0x164 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D6 JUMPI POP NUMBER DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EXP PUSH29 0xAD453CEC04C504C1F866CCE1FD6052CCB4E8D03FF878A234B541626203 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "5": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "CALLVALUE",
      "path": "114"
    },
    "6": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "7": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "ISZERO",
      "path": "114"
    },
    "8": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "12": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "REVERT",
      "path": "114"
    },
    "16": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "17": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "POP",
      "path": "114"
    },
    "18": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "21": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "LT",
      "path": "114"
    },
    "22": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "26": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "CALLDATALOAD",
      "path": "114"
    },
    "29": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "SHR",
      "path": "114"
    },
    "32": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "33": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x5F8D96DE"
    },
    "38": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "GT",
      "path": "114"
    },
    "39": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "43": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "44": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x5F8D96DE"
    },
    "49": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "50": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xE0"
    },
    "53": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "54": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "55": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x9C30AD7E"
    },
    "60": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "61": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x107"
    },
    "64": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "65": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "66": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xAEBC0483"
    },
    "71": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "72": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x12A"
    },
    "75": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "76": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "77": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0xD826F88F"
    },
    "82": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "83": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x15C"
    },
    "86": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "87": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "90": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "REVERT",
      "path": "114"
    },
    "91": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "92": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "93": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x2260FE3A"
    },
    "98": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "99": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "103": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "104": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x2F13B60C"
    },
    "109": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "110": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xB5"
    },
    "113": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "114": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "115": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH4",
      "path": "114",
      "value": "0x544736E6"
    },
    "120": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "EQ",
      "path": "114"
    },
    "121": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xBD"
    },
    "124": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPI",
      "path": "114"
    },
    "125": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "126": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "DUP1",
      "path": "114"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        89,
        845
      ],
      "op": "REVERT",
      "path": "114"
    },
    "130": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "131": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 0,
      "value": "0x40"
    },
    "133": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "DUP1",
      "path": "114"
    },
    "134": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "135": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "137": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "DUP2",
      "path": "114"
    },
    "138": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "ADD",
      "path": "114"
    },
    "139": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "140": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "141": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "144": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "145": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "PUSH8",
      "path": "114",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "154": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "AND",
      "path": "114"
    },
    "155": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "156": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "DUP2",
      "path": "114"
    },
    "157": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "158": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        546
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "159": {
      "fn": "Timers.isUnset",
      "offset": [
        1600,
        1620
      ],
      "op": "ISZERO",
      "path": "186",
      "statement": 1
    },
    "160": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "161": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "163": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "ISZERO"
    },
    "166": {
      "op": "ISZERO"
    },
    "167": {
      "op": "DUP2"
    },
    "168": {
      "op": "MSTORE"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "171": {
      "op": "ADD"
    },
    "172": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "173": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x40"
    },
    "175": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "176": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "DUP1",
      "path": "114"
    },
    "177": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "178": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "SUB",
      "path": "114"
    },
    "179": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "180": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "RETURN",
      "path": "114"
    },
    "181": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        753,
        843
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "182": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        753,
        843
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xA0"
    },
    "185": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        753,
        843
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x169"
    },
    "188": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "jump": "i",
      "offset": [
        753,
        843
      ],
      "op": "JUMP",
      "path": "114"
    },
    "189": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        561,
        651
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "190": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 2,
      "value": "0x40"
    },
    "192": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "DUP1",
      "path": "114"
    },
    "193": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "194": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "196": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "DUP2",
      "path": "114"
    },
    "197": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "ADD",
      "path": "114"
    },
    "198": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "199": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "200": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "203": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "204": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "PUSH8",
      "path": "114",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "213": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "AND",
      "path": "114"
    },
    "214": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "215": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "DUP2",
      "path": "114"
    },
    "216": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "217": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        626,
        642
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "218": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "ISZERO",
      "path": "186",
      "statement": 3
    },
    "219": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "ISZERO",
      "path": "186"
    },
    "220": {
      "fn": "TimersBlockNumberImpl.isStarted",
      "offset": [
        561,
        651
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xA0"
    },
    "223": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "JUMP",
      "path": "114"
    },
    "224": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        208,
        304
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "225": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 4,
      "value": "0x40"
    },
    "227": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "DUP1",
      "path": "114"
    },
    "228": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "229": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "231": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "DUP1",
      "path": "114"
    },
    "232": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "DUP3",
      "path": "114"
    },
    "233": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "ADD",
      "path": "114"
    },
    "234": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "DUP4",
      "path": "114"
    },
    "235": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "238": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "239": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "PUSH8",
      "path": "114",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "248": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "AND",
      "path": "114"
    },
    "249": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "250": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "DUP3",
      "path": "114"
    },
    "251": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "252": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        277,
        295
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "253": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        208,
        304
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "254": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        208,
        304
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "255": {
      "op": "SWAP1"
    },
    "256": {
      "op": "DUP2"
    },
    "257": {
      "op": "MSTORE"
    },
    "258": {
      "op": "ADD"
    },
    "259": {
      "fn": "TimersBlockNumberImpl.getDeadline",
      "offset": [
        208,
        304
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xAC"
    },
    "262": {
      "op": "JUMP"
    },
    "263": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        657,
        747
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "264": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 5,
      "value": "0x40"
    },
    "266": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "DUP1",
      "path": "114"
    },
    "267": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "268": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "270": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "DUP2",
      "path": "114"
    },
    "271": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "ADD",
      "path": "114"
    },
    "272": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "273": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "274": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "277": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "278": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "PUSH8",
      "path": "114",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "287": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "AND",
      "path": "114"
    },
    "288": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "289": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "DUP2",
      "path": "114"
    },
    "290": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "291": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        722,
        738
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "292": {
      "fn": "Timers.isPending",
      "offset": [
        1865,
        1877
      ],
      "op": "NUMBER",
      "path": "186",
      "statement": 6
    },
    "293": {
      "op": "LT"
    },
    "294": {
      "fn": "TimersBlockNumberImpl.isPending",
      "offset": [
        657,
        747
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0xA0"
    },
    "297": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "JUMP",
      "path": "114"
    },
    "298": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "299": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x15A"
    },
    "302": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x138"
    },
    "305": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "CALLDATASIZE",
      "path": "114"
    },
    "306": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x4"
    },
    "308": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1DC"
    },
    "311": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "jump": "i",
      "offset": [
        310,
        402
      ],
      "op": "JUMP",
      "path": "114"
    },
    "312": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "313": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        366,
        372
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 7,
      "value": "0x0"
    },
    "315": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "DUP1",
      "path": "186",
      "statement": 8
    },
    "316": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "SLOAD",
      "path": "186"
    },
    "317": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "PUSH8",
      "path": "186",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "326": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "DUP4",
      "path": "186"
    },
    "327": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "AND",
      "path": "186"
    },
    "328": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "337": {
      "op": "NOT"
    },
    "338": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "SWAP1",
      "path": "186"
    },
    "339": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "SWAP2",
      "path": "186"
    },
    "340": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "AND",
      "path": "186"
    },
    "341": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "OR",
      "path": "186"
    },
    "342": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "SWAP1",
      "path": "186"
    },
    "343": {
      "fn": "Timers.setDeadline",
      "offset": [
        1378,
        1405
      ],
      "op": "SSTORE",
      "path": "186"
    },
    "344": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "POP",
      "path": "114"
    },
    "345": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "JUMP",
      "path": "114"
    },
    "346": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "347": {
      "fn": "TimersBlockNumberImpl.setDeadline",
      "offset": [
        310,
        402
      ],
      "op": "STOP",
      "path": "114"
    },
    "348": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        408,
        463
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "349": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        408,
        463
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x15A"
    },
    "352": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        408,
        463
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x18E"
    },
    "355": {
      "fn": "TimersBlockNumberImpl.reset",
      "jump": "i",
      "offset": [
        408,
        463
      ],
      "op": "JUMP",
      "path": "114"
    },
    "356": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        532,
        548
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "357": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        525,
        548
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "358": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        525,
        548
      ],
      "op": "POP",
      "path": "114"
    },
    "359": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "offset": [
        469,
        555
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "360": {
      "fn": "TimersBlockNumberImpl.isUnset",
      "jump": "o",
      "offset": [
        469,
        555
      ],
      "op": "JUMP",
      "path": "114"
    },
    "361": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        753,
        843
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "362": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "PUSH1",
      "path": "114",
      "statement": 9,
      "value": "0x40"
    },
    "364": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "DUP1",
      "path": "114"
    },
    "365": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "MLOAD",
      "path": "114"
    },
    "366": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x20"
    },
    "368": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "DUP2",
      "path": "114"
    },
    "369": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "ADD",
      "path": "114"
    },
    "370": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "371": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "SWAP2",
      "path": "114"
    },
    "372": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "373": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        795,
        799
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "375": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "DUP1",
      "path": "114"
    },
    "376": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "SLOAD",
      "path": "114"
    },
    "377": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "PUSH8",
      "path": "114",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "386": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "AND",
      "path": "114"
    },
    "387": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "DUP3",
      "path": "114"
    },
    "388": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "MSTORE",
      "path": "114"
    },
    "389": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        795,
        799
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "390": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        836
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x164"
    },
    "393": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        836
      ],
      "op": "SWAP1",
      "path": "114"
    },
    "394": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "offset": [
        818,
        834
      ],
      "op": "PUSH2",
      "path": "114",
      "value": "0x1A6"
    },
    "397": {
      "fn": "TimersBlockNumberImpl.isExpired",
      "jump": "i",
      "offset": [
        818,
        836
      ],
      "op": "JUMP",
      "path": "114"
    },
    "398": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        408,
        463
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "399": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        442,
        456
      ],
      "op": "PUSH2",
      "path": "114",
      "statement": 10,
      "value": "0x1A4"
    },
    "402": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        442,
        448
      ],
      "op": "PUSH1",
      "path": "114",
      "value": "0x0"
    },
    "404": {
      "fn": "Timers.reset",
      "offset": [
        1479,
        1498
      ],
      "op": "DUP1",
      "path": "186",
      "statement": 11
    },
    "405": {
      "fn": "Timers.reset",
      "offset": [
        1479,
        1498
      ],
      "op": "SLOAD",
      "path": "186"
    },
    "406": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "415": {
      "op": "NOT"
    },
    "416": {
      "fn": "Timers.reset",
      "offset": [
        1479,
        1498
      ],
      "op": "AND",
      "path": "186"
    },
    "417": {
      "fn": "Timers.reset",
      "offset": [
        1479,
        1498
      ],
      "op": "SWAP1",
      "path": "186"
    },
    "418": {
      "fn": "Timers.reset",
      "offset": [
        1479,
        1498
      ],
      "op": "SSTORE",
      "path": "186"
    },
    "419": {
      "fn": "Timers.reset",
      "offset": [
        1418,
        1505
      ],
      "op": "JUMP",
      "path": "186"
    },
    "420": {
      "fn": "TimersBlockNumberImpl.reset",
      "offset": [
        442,
        456
      ],
      "op": "JUMPDEST",
      "path": "114"
    },
    "421": {
      "fn": "TimersBlockNumberImpl.reset",
      "jump": "o",
      "offset": [
        408,
        463
      ],
      "op": "JUMP",
      "path": "114"
    },
    "422": {
      "fn": "Timers.isExpired",
      "offset": [
        1890,
        2039
      ],
      "op": "JUMPDEST",
      "path": "186"
    },
    "423": {
      "fn": "Timers.isExpired",
      "offset": [
        1958,
        1962
      ],
      "op": "PUSH1",
      "path": "186",
      "value": "0x0"
    },
    "425": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        1997
      ],
      "op": "PUSH2",
      "path": "186",
      "statement": 12,
      "value": "0x1BC"
    },
    "428": {
      "fn": "Timers.isExpired",
      "offset": [
        1991,
        1996
      ],
      "op": "DUP3",
      "path": "186"
    },
    "429": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1739
      ],
      "op": "MLOAD",
      "path": "186"
    },
    "430": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "PUSH8",
      "path": "186",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "439": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "AND",
      "path": "186"
    },
    "440": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "ISZERO",
      "path": "186"
    },
    "441": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "ISZERO",
      "path": "186"
    },
    "442": {
      "fn": "Timers.isStarted",
      "offset": [
        1724,
        1743
      ],
      "op": "SWAP1",
      "path": "186"
    },
    "443": {
      "fn": "Timers.isStarted",
      "offset": [
        1633,
        1750
      ],
      "op": "JUMP",
      "path": "186"
    },
    "444": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        1997
      ],
      "op": "JUMPDEST",
      "path": "186"
    },
    "445": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        2032
      ],
      "op": "DUP1",
      "path": "186"
    },
    "446": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        2032
      ],
      "op": "ISZERO",
      "path": "186"
    },
    "447": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        2032
      ],
      "op": "PUSH2",
      "path": "186",
      "value": "0x1D6"
    },
    "450": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        2032
      ],
      "op": "JUMPI",
      "path": "186"
    },
    "451": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        2032
      ],
      "op": "POP",
      "path": "186"
    },
    "452": {
      "fn": "Timers.isExpired",
      "offset": [
        2020,
        2032
      ],
      "op": "NUMBER",
      "path": "186"
    },
    "453": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2006
      ],
      "op": "DUP3",
      "path": "186"
    },
    "454": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2016
      ],
      "op": "PUSH1",
      "path": "186",
      "value": "0x0"
    },
    "456": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2016
      ],
      "op": "ADD",
      "path": "186"
    },
    "457": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2016
      ],
      "op": "MLOAD",
      "path": "186"
    },
    "458": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2032
      ],
      "op": "PUSH8",
      "path": "186",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "467": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2032
      ],
      "op": "AND",
      "path": "186"
    },
    "468": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2032
      ],
      "op": "GT",
      "path": "186"
    },
    "469": {
      "fn": "Timers.isExpired",
      "offset": [
        2001,
        2032
      ],
      "op": "ISZERO",
      "path": "186"
    },
    "470": {
      "fn": "Timers.isExpired",
      "offset": [
        1981,
        2032
      ],
      "op": "JUMPDEST",
      "path": "186"
    },
    "471": {
      "fn": "Timers.isExpired",
      "offset": [
        1974,
        2032
      ],
      "op": "SWAP3",
      "path": "186"
    },
    "472": {
      "fn": "Timers.isExpired",
      "offset": [
        1890,
        2039
      ],
      "op": "SWAP2",
      "path": "186"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "fn": "Timers.isExpired",
      "jump": "o",
      "offset": [
        1890,
        2039
      ],
      "op": "JUMP",
      "path": "186"
    },
    "476": {
      "op": "JUMPDEST"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "481": {
      "op": "DUP3"
    },
    "482": {
      "op": "DUP5"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "op": "SLT"
    },
    "485": {
      "op": "ISZERO"
    },
    "486": {
      "op": "PUSH2",
      "value": "0x1EE"
    },
    "489": {
      "op": "JUMPI"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "492": {
      "op": "DUP1"
    },
    "493": {
      "op": "REVERT"
    },
    "494": {
      "op": "JUMPDEST"
    },
    "495": {
      "op": "DUP2"
    },
    "496": {
      "op": "CALLDATALOAD"
    },
    "497": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "AND"
    },
    "508": {
      "op": "DUP2"
    },
    "509": {
      "op": "EQ"
    },
    "510": {
      "op": "PUSH2",
      "value": "0x206"
    },
    "513": {
      "op": "JUMPI"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "516": {
      "op": "DUP1"
    },
    "517": {
      "op": "REVERT"
    },
    "518": {
      "op": "JUMPDEST"
    },
    "519": {
      "op": "SWAP4"
    },
    "520": {
      "op": "SWAP3"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e079c3768bfee16aa70fa85611e5fca37ec044dd",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Timers.sol\";\n\ncontract TimersBlockNumberImpl {\n    using Timers for Timers.BlockNumber;\n\n    Timers.BlockNumber private _timer;\n\n    function getDeadline() public view returns (uint64) {\n        return _timer.getDeadline();\n    }\n\n    function setDeadline(uint64 timestamp) public {\n        _timer.setDeadline(timestamp);\n    }\n\n    function reset() public {\n        _timer.reset();\n    }\n\n    function isUnset() public view returns (bool) {\n        return _timer.isUnset();\n    }\n\n    function isStarted() public view returns (bool) {\n        return _timer.isStarted();\n    }\n\n    function isPending() public view returns (bool) {\n        return _timer.isPending();\n    }\n\n    function isExpired() public view returns (bool) {\n        return _timer.isExpired();\n    }\n}\n",
  "sourceMap": "89:756:114:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/TimersBlockNumberImpl.sol",
  "type": "contract"
}