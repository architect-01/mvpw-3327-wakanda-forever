{
  "abi": [],
  "allSourcePaths": {
    "185": "contracts/OpenZepellin/contracts/utils/Strings.sol",
    "187": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol",
    "189": "contracts/OpenZepellin/contracts/utils/cryptography/SignatureChecker.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        24338
      ],
      "ECDSA": [
        25552
      ],
      "IERC1271": [
        5980
      ],
      "SignatureChecker": [
        25719
      ],
      "Strings": [
        24948
      ]
    },
    "id": 25720,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:189"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 25643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25720,
        "sourceUnit": 25553,
        "src": "133:21:189",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 25644,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25720,
        "sourceUnit": 24339,
        "src": "155:24:189",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 25645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25720,
        "sourceUnit": 5981,
        "src": "180:39:189",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 25646,
          "nodeType": "StructuredDocumentation",
          "src": "221:538:189",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract signatures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 25719,
        "linearizedBaseContracts": [
          25719
        ],
        "name": "SignatureChecker",
        "nameLocation": "768:16:189",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25717,
              "nodeType": "Block",
              "src": "933:491:189",
              "statements": [
                {
                  "assignments": [
                    25658,
                    25661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25658,
                      "mutability": "mutable",
                      "name": "recovered",
                      "nameLocation": "952:9:189",
                      "nodeType": "VariableDeclaration",
                      "scope": 25717,
                      "src": "944:17:189",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "944:7:189",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25661,
                      "mutability": "mutable",
                      "name": "error",
                      "nameLocation": "982:5:189",
                      "nodeType": "VariableDeclaration",
                      "scope": 25717,
                      "src": "963:24:189",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RecoverError_$25172",
                        "typeString": "enum ECDSA.RecoverError"
                      },
                      "typeName": {
                        "id": 25660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25659,
                          "name": "ECDSA.RecoverError",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25172,
                          "src": "963:18:189"
                        },
                        "referencedDeclaration": 25172,
                        "src": "963:18:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$25172",
                          "typeString": "enum ECDSA.RecoverError"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25667,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25664,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25650,
                        "src": "1008:4:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 25665,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25652,
                        "src": "1014:9:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25662,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "991:5:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$25552_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 25663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryRecover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25291,
                      "src": "991:16:189",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$25172_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
                      }
                    },
                    "id": 25666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:33:189",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$25172_$",
                      "typeString": "tuple(address,enum ECDSA.RecoverError)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "943:81:189"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 25676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_RecoverError_$25172",
                        "typeString": "enum ECDSA.RecoverError"
                      },
                      "id": 25672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 25668,
                        "name": "error",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25661,
                        "src": "1038:5:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$25172",
                          "typeString": "enum ECDSA.RecoverError"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 25669,
                            "name": "ECDSA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25552,
                            "src": "1047:5:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ECDSA_$25552_$",
                              "typeString": "type(library ECDSA)"
                            }
                          },
                          "id": 25670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "RecoverError",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25172,
                          "src": "1047:18:189",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_RecoverError_$25172_$",
                            "typeString": "type(enum ECDSA.RecoverError)"
                          }
                        },
                        "id": 25671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NoError",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25167,
                        "src": "1047:26:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$25172",
                          "typeString": "enum ECDSA.RecoverError"
                        }
                      },
                      "src": "1038:35:189",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 25675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 25673,
                        "name": "recovered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25658,
                        "src": "1077:9:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 25674,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25648,
                        "src": "1090:6:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1077:19:189",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1038:58:189",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25680,
                  "nodeType": "IfStatement",
                  "src": "1034:100:189",
                  "trueBody": {
                    "id": 25679,
                    "nodeType": "Block",
                    "src": "1098:36:189",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 25677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1119:4:189",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 25656,
                        "id": 25678,
                        "nodeType": "Return",
                        "src": "1112:11:189"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    25682,
                    25684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25682,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1150:7:189",
                      "nodeType": "VariableDeclaration",
                      "scope": 25717,
                      "src": "1145:12:189",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25681,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1145:4:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25684,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1172:6:189",
                      "nodeType": "VariableDeclaration",
                      "scope": 25717,
                      "src": "1159:19:189",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25683,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1159:5:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25696,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25689,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5980,
                                "src": "1236:8:189",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$5980_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 25690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "isValidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5979,
                              "src": "1236:25:189",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
                              }
                            },
                            "id": 25691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1236:34:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 25692,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25650,
                            "src": "1272:4:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 25693,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25652,
                            "src": "1278:9:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 25687,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1213:3:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1213:22:189",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1213:75:189",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25685,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25648,
                        "src": "1182:6:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 25686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1182:17:189",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 25695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:116:189",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1144:154:189"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 25702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25697,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25682,
                            "src": "1316:7:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 25701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 25698,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25684,
                                "src": "1327:6:189",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 25699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1327:13:189",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 25700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1344:2:189",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "1327:19:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1316:30:189",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 25713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 25705,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25684,
                                "src": "1361:6:189",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 25707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1370:6:189",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes4_$",
                                      "typeString": "type(bytes4)"
                                    },
                                    "typeName": {
                                      "id": 25706,
                                      "name": "bytes4",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1370:6:189",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 25708,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1369:8:189",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes4_$",
                                  "typeString": "type(bytes4)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bytes4_$",
                                  "typeString": "type(bytes4)"
                                }
                              ],
                              "expression": {
                                "id": 25703,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1350:3:189",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 25704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "1350:10:189",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 25709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1350:28:189",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 25710,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5980,
                                "src": "1382:8:189",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$5980_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 25711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "isValidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5979,
                              "src": "1382:25:189",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
                              }
                            },
                            "id": 25712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1382:34:189",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "1350:66:189",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1316:100:189",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 25715,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1315:102:189",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25656,
                  "id": 25716,
                  "nodeType": "Return",
                  "src": "1308:109:189"
                }
              ]
            },
            "id": 25718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "800:19:189",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25648,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "837:6:189",
                  "nodeType": "VariableDeclaration",
                  "scope": 25718,
                  "src": "829:14:189",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:189",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25650,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "861:4:189",
                  "nodeType": "VariableDeclaration",
                  "scope": 25718,
                  "src": "853:12:189",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:189",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25652,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "888:9:189",
                  "nodeType": "VariableDeclaration",
                  "scope": 25718,
                  "src": "875:22:189",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25651,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:5:189",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:84:189"
            },
            "returnParameters": {
              "id": 25656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25718,
                  "src": "927:4:189",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:4:189",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:6:189"
            },
            "scope": 25719,
            "src": "791:633:189",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 25720,
        "src": "760:666:189",
        "usedErrors": []
      }
    ],
    "src": "108:1319:189"
  },
  "bytecode": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220782f8c10538872857c237d5718b3e99c4fcfa5c459cbef66ac3cad9e6dd8490b64736f6c63430008060033",
  "bytecodeSha1": "1ce946f6a4eaa185320328620ccf999b9e86db7c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SignatureChecker",
  "coverageMap": {
    "branches": {
      "185": {},
      "187": {},
      "189": {}
    },
    "statements": {
      "185": {},
      "187": {},
      "189": {}
    }
  },
  "dependencies": [
    "ECDSA",
    "Strings"
  ],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220782f8c10538872857c237d5718b3e99c4fcfa5c459cbef66ac3cad9e6dd8490b64736f6c63430008060033",
  "deployedSourceMap": "760:666:189:-:0;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract signatures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    760,
    1426
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x2F8C10538872857C237D5718B3E99C4FCFA5C459CBEF66AC3C 0xAD SWAP15 PUSH14 0xD8490B64736F6C63430008060033 ",
  "pcMap": {
    "0": {
      "offset": [
        760,
        1426
      ],
      "op": "PUSH20",
      "path": "189",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "ADDRESS",
      "path": "189"
    },
    "22": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "EQ",
      "path": "189"
    },
    "23": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "MSTORE",
      "path": "189"
    },
    "28": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "PUSH1",
      "path": "189",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "DUP1",
      "path": "189"
    },
    "31": {
      "fn": null,
      "offset": [
        760,
        1426
      ],
      "op": "REVERT",
      "path": "189"
    }
  },
  "sha1": "a2cc71f9b4620bad20fe6f712b346b9f2784341c",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n * ERC1271 contract signatures. Using this instead of ECDSA.recover in your contract will make them compatible with\n * smart contract wallets such as Argent and Gnosis.\n *\n * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n * through time. It could return true at block N and false at block N+1 (or the opposite).\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        if (error == ECDSA.RecoverError.NoError && recovered == signer) {\n            return true;\n        }\n\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success && result.length == 32 && abi.decode(result, (bytes4)) == IERC1271.isValidSignature.selector);\n    }\n}\n",
  "sourceMap": "760:666:189:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;760:666:189;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/utils/cryptography/SignatureChecker.sol",
  "type": "library"
}