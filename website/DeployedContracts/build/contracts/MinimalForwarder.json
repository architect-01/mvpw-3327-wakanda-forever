{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct MinimalForwarder.ForwardRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct MinimalForwarder.ForwardRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "17": "contracts/OpenZepellin/contracts/metatx/MinimalForwarder.sol",
    "41": "contracts/OpenZepellin/contracts/utils/Strings.sol",
    "43": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol",
    "44": "contracts/OpenZepellin/contracts/utils/cryptography/draft-EIP712.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/metatx/MinimalForwarder.sol",
    "exportedSymbols": {
      "ECDSA": [
        8425
      ],
      "EIP712": [
        6636
      ],
      "MinimalForwarder": [
        3560
      ],
      "Strings": [
        11619
      ]
    },
    "id": 3561,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3391,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "96:23:17"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol",
        "file": "../utils/cryptography/ECDSA.sol",
        "id": 3392,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3561,
        "sourceUnit": 8426,
        "src": "121:41:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "../utils/cryptography/draft-EIP712.sol",
        "id": 3393,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3561,
        "sourceUnit": 6637,
        "src": "163:48:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3395,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6636,
              "src": "362:6:17"
            },
            "id": 3396,
            "nodeType": "InheritanceSpecifier",
            "src": "362:6:17"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3394,
          "nodeType": "StructuredDocumentation",
          "src": "213:119:17",
          "text": " @dev Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}."
        },
        "fullyImplemented": true,
        "id": 3560,
        "linearizedBaseContracts": [
          3560,
          6636
        ],
        "name": "MinimalForwarder",
        "nameLocation": "342:16:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3399,
            "libraryName": {
              "id": 3397,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8425,
              "src": "381:5:17"
            },
            "nodeType": "UsingForDirective",
            "src": "375:24:17",
            "typeName": {
              "id": 3398,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "391:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "canonicalName": "MinimalForwarder.ForwardRequest",
            "id": 3412,
            "members": [
              {
                "constant": false,
                "id": 3401,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "445:4:17",
                "nodeType": "VariableDeclaration",
                "scope": 3412,
                "src": "437:12:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "437:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3403,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "467:2:17",
                "nodeType": "VariableDeclaration",
                "scope": 3412,
                "src": "459:10:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3402,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "459:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3405,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "487:5:17",
                "nodeType": "VariableDeclaration",
                "scope": 3412,
                "src": "479:13:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3404,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3407,
                "mutability": "mutable",
                "name": "gas",
                "nameLocation": "510:3:17",
                "nodeType": "VariableDeclaration",
                "scope": 3412,
                "src": "502:11:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3406,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "502:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3409,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "531:5:17",
                "nodeType": "VariableDeclaration",
                "scope": 3412,
                "src": "523:13:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3408,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "523:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3411,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "552:4:17",
                "nodeType": "VariableDeclaration",
                "scope": 3412,
                "src": "546:10:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3410,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "546:5:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ForwardRequest",
            "nameLocation": "412:14:17",
            "nodeType": "StructDefinition",
            "scope": 3560,
            "src": "405:158:17",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3417,
            "mutability": "constant",
            "name": "_TYPEHASH",
            "nameLocation": "594:9:17",
            "nodeType": "VariableDeclaration",
            "scope": 3560,
            "src": "569:148:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3413,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "569:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "466f72776172645265717565737428616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c6279746573206461746129",
                  "id": 3415,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "624:92:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48",
                    "typeString": "literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""
                  },
                  "value": "ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48",
                    "typeString": "literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""
                  }
                ],
                "id": 3414,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "614:9:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "614:103:17",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3421,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "760:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 3560,
            "src": "724:43:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3420,
              "keyType": {
                "id": 3418,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "732:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "724:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3419,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "743:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3428,
              "nodeType": "Block",
              "src": "824:2:17",
              "statements": []
            },
            "id": 3429,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d696e696d616c466f72776172646572",
                    "id": 3424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "795:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9e0923a39f515e9a8cebc9fb694b9abf7e4b8c3f7ab6f81b56eabdac504b08dc",
                      "typeString": "literal_string \"MinimalForwarder\""
                    },
                    "value": "MinimalForwarder"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 3425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "815:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 3426,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3423,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6636,
                  "src": "788:6:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "788:35:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "785:2:17"
            },
            "returnParameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:17"
            },
            "scope": 3560,
            "src": "774:52:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3440,
              "nodeType": "Block",
              "src": "894:37:17",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3436,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "911:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3438,
                    "indexExpression": {
                      "id": 3437,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3431,
                      "src": "919:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "911:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3435,
                  "id": 3439,
                  "nodeType": "Return",
                  "src": "904:20:17"
                }
              ]
            },
            "functionSelector": "2d0335ab",
            "id": 3441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "841:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3431,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "858:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3441,
                  "src": "850:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "849:14:17"
            },
            "returnParameters": {
              "id": 3435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3441,
                  "src": "885:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:9:17"
            },
            "scope": 3560,
            "src": "832:99:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "1035:264:17",
              "statements": [
                {
                  "assignments": [
                    3452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3452,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "1053:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3492,
                      "src": "1045:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3451,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1045:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3478,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3476,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "1213:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3457,
                                    "name": "_TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3417,
                                    "src": "1113:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3458,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "1124:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 3459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "from",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3401,
                                    "src": "1124:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3460,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "1134:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 3461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3403,
                                    "src": "1134:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3462,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "1142:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 3463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3405,
                                    "src": "1142:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3464,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "1153:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 3465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "gas",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3407,
                                    "src": "1153:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3466,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "1162:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                        "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                      }
                                    },
                                    "id": 3467,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nonce",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3409,
                                    "src": "1162:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3469,
                                          "name": "req",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3444,
                                          "src": "1183:3:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                                          }
                                        },
                                        "id": 3470,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "data",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3411,
                                        "src": "1183:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_calldata_ptr",
                                          "typeString": "bytes calldata"
                                        }
                                      ],
                                      "id": 3468,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1173:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 3471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1173:19:17",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3455,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1102:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "1102:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1102:91:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 3454,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1092:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 3473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1092:102:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 3453,
                          "name": "_hashTypedDataV4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6635,
                          "src": "1062:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (bytes32) view returns (bytes32)"
                          }
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1062:142:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 3475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8191,
                      "src": "1062:150:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:161:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1045:178:17"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 3479,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3421,
                          "src": "1240:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3482,
                        "indexExpression": {
                          "expression": {
                            "id": 3480,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3444,
                            "src": "1248:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 3481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3401,
                          "src": "1248:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1240:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3483,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "1261:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 3484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3409,
                        "src": "1261:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1240:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3486,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3452,
                        "src": "1274:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3487,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3444,
                          "src": "1284:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3401,
                        "src": "1284:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1274:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1240:52:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3450,
                  "id": 3491,
                  "nodeType": "Return",
                  "src": "1233:59:17"
                }
              ]
            },
            "functionSelector": "bf5d3bdb",
            "id": 3493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "946:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3444,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "977:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "953:27:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                    "typeString": "struct MinimalForwarder.ForwardRequest"
                  },
                  "typeName": {
                    "id": 3443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3442,
                      "name": "ForwardRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3412,
                      "src": "953:14:17"
                    },
                    "referencedDeclaration": 3412,
                    "src": "953:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForwardRequest_$3412_storage_ptr",
                      "typeString": "struct MinimalForwarder.ForwardRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3446,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "997:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "982:24:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3445,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:55:17"
            },
            "returnParameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "1029:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1028:6:17"
            },
            "scope": 3560,
            "src": "937:362:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3558,
              "nodeType": "Block",
              "src": "1449:518:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3507,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3496,
                            "src": "1474:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          {
                            "id": 3508,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3498,
                            "src": "1479:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 3506,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3493,
                          "src": "1467:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_ForwardRequest_$3412_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct MinimalForwarder.ForwardRequest calldata,bytes calldata) view returns (bool)"
                          }
                        },
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1467:22:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d616c466f727761726465723a207369676e617475726520646f6573206e6f74206d617463682072657175657374",
                        "id": 3510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1491:52:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae",
                          "typeString": "literal_string \"MinimalForwarder: signature does not match request\""
                        },
                        "value": "MinimalForwarder: signature does not match request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae",
                          "typeString": "literal_string \"MinimalForwarder: signature does not match request\""
                        }
                      ],
                      "id": 3505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1459:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1459:85:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3512,
                  "nodeType": "ExpressionStatement",
                  "src": "1459:85:17"
                },
                {
                  "expression": {
                    "id": 3521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3513,
                        "name": "_nonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3421,
                        "src": "1554:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3516,
                      "indexExpression": {
                        "expression": {
                          "id": 3514,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3496,
                          "src": "1562:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 3515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3401,
                        "src": "1562:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1554:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3517,
                          "name": "req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3496,
                          "src": "1574:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                            "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                          }
                        },
                        "id": 3518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3409,
                        "src": "1574:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 3519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1574:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1554:33:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3522,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:33:17"
                },
                {
                  "assignments": [
                    3524,
                    3526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3524,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1604:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3558,
                      "src": "1599:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3523,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1599:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3526,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "1626:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3558,
                      "src": "1613:23:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3525,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1613:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3543,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3537,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3496,
                              "src": "1714:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 3538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3411,
                            "src": "1714:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 3539,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3496,
                              "src": "1724:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 3540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3401,
                            "src": "1724:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3535,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1697:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1697:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1697:36:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 3527,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3496,
                            "src": "1640:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3403,
                          "src": "1640:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1640:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "gas",
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 3530,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3496,
                            "src": "1657:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 3531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3407,
                          "src": "1657:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 3532,
                            "name": "req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3496,
                            "src": "1673:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                              "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 3533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3405,
                          "src": "1673:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1640:43:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:103:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1598:145:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3545,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "1896:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1896:9:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3547,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3496,
                              "src": "1908:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                                "typeString": "struct MinimalForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 3548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3407,
                            "src": "1908:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3633",
                            "id": 3549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1918:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_63_by_1",
                              "typeString": "int_const 63"
                            },
                            "value": "63"
                          },
                          "src": "1908:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1896:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3544,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1889:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:32:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:32:17"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 3554,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3524,
                        "src": "1940:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3555,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3526,
                        "src": "1949:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 3556,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1939:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 3504,
                  "id": 3557,
                  "nodeType": "Return",
                  "src": "1932:28:17"
                }
              ]
            },
            "functionSelector": "47153f82",
            "id": 3559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "1314:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3496,
                  "mutability": "mutable",
                  "name": "req",
                  "nameLocation": "1346:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "1322:27:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForwardRequest_$3412_calldata_ptr",
                    "typeString": "struct MinimalForwarder.ForwardRequest"
                  },
                  "typeName": {
                    "id": 3495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3494,
                      "name": "ForwardRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3412,
                      "src": "1322:14:17"
                    },
                    "referencedDeclaration": 3412,
                    "src": "1322:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForwardRequest_$3412_storage_ptr",
                      "typeString": "struct MinimalForwarder.ForwardRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1366:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "1351:24:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1321:55:17"
            },
            "returnParameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "1425:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "1431:12:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3502,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1424:20:17"
            },
            "scope": 3560,
            "src": "1305:662:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3561,
        "src": "333:1636:17",
        "usedErrors": []
      }
    ],
    "src": "96:1874:17"
  },
  "bytecode": "61014060405234801561001157600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fb8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060601b60c052610120525061011392505050565b60805160a05160c05160601c60e0516101005161012051610b5761016560003960006104f2015260006105410152600061051c015260006104750152600061049f015260006104c90152610b576000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f6100543660046108d9565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610909565b6100d3565b6040516100799291906109fa565b3480156100af57600080fd5b506100c36100be366004610909565b610272565b6040519015158152602001610079565b600060606100e2858585610272565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d60808601356001610a7d565b60008061016d60208901896108d9565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a791906108d9565b6001600160a01b0316606088013560408901356101c760a08b018b610a36565b6101d460208d018d6108d9565b6040516020016101e6939291906109b8565b60408051601f1981840301815290829052610200916109de565b600060405180830381858888f193505050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b509092509050610258603f6060890135610aa3565b5a1161026657610266610af5565b90969095509350505050565b60008061038584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061037f92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e2905060208a018a6108d9565b6102f260408b0160208c016108d9565b60408b013560608c013560808d013561030e60a08f018f610a36565b60405161031c9291906109a8565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f0565b90610444565b9050608085013560008061039c60208901896108d9565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103e757506103d260208601866108d9565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061043e6103fd610468565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610453858561058f565b91509150610460816105ff565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104c157507f000000000000000000000000000000000000000000000000000000000000000046145b156104eb57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156105c65760208301516040840151606085015160001a6105ba878285856107bd565b945094505050506105f8565b8251604014156105f057602083015160408401516105e58683836108aa565b9350935050506105f8565b506000905060025b9250929050565b600081600481111561061357610613610b0b565b141561061c5750565b600181600481111561063057610630610b0b565b141561067e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610145565b600281600481111561069257610692610b0b565b14156106e05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b60038160048111156106f4576106f4610b0b565b141561074d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b600481600481111561076157610761610b0b565b14156107ba5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107f457506000905060036108a1565b8460ff16601b1415801561080c57508460ff16601c14155b1561081d57506000905060046108a1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610871573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661089a576000600192509250506108a1565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016108cb878288856107bd565b935093505050935093915050565b6000602082840312156108eb57600080fd5b81356001600160a01b038116811461090257600080fd5b9392505050565b60008060006040848603121561091e57600080fd5b833567ffffffffffffffff8082111561093657600080fd5b9085019060c0828803121561094a57600080fd5b9093506020850135908082111561096057600080fd5b818601915086601f83011261097457600080fd5b81358181111561098357600080fd5b87602082850101111561099557600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600082516109f0818460208701610ac5565b9190910192915050565b82151581526040602082015260008251806040840152610a21816060850160208701610ac5565b601f01601f1916919091016060019392505050565b6000808335601e19843603018112610a4d57600080fd5b83018035915067ffffffffffffffff821115610a6857600080fd5b6020019150368190038213156105f857600080fd5b60008219821115610a9e57634e487b7160e01b600052601160045260246000fd5b500190565b600082610ac057634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015610ae0578181015183820152602001610ac8565b83811115610aef576000848401525b50505050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212209dc01bd31ddbed8031ff30426bb601019106aa1a2217399564c51064bdaae0bd64736f6c63430008060033",
  "bytecodeSha1": "0d1d058bfd9a2596d103d751bbbcee2e32b8de2c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "MinimalForwarder",
  "coverageMap": {
    "branches": {
      "17": {
        "MinimalForwarder.execute": {
          "25": [
            1467,
            1489,
            true
          ]
        }
      },
      "41": {},
      "43": {
        "ECDSA._throwError": {
          "28": [
            601,
            630,
            false
          ],
          "29": [
            697,
            735,
            false
          ],
          "30": [
            806,
            850,
            false
          ],
          "31": [
            928,
            967,
            false
          ],
          "32": [
            1048,
            1087,
            false
          ]
        },
        "ECDSA.tryRecover": {
          "26": [
            2539,
            2561,
            false
          ],
          "27": [
            3021,
            3043,
            false
          ],
          "33": [
            6781,
            6860,
            false
          ],
          "34": [
            6951,
            6958,
            false
          ],
          "35": [
            6962,
            6969,
            false
          ],
          "36": [
            7196,
            7216,
            false
          ]
        }
      },
      "44": {
        "EIP712._domainSeparatorV4": {
          "37": [
            3219,
            3248,
            false
          ],
          "38": [
            3252,
            3285,
            false
          ]
        }
      }
    },
    "statements": {
      "17": {
        "MinimalForwarder.execute": {
          "1": [
            1459,
            1544
          ],
          "2": [
            1554,
            1587
          ],
          "3": [
            1889,
            1921
          ],
          "4": [
            1932,
            1960
          ]
        },
        "MinimalForwarder.getNonce": {
          "0": [
            904,
            924
          ]
        },
        "MinimalForwarder.verify": {
          "5": [
            1233,
            1292
          ]
        }
      },
      "41": {},
      "43": {
        "ECDSA._throwError": {
          "16": [
            751,
            785
          ],
          "17": [
            866,
            907
          ],
          "18": [
            983,
            1027
          ],
          "19": [
            1103,
            1147
          ]
        },
        "ECDSA.recover": {
          "8": [
            4469,
            4487
          ],
          "9": [
            4497,
            4513
          ]
        },
        "ECDSA.toTypedDataHash": {
          "7": [
            9237,
            9312
          ]
        },
        "ECDSA.tryRecover": {
          "13": [
            2968,
            3000
          ],
          "14": [
            3373,
            3403
          ],
          "15": [
            3434,
            3490
          ],
          "20": [
            6876,
            6927
          ],
          "21": [
            6985,
            7036
          ],
          "22": [
            7232,
            7282
          ],
          "23": [
            7303,
            7340
          ],
          "24": [
            5114,
            5146
          ]
        }
      },
      "44": {
        "EIP712._buildDomainSeparator": {
          "11": [
            3616,
            3707
          ]
        },
        "EIP712._domainSeparatorV4": {
          "10": [
            3301,
            3332
          ],
          "12": [
            3363,
            3434
          ]
        },
        "EIP712._hashTypedDataV4": {
          "6": [
            4435,
            4497
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA",
    "EIP712",
    "Strings"
  ],
  "deployedBytecode": "6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f6100543660046108d9565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610909565b6100d3565b6040516100799291906109fa565b3480156100af57600080fd5b506100c36100be366004610909565b610272565b6040519015158152602001610079565b600060606100e2858585610272565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d60808601356001610a7d565b60008061016d60208901896108d9565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a791906108d9565b6001600160a01b0316606088013560408901356101c760a08b018b610a36565b6101d460208d018d6108d9565b6040516020016101e6939291906109b8565b60408051601f1981840301815290829052610200916109de565b600060405180830381858888f193505050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b509092509050610258603f6060890135610aa3565b5a1161026657610266610af5565b90969095509350505050565b60008061038584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061037f92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e2905060208a018a6108d9565b6102f260408b0160208c016108d9565b60408b013560608c013560808d013561030e60a08f018f610a36565b60405161031c9291906109a8565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f0565b90610444565b9050608085013560008061039c60208901896108d9565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103e757506103d260208601866108d9565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061043e6103fd610468565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610453858561058f565b91509150610460816105ff565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104c157507f000000000000000000000000000000000000000000000000000000000000000046145b156104eb57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156105c65760208301516040840151606085015160001a6105ba878285856107bd565b945094505050506105f8565b8251604014156105f057602083015160408401516105e58683836108aa565b9350935050506105f8565b506000905060025b9250929050565b600081600481111561061357610613610b0b565b141561061c5750565b600181600481111561063057610630610b0b565b141561067e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610145565b600281600481111561069257610692610b0b565b14156106e05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b60038160048111156106f4576106f4610b0b565b141561074d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b600481600481111561076157610761610b0b565b14156107ba5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107f457506000905060036108a1565b8460ff16601b1415801561080c57508460ff16601c14155b1561081d57506000905060046108a1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610871573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661089a576000600192509250506108a1565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016108cb878288856107bd565b935093505050935093915050565b6000602082840312156108eb57600080fd5b81356001600160a01b038116811461090257600080fd5b9392505050565b60008060006040848603121561091e57600080fd5b833567ffffffffffffffff8082111561093657600080fd5b9085019060c0828803121561094a57600080fd5b9093506020850135908082111561096057600080fd5b818601915086601f83011261097457600080fd5b81358181111561098357600080fd5b87602082850101111561099557600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600082516109f0818460208701610ac5565b9190910192915050565b82151581526040602082015260008251806040840152610a21816060850160208701610ac5565b601f01601f1916919091016060019392505050565b6000808335601e19843603018112610a4d57600080fd5b83018035915067ffffffffffffffff821115610a6857600080fd5b6020019150368190038213156105f857600080fd5b60008219821115610a9e57634e487b7160e01b600052601160045260246000fd5b500190565b600082610ac057634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015610ae0578181015183820152602001610ac8565b83811115610aef576000848401525b50505050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212209dc01bd31ddbed8031ff30426bb601019106aa1a2217399564c51064bdaae0bd64736f6c63430008060033",
  "deployedSourceMap": "333:1636:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:99;;;;;;;;;;-1:-1:-1;832:99:17;;;;;:::i;:::-;-1:-1:-1;;;;;911:13:17;885:7;911:13;;;;;;;;;;;;832:99;;;;6820:25:52;;;6808:2;6793:18;832:99:17;;;;;;;;1305:662;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;937:362::-;;;;;;;;;;-1:-1:-1;937:362:17;;;;;:::i;:::-;;:::i;:::-;;;2677:14:52;;2670:22;2652:41;;2640:2;2625:18;937:362:17;2607:92:52;1305:662:17;1425:4;1431:12;1467:22;1474:3;1479:9;;1467:6;:22::i;:::-;1459:85;;;;-1:-1:-1;;;1459:85:17;;5291:2:52;1459:85:17;;;5273:21:52;5330:2;5310:18;;;5303:30;5369:34;5349:18;;;5342:62;-1:-1:-1;;;5420:18:52;;;5413:48;5478:19;;1459:85:17;;;;;;;;;1574:13;:9;;;;1586:1;1574:13;:::i;:::-;1554:7;;1562:8;;;;:3;:8;:::i;:::-;-1:-1:-1;;;;;1554:17:17;-1:-1:-1;;;;;1554:17:17;;;;;;;;;;;;:33;;;;1599:12;1613:23;1640:3;:6;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1640:11:17;1657:7;;;;1673:9;;;;1714:8;;;;1657:3;1714:8;:::i;:::-;1724;;;;:3;:8;:::i;:::-;1697:36;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1697:36:17;;;;;;;;;;1640:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1598:145:17;;-1:-1:-1;1598:145:17;-1:-1:-1;1908:12:17;1918:2;1908:7;;;;:12;:::i;:::-;1896:9;:24;1889:32;;;;:::i;:::-;1940:7;;;;-1:-1:-1;1305:662:17;-1:-1:-1;;;;1305:662:17:o;937:362::-;1029:4;1045:14;1062:161;1213:9;;1062:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1062:142:17;;-1:-1:-1;614:103:17;;-1:-1:-1;1124:8:17;;-1:-1:-1;1124:8:17;;;:3;:8;:::i;:::-;1134:6;;;;;;;;:::i;:::-;1142:9;;;;1153:7;;;;1162:9;;;;1183:8;;;;1142:3;1183:8;:::i;:::-;1173:19;;;;;;;:::i;:::-;;;;;;;;;;1102:91;;;3486:25:52;;;;-1:-1:-1;;;;;3585:15:52;;;3565:18;;;3558:43;3637:15;;;;3617:18;;;3610:43;3669:18;;;3662:34;;;;3712:19;;;3705:35;3756:19;;;3749:35;3800:19;;;3793:35;;;;3458:19;;1102:91:17;;;;;;;;;;;;1092:102;;;;;;1062:16;:142::i;:::-;:150;;:161::i;:::-;1045:178;-1:-1:-1;1261:9:17;;;;1240:7;;1248:8;;;;1261:3;1248:8;:::i;:::-;-1:-1:-1;;;;;1240:17:17;-1:-1:-1;;;;;1240:17:17;;;;;;;;;;;;;:30;:52;;;;-1:-1:-1;1284:8:17;;;;:3;:8;:::i;:::-;-1:-1:-1;;;;;1274:18:17;:6;-1:-1:-1;;;;;1274:18:17;;1240:52;1233:59;937:362;-1:-1:-1;;;;;937:362:17:o;4339:165:44:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9254:57:43;;-1:-1:-1;;;9254:57:43;;;2373:27:52;2416:11;;;2409:27;;;2452:12;;;2445:28;;;9218:7:43;;2489:12:52;;9254:57:43;;;;;;;;;;;;9244:68;;;;;;9237:75;;9125:194;;;;;4442:55:44;4435:62;4339:165;-1:-1:-1;;4339:165:44:o;4293:227:43:-;4371:7;4391:17;4410:18;4432:27;4443:4;4449:9;4432:10;:27::i;:::-;4390:69;;;;4469:18;4481:5;4469:11;:18::i;:::-;-1:-1:-1;4504:9:43;4293:227;-1:-1:-1;;;4293:227:43:o;3143:308:44:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:44;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:44;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:44;;;3392:10;3633:73;;;;4098:25:52;;;;3404:12:44;4139:18:52;;;4132:34;3418:15:44;4182:18:52;;;4175:34;3677:13:44;4225:18:52;;;4218:34;3700:4:44;4268:19:52;;;;4261:61;;;;3633:73:44;;;;;;;;;;4070:19:52;;;;3633:73:44;;;3623:84;;;;;;3143:308::o;2228:1279:43:-;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:43;;-1:-1:-1;3454:35:43;3017:484;2228:1279;;;;;:::o;533:631::-;610:20;601:5;:29;;;;;;;;:::i;:::-;;597:561;;;533:631;:::o;597:561::-;706:29;697:5;:38;;;;;;;;:::i;:::-;;693:465;;;751:34;;-1:-1:-1;;;751:34:43;;4938:2:52;751:34:43;;;4920:21:52;4977:2;4957:18;;;4950:30;5016:26;4996:18;;;4989:54;5060:18;;751:34:43;4910:174:52;693:465:43;815:35;806:5;:44;;;;;;;;:::i;:::-;;802:356;;;866:41;;-1:-1:-1;;;866:41:43;;5710:2:52;866:41:43;;;5692:21:52;5749:2;5729:18;;;5722:30;5788:33;5768:18;;;5761:61;5839:18;;866:41:43;5682:181:52;802:356:43;937:30;928:5;:39;;;;;;;;:::i;:::-;;924:234;;;983:44;;-1:-1:-1;;;983:44:43;;6070:2:52;983:44:43;;;6052:21:52;6109:2;6089:18;;;6082:30;6148:34;6128:18;;;6121:62;-1:-1:-1;;;6199:18:52;;;6192:32;6241:19;;983:44:43;6042:224:52;924:234:43;1057:30;1048:5;:39;;;;;;;;:::i;:::-;;1044:114;;;1103:44;;-1:-1:-1;;;1103:44:43;;6473:2:52;1103:44:43;;;6455:21:52;6512:2;6492:18;;;6485:30;6551:34;6531:18;;;6524:62;-1:-1:-1;;;6602:18:52;;;6595:32;6644:19;;1103:44:43;6445:224:52;1044:114:43;533:631;:::o;5744:1603::-;5870:7;;6794:66;6781:79;;6777:161;;;-1:-1:-1;6892:1:43;;-1:-1:-1;6896:30:43;6876:51;;6777:161;6951:1;:7;;6956:2;6951:7;;:18;;;;;6962:1;:7;;6967:2;6962:7;;6951:18;6947:100;;;-1:-1:-1;7001:1:43;;-1:-1:-1;7005:30:43;6985:51;;6947:100;7158:24;;;7141:14;7158:24;;;;;;;;;4560:25:52;;;4633:4;4621:17;;4601:18;;;4594:45;;;;4655:18;;;4648:34;;;4698:18;;;4691:34;;;7158:24:43;;4532:19:52;;7158:24:43;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7158:24:43;;-1:-1:-1;;7158:24:43;;;-1:-1:-1;;;;;;;7196:20:43;;7192:101;;7248:1;7252:29;7232:50;;;;;;;7192:101;7311:6;-1:-1:-1;7319:20:43;;-1:-1:-1;5744:1603:43;;;;;;;;:::o;4774:379::-;4884:7;;-1:-1:-1;;;;;4981:75:43;;5082:3;5078:12;;;5092:2;5074:21;5121:25;5132:4;5074:21;5141:1;4981:75;5121:10;:25::i;:::-;5114:32;;;;;;4774:379;;;;;;:::o;14:286:52:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:52;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:52:o;305:863::-;418:6;426;434;487:2;475:9;466:7;462:23;458:32;455:2;;;503:1;500;493:12;455:2;543:9;530:23;572:18;613:2;605:6;602:14;599:2;;;629:1;626;619:12;599:2;652:22;;;;708:3;690:16;;;686:26;683:2;;;725:1;722;715:12;683:2;748;;-1:-1:-1;803:2:52;788:18;;775:32;;819:16;;;816:2;;;848:1;845;838:12;816:2;886:8;875:9;871:24;861:34;;933:7;926:4;922:2;918:13;914:27;904:2;;955:1;952;945:12;904:2;995;982:16;1021:2;1013:6;1010:14;1007:2;;;1037:1;1034;1027:12;1007:2;1082:7;1077:2;1068:6;1064:2;1060:15;1056:24;1053:37;1050:2;;;1103:1;1100;1093:12;1050:2;1134;1130;1126:11;1116:21;;1156:6;1146:16;;;;;445:723;;;;;:::o;1173:271::-;1356:6;1348;1343:3;1330:33;1312:3;1382:16;;1407:13;;;1382:16;1320:124;-1:-1:-1;1320:124:52:o;1449:382::-;1660:6;1652;1647:3;1634:33;1752:2;1748:15;;;;-1:-1:-1;;1744:53:52;1686:16;;1733:65;;;1822:2;1814:11;;1624:207;-1:-1:-1;1624:207:52:o;1836:274::-;1965:3;2003:6;1997:13;2019:53;2065:6;2060:3;2053:4;2045:6;2041:17;2019:53;:::i;:::-;2088:16;;;;;1973:137;-1:-1:-1;;1973:137:52:o;2704:462::-;2887:6;2880:14;2873:22;2862:9;2855:41;2932:2;2927;2916:9;2912:18;2905:30;2836:4;2964:6;2958:13;3007:6;3002:2;2991:9;2987:18;2980:34;3023:66;3082:6;3077:2;3066:9;3062:18;3057:2;3049:6;3045:15;3023:66;:::i;:::-;3150:2;3129:15;-1:-1:-1;;3125:29:52;3110:45;;;;3157:2;3106:54;;2845:321;-1:-1:-1;;;2845:321:52:o;6856:521::-;6933:4;6939:6;6999:11;6986:25;7093:2;7089:7;7078:8;7062:14;7058:29;7054:43;7034:18;7030:68;7020:2;;7112:1;7109;7102:12;7020:2;7139:33;;7191:20;;;-1:-1:-1;7234:18:52;7223:30;;7220:2;;;7266:1;7263;7256:12;7220:2;7299:4;7287:17;;-1:-1:-1;7330:14:52;7326:27;;;7316:38;;7313:2;;;7367:1;7364;7357:12;7382:225;7422:3;7453:1;7449:6;7446:1;7443:13;7440:2;;;7498:10;7493:3;7489:20;7486:1;7479:31;7533:4;7530:1;7523:15;7561:4;7558:1;7551:15;7440:2;-1:-1:-1;7592:9:52;;7430:177::o;7612:217::-;7652:1;7678;7668:2;;7722:10;7717:3;7713:20;7710:1;7703:31;7757:4;7754:1;7747:15;7785:4;7782:1;7775:15;7668:2;-1:-1:-1;7814:9:52;;7658:171::o;7834:258::-;7906:1;7916:113;7930:6;7927:1;7924:13;7916:113;;;8006:11;;;8000:18;7987:11;;;7980:39;7952:2;7945:10;7916:113;;;8047:6;8044:1;8041:13;8038:2;;;8082:1;8073:6;8068:3;8064:16;8057:27;8038:2;;7887:205;;;:::o;8097:127::-;8158:10;8153:3;8149:20;8146:1;8139:31;8189:4;8186:1;8179:15;8213:4;8210:1;8203:15;8229:127;8290:10;8285:3;8281:20;8278:1;8271:31;8321:4;8318:1;8311:15;8345:4;8342:1;8335:15",
  "language": "Solidity",
  "natspec": {
    "details": "Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    333,
    1969
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x47153F82 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xBF5D3BDB EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x909 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP3 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xE2 DUP6 DUP6 DUP6 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x81B9BDD081B585D18DA081C995C5D595CDD PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16D PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1C7 PUSH1 0xA0 DUP12 ADD DUP12 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x200 SWAP2 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x243 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x258 PUSH1 0x3F PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0xAA3 JUMP JUMPDEST GAS GT PUSH2 0x266 JUMPI PUSH2 0x266 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x385 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x37F SWAP3 POP PUSH32 0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48 SWAP2 POP PUSH2 0x2E2 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x2F2 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH1 0x80 DUP14 ADD CALLDATALOAD PUSH2 0x30E PUSH1 0xA0 DUP16 ADD DUP16 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP3 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x3F0 JUMP JUMPDEST SWAP1 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0x0 DUP1 PUSH2 0x39C PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x3E7 JUMPI POP PUSH2 0x3D2 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E PUSH2 0x3FD PUSH2 0x468 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x453 DUP6 DUP6 PUSH2 0x58F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x460 DUP2 PUSH2 0x5FF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x4C1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x4EB JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x5BA DUP8 DUP3 DUP6 DUP6 PUSH2 0x7BD JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x5F8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x5E5 DUP7 DUP4 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x5F8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x613 JUMPI PUSH2 0x613 PUSH2 0xB0B JUMP JUMPDEST EQ ISZERO PUSH2 0x61C JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x630 JUMPI PUSH2 0x630 PUSH2 0xB0B JUMP JUMPDEST EQ ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0xB0B JUMP JUMPDEST EQ ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0xB0B JUMP JUMPDEST EQ ISZERO PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x145 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0xB0B JUMP JUMPDEST EQ ISZERO PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x145 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x7F4 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x8A1 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x80C JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x81D JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89A JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x8A1 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND PUSH1 0xFF DUP5 SWAP1 SHR PUSH1 0x1B ADD PUSH2 0x8CB DUP8 DUP3 DUP9 DUP6 PUSH2 0x7BD JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP6 ADD SWAP1 PUSH1 0xC0 DUP3 DUP9 SUB SLT ISZERO PUSH2 0x94A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x9F0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xAC5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xA21 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAE0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAC8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xC0 SHL 0xD3 SAR 0xDB 0xED DUP1 BALANCE SELFDESTRUCT ADDRESS TIMESTAMP PUSH12 0xB601019106AA1A2217399564 0xC5 LT PUSH5 0xBDAAE0BD64 PUSH20 0x6F6C634300080600330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        333,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "LT",
      "path": "17"
    },
    "9": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "13": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "SHR",
      "path": "17"
    },
    "19": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "DUP1",
      "path": "17"
    },
    "20": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2D0335AB"
    },
    "25": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "EQ",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "30": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "DUP1",
      "path": "17"
    },
    "31": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x47153F82"
    },
    "36": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "EQ",
      "path": "17"
    },
    "37": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x82"
    },
    "40": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "41": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "DUP1",
      "path": "17"
    },
    "42": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBF5D3BDB"
    },
    "47": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "EQ",
      "path": "17"
    },
    "48": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA3"
    },
    "51": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "52": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "53": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "DUP1",
      "path": "17"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        333,
        1969
      ],
      "op": "REVERT",
      "path": "17"
    },
    "57": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "58": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "59": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "60": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "61": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x45"
    },
    "64": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "67": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "68": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "REVERT",
      "path": "17"
    },
    "69": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6F"
    },
    "74": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x54"
    },
    "77": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "78": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "80": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "83": {
      "fn": "MinimalForwarder.getNonce",
      "jump": "i",
      "offset": [
        832,
        931
      ],
      "op": "JUMP",
      "path": "17"
    },
    "84": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "87": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "89": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "91": {
      "op": "SHL"
    },
    "92": {
      "op": "SUB"
    },
    "93": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "AND",
      "path": "17",
      "statement": 0
    },
    "94": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        885,
        892
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "96": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "97": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "DUP2",
      "path": "17"
    },
    "98": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "99": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "101": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "DUP2",
      "path": "17"
    },
    "102": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "103": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "104": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "106": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "107": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "108": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "109": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        911,
        924
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "110": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMP",
      "path": "17"
    },
    "111": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "112": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "114": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "DUP2"
    },
    "117": {
      "op": "MSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "120": {
      "op": "ADD"
    },
    "121": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "122": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "124": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "125": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "127": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "SUB",
      "path": "17"
    },
    "128": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "129": {
      "fn": "MinimalForwarder.getNonce",
      "offset": [
        832,
        931
      ],
      "op": "RETURN",
      "path": "17"
    },
    "130": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "131": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x95"
    },
    "134": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x90"
    },
    "137": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "138": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "140": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x909"
    },
    "143": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMP",
      "path": "17"
    },
    "144": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "145": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD3"
    },
    "148": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMP",
      "path": "17"
    },
    "149": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "150": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "152": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "153": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x79"
    },
    "156": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "157": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "158": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "159": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9FA"
    },
    "162": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMP",
      "path": "17"
    },
    "163": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "164": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "165": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "DUP1",
      "path": "17"
    },
    "166": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "167": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAF"
    },
    "170": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "171": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "173": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "DUP1",
      "path": "17"
    },
    "174": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "REVERT",
      "path": "17"
    },
    "175": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "176": {
      "op": "POP"
    },
    "177": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC3"
    },
    "180": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBE"
    },
    "183": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "184": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "186": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x909"
    },
    "189": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        937,
        1299
      ],
      "op": "JUMP",
      "path": "17"
    },
    "190": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "191": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x272"
    },
    "194": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        937,
        1299
      ],
      "op": "JUMP",
      "path": "17"
    },
    "195": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "196": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "198": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "199": {
      "op": "SWAP1"
    },
    "200": {
      "op": "ISZERO"
    },
    "201": {
      "op": "ISZERO"
    },
    "202": {
      "op": "DUP2"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x79"
    },
    "210": {
      "op": "JUMP"
    },
    "211": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "212": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1425,
        1429
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "214": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1431,
        1443
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "216": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1467,
        1489
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 1,
      "value": "0xE2"
    },
    "219": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1474,
        1477
      ],
      "op": "DUP6",
      "path": "17"
    },
    "220": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1479,
        1488
      ],
      "op": "DUP6",
      "path": "17"
    },
    "221": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1479,
        1488
      ],
      "op": "DUP6",
      "path": "17"
    },
    "222": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1467,
        1473
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x272"
    },
    "225": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1467,
        1489
      ],
      "op": "JUMP",
      "path": "17"
    },
    "226": {
      "branch": 25,
      "fn": "MinimalForwarder.execute",
      "offset": [
        1467,
        1489
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "227": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14E"
    },
    "230": {
      "branch": 25,
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "231": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "233": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "DUP2",
      "path": "17"
    },
    "242": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "247": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "DUP3",
      "path": "17"
    },
    "248": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "ADD",
      "path": "17"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "254": {
      "op": "DUP3"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH32",
      "value": "0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH18",
      "value": "0x81B9BDD081B585D18DA081C995C5D595CDD"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "319": {
      "op": "DUP3"
    },
    "320": {
      "op": "ADD"
    },
    "321": {
      "op": "MSTORE"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "324": {
      "op": "ADD"
    },
    "325": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "326": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "328": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "329": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "DUP1",
      "path": "17"
    },
    "330": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "331": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "SUB",
      "path": "17"
    },
    "332": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "333": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "17"
    },
    "334": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1459,
        1544
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "335": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1587
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 2,
      "value": "0x15D"
    },
    "338": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1583
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "340": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1583
      ],
      "op": "DUP7",
      "path": "17"
    },
    "341": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1583
      ],
      "op": "ADD",
      "path": "17"
    },
    "342": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1583
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "343": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1586,
        1587
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "345": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1587
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA7D"
    },
    "348": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1574,
        1587
      ],
      "op": "JUMP",
      "path": "17"
    },
    "349": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1574,
        1587
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "350": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1561
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "352": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1561
      ],
      "op": "DUP1",
      "path": "17"
    },
    "353": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1570
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16D"
    },
    "356": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1570
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "358": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1570
      ],
      "op": "DUP10",
      "path": "17"
    },
    "359": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1570
      ],
      "op": "ADD",
      "path": "17"
    },
    "360": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1565
      ],
      "op": "DUP10",
      "path": "17"
    },
    "361": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1570
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "364": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1562,
        1570
      ],
      "op": "JUMP",
      "path": "17"
    },
    "365": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1562,
        1570
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "AND",
      "path": "17"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "AND",
      "path": "17"
    },
    "384": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "DUP2",
      "path": "17"
    },
    "385": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "386": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "388": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "ADD",
      "path": "17"
    },
    "389": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "390": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "DUP2",
      "path": "17"
    },
    "391": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "392": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "394": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "ADD",
      "path": "17"
    },
    "395": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "397": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1571
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "398": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1587
      ],
      "op": "DUP2",
      "path": "17"
    },
    "399": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1587
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "400": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1587
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "401": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1554,
        1587
      ],
      "op": "POP",
      "path": "17"
    },
    "402": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1599,
        1611
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "404": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1613,
        1636
      ],
      "op": "DUP1",
      "path": "17"
    },
    "405": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1643
      ],
      "op": "DUP7",
      "path": "17"
    },
    "406": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "408": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "ADD",
      "path": "17"
    },
    "409": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "411": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "DUP2",
      "path": "17"
    },
    "412": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "ADD",
      "path": "17"
    },
    "413": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "414": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A7"
    },
    "417": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "418": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "419": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "422": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1640,
        1646
      ],
      "op": "JUMP",
      "path": "17"
    },
    "423": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1646
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1651
      ],
      "op": "AND",
      "path": "17"
    },
    "433": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1657,
        1664
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "435": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1657,
        1664
      ],
      "op": "DUP9",
      "path": "17"
    },
    "436": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1657,
        1664
      ],
      "op": "ADD",
      "path": "17"
    },
    "437": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1657,
        1664
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "438": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1673,
        1682
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "440": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1673,
        1682
      ],
      "op": "DUP10",
      "path": "17"
    },
    "441": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1673,
        1682
      ],
      "op": "ADD",
      "path": "17"
    },
    "442": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1673,
        1682
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "443": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1714,
        1722
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C7"
    },
    "446": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1714,
        1722
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA0"
    },
    "448": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1714,
        1722
      ],
      "op": "DUP12",
      "path": "17"
    },
    "449": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1714,
        1722
      ],
      "op": "ADD",
      "path": "17"
    },
    "450": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1657,
        1660
      ],
      "op": "DUP12",
      "path": "17"
    },
    "451": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1714,
        1722
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA36"
    },
    "454": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1714,
        1722
      ],
      "op": "JUMP",
      "path": "17"
    },
    "455": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1714,
        1722
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "456": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1732
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D4"
    },
    "459": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1732
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "461": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1732
      ],
      "op": "DUP14",
      "path": "17"
    },
    "462": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1732
      ],
      "op": "ADD",
      "path": "17"
    },
    "463": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1727
      ],
      "op": "DUP14",
      "path": "17"
    },
    "464": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1732
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "467": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1724,
        1732
      ],
      "op": "JUMP",
      "path": "17"
    },
    "468": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1724,
        1732
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "469": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "471": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "472": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "474": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "ADD",
      "path": "17"
    },
    "475": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E6"
    },
    "478": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "479": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "480": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "481": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "482": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9B8"
    },
    "485": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1697,
        1733
      ],
      "op": "JUMP",
      "path": "17"
    },
    "486": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "487": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "489": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "DUP1",
      "path": "17"
    },
    "490": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "493": {
      "op": "NOT"
    },
    "494": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "DUP2",
      "path": "17"
    },
    "495": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "DUP5",
      "path": "17"
    },
    "496": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SUB",
      "path": "17"
    },
    "497": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "ADD",
      "path": "17"
    },
    "498": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "DUP2",
      "path": "17"
    },
    "499": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "500": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "501": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "DUP3",
      "path": "17"
    },
    "502": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "503": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1697,
        1733
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "504": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x200"
    },
    "507": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "508": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9DE"
    },
    "511": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1640,
        1743
      ],
      "op": "JUMP",
      "path": "17"
    },
    "512": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "513": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "515": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "517": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "518": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP1",
      "path": "17"
    },
    "519": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP4",
      "path": "17"
    },
    "520": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "SUB",
      "path": "17"
    },
    "521": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP2",
      "path": "17"
    },
    "522": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP6",
      "path": "17"
    },
    "523": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP9",
      "path": "17"
    },
    "524": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP9",
      "path": "17"
    },
    "525": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "CALL",
      "path": "17"
    },
    "526": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "527": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "POP",
      "path": "17"
    },
    "528": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "POP",
      "path": "17"
    },
    "529": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "POP",
      "path": "17"
    },
    "530": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "POP",
      "path": "17"
    },
    "531": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "532": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP1",
      "path": "17"
    },
    "533": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "535": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP2",
      "path": "17"
    },
    "536": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "EQ",
      "path": "17"
    },
    "537": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23E"
    },
    "540": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "541": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "543": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "544": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "545": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "POP",
      "path": "17"
    },
    "546": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "548": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "NOT",
      "path": "17"
    },
    "549": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "551": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "552": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "ADD",
      "path": "17"
    },
    "553": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "AND",
      "path": "17"
    },
    "554": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP3",
      "path": "17"
    },
    "555": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "ADD",
      "path": "17"
    },
    "556": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "558": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "559": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "560": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP3",
      "path": "17"
    },
    "561": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "562": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "563": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "565": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "567": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "DUP5",
      "path": "17"
    },
    "568": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "ADD",
      "path": "17"
    },
    "569": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "570": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x243"
    },
    "573": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "JUMP",
      "path": "17"
    },
    "574": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "575": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "577": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "578": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "POP",
      "path": "17"
    },
    "579": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1640,
        1743
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1598,
        1743
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "582": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1598,
        1743
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1598,
        1743
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 3,
      "value": "0x258"
    },
    "589": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1918,
        1920
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3F"
    },
    "591": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1915
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "593": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1915
      ],
      "op": "DUP10",
      "path": "17"
    },
    "594": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1915
      ],
      "op": "ADD",
      "path": "17"
    },
    "595": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1915
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "596": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAA3"
    },
    "599": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1908,
        1920
      ],
      "op": "JUMP",
      "path": "17"
    },
    "600": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1908,
        1920
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "601": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1905
      ],
      "op": "GAS",
      "path": "17"
    },
    "602": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1896,
        1920
      ],
      "op": "GT",
      "path": "17"
    },
    "603": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1889,
        1921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x266"
    },
    "606": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1889,
        1921
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "607": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1889,
        1921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x266"
    },
    "610": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1889,
        1921
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAF5"
    },
    "613": {
      "fn": "MinimalForwarder.execute",
      "jump": "i",
      "offset": [
        1889,
        1921
      ],
      "op": "JUMP",
      "path": "17"
    },
    "614": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1889,
        1921
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "615": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1940,
        1947
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 4
    },
    "616": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1940,
        1947
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "617": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1940,
        1947
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "618": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1940,
        1947
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "fn": "MinimalForwarder.execute",
      "offset": [
        1305,
        1967
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "fn": "MinimalForwarder.execute",
      "jump": "o",
      "offset": [
        1305,
        1967
      ],
      "op": "JUMP",
      "path": "17"
    },
    "626": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "627": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1029,
        1033
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "629": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1045,
        1059
      ],
      "op": "DUP1",
      "path": "17"
    },
    "630": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x385"
    },
    "633": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1213,
        1222
      ],
      "op": "DUP5",
      "path": "17"
    },
    "634": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1213,
        1222
      ],
      "op": "DUP5",
      "path": "17"
    },
    "635": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP1",
      "path": "17"
    },
    "636": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP1",
      "path": "17"
    },
    "637": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "639": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "ADD",
      "path": "17"
    },
    "640": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "642": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP1",
      "path": "17"
    },
    "643": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "644": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DIV",
      "path": "17"
    },
    "645": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "MUL",
      "path": "17"
    },
    "646": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "648": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "ADD",
      "path": "17"
    },
    "649": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "651": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "652": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "653": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP2",
      "path": "17"
    },
    "654": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "ADD",
      "path": "17"
    },
    "655": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "657": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "658": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP1",
      "path": "17"
    },
    "659": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "660": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "661": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "662": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "663": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP2",
      "path": "17"
    },
    "664": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP2",
      "path": "17"
    },
    "665": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "666": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "668": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "ADD",
      "path": "17"
    },
    "669": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP4",
      "path": "17"
    },
    "670": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP4",
      "path": "17"
    },
    "671": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP1",
      "path": "17"
    },
    "672": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP3",
      "path": "17"
    },
    "673": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "DUP5",
      "path": "17"
    },
    "674": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "CALLDATACOPY",
      "path": "17"
    },
    "675": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "677": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "678": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "ADD",
      "path": "17"
    },
    "679": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "680": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "681": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "682": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1204
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x37F"
    },
    "687": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1204
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "offset": [
        614,
        717
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48"
    },
    "722": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        614,
        717
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2E2"
    },
    "727": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "728": {
      "op": "POP"
    },
    "729": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "731": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "DUP11",
      "path": "17"
    },
    "732": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "ADD",
      "path": "17"
    },
    "733": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1127
      ],
      "op": "DUP11",
      "path": "17"
    },
    "734": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "737": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1124,
        1132
      ],
      "op": "JUMP",
      "path": "17"
    },
    "738": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1124,
        1132
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "739": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2F2"
    },
    "742": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "744": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "DUP12",
      "path": "17"
    },
    "745": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "ADD",
      "path": "17"
    },
    "746": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "748": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "DUP13",
      "path": "17"
    },
    "749": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "ADD",
      "path": "17"
    },
    "750": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "753": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1134,
        1140
      ],
      "op": "JUMP",
      "path": "17"
    },
    "754": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1134,
        1140
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "755": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1142,
        1151
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "757": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1142,
        1151
      ],
      "op": "DUP12",
      "path": "17"
    },
    "758": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1142,
        1151
      ],
      "op": "ADD",
      "path": "17"
    },
    "759": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1142,
        1151
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "760": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1153,
        1160
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "762": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1153,
        1160
      ],
      "op": "DUP13",
      "path": "17"
    },
    "763": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1153,
        1160
      ],
      "op": "ADD",
      "path": "17"
    },
    "764": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1153,
        1160
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "765": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1162,
        1171
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "767": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1162,
        1171
      ],
      "op": "DUP14",
      "path": "17"
    },
    "768": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1162,
        1171
      ],
      "op": "ADD",
      "path": "17"
    },
    "769": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1162,
        1171
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "770": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1183,
        1191
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x30E"
    },
    "773": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1183,
        1191
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA0"
    },
    "775": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1183,
        1191
      ],
      "op": "DUP16",
      "path": "17"
    },
    "776": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1183,
        1191
      ],
      "op": "ADD",
      "path": "17"
    },
    "777": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1142,
        1145
      ],
      "op": "DUP16",
      "path": "17"
    },
    "778": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1183,
        1191
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA36"
    },
    "781": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1183,
        1191
      ],
      "op": "JUMP",
      "path": "17"
    },
    "782": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1183,
        1191
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "783": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "785": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "786": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x31C"
    },
    "789": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "790": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "791": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "792": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9A8"
    },
    "795": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1173,
        1192
      ],
      "op": "JUMP",
      "path": "17"
    },
    "796": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "797": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "799": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "DUP1",
      "path": "17"
    },
    "800": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "801": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "802": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "DUP3",
      "path": "17"
    },
    "803": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "804": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "SUB",
      "path": "17"
    },
    "805": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "DUP3",
      "path": "17"
    },
    "806": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1173,
        1192
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "807": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "809": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "DUP4",
      "path": "17"
    },
    "810": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "ADD",
      "path": "17"
    },
    "811": {
      "op": "SWAP9"
    },
    "812": {
      "op": "SWAP1"
    },
    "813": {
      "op": "SWAP9"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "op": "SUB"
    },
    "823": {
      "op": "SWAP7"
    },
    "824": {
      "op": "DUP8"
    },
    "825": {
      "op": "AND"
    },
    "826": {
      "op": "SWAP1"
    },
    "827": {
      "op": "DUP3"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "SWAP5"
    },
    "831": {
      "op": "SWAP1"
    },
    "832": {
      "op": "SWAP4"
    },
    "833": {
      "op": "AND"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "836": {
      "op": "DUP6"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "op": "MSTORE"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "841": {
      "op": "DUP5"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "op": "SWAP2"
    },
    "844": {
      "op": "SWAP1"
    },
    "845": {
      "op": "SWAP2"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "DUP4"
    },
    "850": {
      "op": "ADD"
    },
    "851": {
      "op": "MSTORE"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "859": {
      "op": "DUP2"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "SWAP2"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "SWAP2"
    },
    "864": {
      "op": "MSTORE"
    },
    "865": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "871": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "872": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "874": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "DUP2",
      "path": "17"
    },
    "875": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "DUP4",
      "path": "17"
    },
    "876": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "SUB",
      "path": "17"
    },
    "877": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "SUB",
      "path": "17"
    },
    "878": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "DUP2",
      "path": "17"
    },
    "879": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "880": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "881": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "883": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1102,
        1193
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "884": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1092,
        1194
      ],
      "op": "DUP1",
      "path": "17"
    },
    "885": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1092,
        1194
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "886": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1092,
        1194
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "887": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1092,
        1194
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "889": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1092,
        1194
      ],
      "op": "ADD",
      "path": "17"
    },
    "890": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1092,
        1194
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "891": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1078
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "894": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1062,
        1204
      ],
      "op": "JUMP",
      "path": "17"
    },
    "895": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1204
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "896": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1212
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "897": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1212
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x444"
    },
    "900": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1062,
        1223
      ],
      "op": "JUMP",
      "path": "17"
    },
    "901": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1062,
        1223
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "902": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1045,
        1223
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1261,
        1270
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x80"
    },
    "906": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1261,
        1270
      ],
      "op": "DUP6",
      "path": "17"
    },
    "907": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1261,
        1270
      ],
      "op": "ADD",
      "path": "17"
    },
    "908": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1261,
        1270
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "909": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1247
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "911": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1247
      ],
      "op": "DUP1",
      "path": "17"
    },
    "912": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1248,
        1256
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39C"
    },
    "915": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1248,
        1256
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "917": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1248,
        1256
      ],
      "op": "DUP10",
      "path": "17"
    },
    "918": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1248,
        1256
      ],
      "op": "ADD",
      "path": "17"
    },
    "919": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1261,
        1264
      ],
      "op": "DUP10",
      "path": "17"
    },
    "920": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1248,
        1256
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "923": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1248,
        1256
      ],
      "op": "JUMP",
      "path": "17"
    },
    "924": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1248,
        1256
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "op": "SUB"
    },
    "933": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "AND",
      "path": "17"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "940": {
      "op": "SHL"
    },
    "941": {
      "op": "SUB"
    },
    "942": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "AND",
      "path": "17"
    },
    "943": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "DUP2",
      "path": "17"
    },
    "944": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "945": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "947": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "ADD",
      "path": "17"
    },
    "948": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "949": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "DUP2",
      "path": "17"
    },
    "950": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "951": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "953": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "ADD",
      "path": "17"
    },
    "954": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "956": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "957": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1257
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "958": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1270
      ],
      "op": "EQ",
      "path": "17"
    },
    "959": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1292
      ],
      "op": "DUP1",
      "path": "17"
    },
    "960": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1292
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "961": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1292
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E7"
    },
    "964": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1292
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1292
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3D2"
    },
    "969": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1292
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "971": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1292
      ],
      "op": "DUP7",
      "path": "17"
    },
    "972": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1292
      ],
      "op": "ADD",
      "path": "17"
    },
    "973": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1287
      ],
      "op": "DUP7",
      "path": "17"
    },
    "974": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1292
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D9"
    },
    "977": {
      "fn": "MinimalForwarder.verify",
      "jump": "i",
      "offset": [
        1284,
        1292
      ],
      "op": "JUMP",
      "path": "17"
    },
    "978": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1284,
        1292
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1274,
        1292
      ],
      "op": "AND",
      "path": "17"
    },
    "988": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1274,
        1280
      ],
      "op": "DUP2",
      "path": "17"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1274,
        1292
      ],
      "op": "AND",
      "path": "17"
    },
    "998": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1274,
        1292
      ],
      "op": "EQ",
      "path": "17"
    },
    "999": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1240,
        1292
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1000": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        1233,
        1292
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1001": {
      "fn": "MinimalForwarder.verify",
      "offset": [
        937,
        1299
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "MinimalForwarder.verify",
      "jump": "o",
      "offset": [
        937,
        1299
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1008": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4339,
        4504
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1009": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4416,
        4423
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1011": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4442,
        4497
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 6,
      "value": "0x43E"
    },
    "1014": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4464,
        4484
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3FD"
    },
    "1017": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4464,
        4482
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x468"
    },
    "1020": {
      "fn": "EIP712._hashTypedDataV4",
      "jump": "i",
      "offset": [
        4464,
        4484
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1021": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4464,
        4484
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1022": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4486,
        4496
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1023": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 7,
      "value": "0x40"
    },
    "1025": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1026": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1034": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1035": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "ADD",
      "path": "43"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1039": {
      "op": "DUP2"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "DUP4"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "DUP3"
    },
    "1049": {
      "op": "SWAP1"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9218,
        9225
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1053": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9218,
        9225
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1059": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1060": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1062": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1063": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1064": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "SUB",
      "path": "43"
    },
    "1065": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "SUB",
      "path": "43"
    },
    "1066": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1067": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1068": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1069": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1071": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9254,
        9311
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1072": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9244,
        9312
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1073": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9244,
        9312
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1074": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9244,
        9312
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1075": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9244,
        9312
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1077": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9244,
        9312
      ],
      "op": "ADD",
      "path": "43"
    },
    "1078": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9244,
        9312
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1079": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9237,
        9312
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1080": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9237,
        9312
      ],
      "op": "POP",
      "path": "43"
    },
    "1081": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9125,
        9319
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1082": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9125,
        9319
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1083": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9125,
        9319
      ],
      "op": "POP",
      "path": "43"
    },
    "1084": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9125,
        9319
      ],
      "op": "POP",
      "path": "43"
    },
    "1085": {
      "fn": "ECDSA.toTypedDataHash",
      "offset": [
        9125,
        9319
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1086": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4442,
        4497
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1087": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4435,
        4497
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1088": {
      "fn": "EIP712._hashTypedDataV4",
      "offset": [
        4339,
        4504
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "fn": "EIP712._hashTypedDataV4",
      "jump": "o",
      "offset": [
        4339,
        4504
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1092": {
      "fn": "ECDSA.recover",
      "offset": [
        4293,
        4520
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1093": {
      "fn": "ECDSA.recover",
      "offset": [
        4371,
        4378
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1095": {
      "fn": "ECDSA.recover",
      "offset": [
        4391,
        4408
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1096": {
      "fn": "ECDSA.recover",
      "offset": [
        4410,
        4428
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1098": {
      "fn": "ECDSA.recover",
      "offset": [
        4432,
        4459
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x453"
    },
    "1101": {
      "fn": "ECDSA.recover",
      "offset": [
        4443,
        4447
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1102": {
      "fn": "ECDSA.recover",
      "offset": [
        4449,
        4458
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1103": {
      "fn": "ECDSA.recover",
      "offset": [
        4432,
        4442
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x58F"
    },
    "1106": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4432,
        4459
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1107": {
      "fn": "ECDSA.recover",
      "offset": [
        4432,
        4459
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1108": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1109": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "POP",
      "path": "43"
    },
    "1110": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1111": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "POP",
      "path": "43"
    },
    "1112": {
      "fn": "ECDSA.recover",
      "offset": [
        4469,
        4487
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 8,
      "value": "0x460"
    },
    "1115": {
      "fn": "ECDSA.recover",
      "offset": [
        4481,
        4486
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1116": {
      "fn": "ECDSA.recover",
      "offset": [
        4469,
        4480
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x5FF"
    },
    "1119": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4469,
        4487
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1120": {
      "fn": "ECDSA.recover",
      "offset": [
        4469,
        4487
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1121": {
      "op": "POP"
    },
    "1122": {
      "fn": "ECDSA.recover",
      "offset": [
        4504,
        4513
      ],
      "op": "SWAP4",
      "path": "43",
      "statement": 9
    },
    "1123": {
      "fn": "ECDSA.recover",
      "offset": [
        4293,
        4520
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        4293,
        4520
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1128": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3143,
        3451
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1129": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3196,
        3203
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1131": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3227,
        3231
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1138": {
      "op": "SHL"
    },
    "1139": {
      "op": "SUB"
    },
    "1140": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3236,
        3248
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0x0"
    },
    "1173": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3248
      ],
      "op": "AND",
      "path": "44"
    },
    "1174": {
      "branch": 37,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3248
      ],
      "op": "EQ",
      "path": "44"
    },
    "1175": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3285
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1176": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3285
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1177": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3285
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4C1"
    },
    "1180": {
      "branch": 37,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3285
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1181": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3285
      ],
      "op": "POP",
      "path": "44"
    },
    "1182": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3269,
        3285
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0x0"
    },
    "1215": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3252,
        3265
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "1216": {
      "branch": 38,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3252,
        3285
      ],
      "op": "EQ",
      "path": "44"
    },
    "1217": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3219,
        3285
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1218": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3215,
        3445
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1219": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3215,
        3445
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4EB"
    },
    "1222": {
      "branch": 38,
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3215,
        3445
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3308,
        3332
      ],
      "op": "PUSH32",
      "path": "44",
      "statement": 10,
      "value": "0x0"
    },
    "1257": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3308,
        3332
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1258": {
      "fn": "EIP712._domainSeparatorV4",
      "jump": "o",
      "offset": [
        3143,
        3451
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1259": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3215,
        3445
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 11,
      "value": "0x40"
    },
    "1263": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1264": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1265": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3392,
        3402
      ],
      "op": "PUSH32",
      "path": "44",
      "statement": 12,
      "value": "0x0"
    },
    "1298": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1300": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1301": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1302": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "ADD",
      "path": "44"
    },
    "1303": {
      "op": "SWAP2"
    },
    "1304": {
      "op": "SWAP1"
    },
    "1305": {
      "op": "SWAP2"
    },
    "1306": {
      "op": "MSTORE"
    },
    "1307": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3404,
        3416
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0x0"
    },
    "1340": {
      "op": "DUP3"
    },
    "1341": {
      "op": "DUP5"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "fn": "EIP712._domainSeparatorV4",
      "offset": [
        3418,
        3433
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0x0"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1379": {
      "op": "DUP4"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3677,
        3690
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1385": {
      "op": "DUP4"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "op": "MSTORE"
    },
    "1388": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3700,
        3704
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1391": {
      "op": "DUP1"
    },
    "1392": {
      "op": "DUP5"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "op": "SWAP2"
    },
    "1395": {
      "op": "SWAP1"
    },
    "1396": {
      "op": "SWAP2"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1399": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1400": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1401": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1402": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "SUB",
      "path": "44"
    },
    "1403": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1404": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1405": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "ADD",
      "path": "44"
    },
    "1406": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1407": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1410": {
      "op": "SWAP1"
    },
    "1411": {
      "op": "SWAP3"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1414": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1415": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3633,
        3706
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1416": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3623,
        3707
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1417": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3623,
        3707
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1418": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3623,
        3707
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1419": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3623,
        3707
      ],
      "op": "ADD",
      "path": "44"
    },
    "1420": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3623,
        3707
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1421": {
      "fn": "EIP712._buildDomainSeparator",
      "offset": [
        3623,
        3707
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1422": {
      "fn": "EIP712._domainSeparatorV4",
      "jump": "o",
      "offset": [
        3143,
        3451
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1423": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1424": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2309,
        2316
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1426": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2318,
        2330
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1427": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2548
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1428": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2555
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1429": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2559,
        2561
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x41"
    },
    "1431": {
      "branch": 26,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2561
      ],
      "op": "EQ",
      "path": "43"
    },
    "1432": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1433": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x5C6"
    },
    "1436": {
      "branch": 26,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1437": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2832
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1439": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1440": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "ADD",
      "path": "43"
    },
    "1441": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1442": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2881
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1444": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1445": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "ADD",
      "path": "43"
    },
    "1446": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1447": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2938
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x60"
    },
    "1449": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1450": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "ADD",
      "path": "43"
    },
    "1451": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2913,
        2940
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1452": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2577,
        2586
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1454": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "BYTE",
      "path": "43"
    },
    "1455": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 13,
      "value": "0x5BA"
    },
    "1458": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2986,
        2990
      ],
      "op": "DUP8",
      "path": "43"
    },
    "1459": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1460": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1461": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1462": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        2985
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x7BD"
    },
    "1465": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1466": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1467": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "1468": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "43"
    },
    "1469": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "1470": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "43"
    },
    "1471": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "43"
    },
    "1472": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "43"
    },
    "1473": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "43"
    },
    "1474": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x5F8"
    },
    "1477": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1478": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1479": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3030
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1480": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3037
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1481": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3041,
        3043
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1483": {
      "branch": 27,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3043
      ],
      "op": "EQ",
      "path": "43"
    },
    "1484": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1485": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x5F0"
    },
    "1488": {
      "branch": 27,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1489": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3294
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1491": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1492": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "ADD",
      "path": "43"
    },
    "1493": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1494": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3344
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1496": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1497": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "ADD",
      "path": "43"
    },
    "1498": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1499": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 14,
      "value": "0x5E5"
    },
    "1502": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3391,
        3395
      ],
      "op": "DUP7",
      "path": "43"
    },
    "1503": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1504": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1505": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3390
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x8AA"
    },
    "1508": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1509": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1510": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "1511": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "43"
    },
    "1512": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "1513": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "43"
    },
    "1514": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "43"
    },
    "1515": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "43"
    },
    "1516": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x5F8"
    },
    "1519": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1520": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 15,
      "value": "0x0"
    },
    "1524": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1525": {
      "op": "POP"
    },
    "1526": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3454,
        3489
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "1528": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1529": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1530": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "43"
    },
    "1531": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1532": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1533": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "43"
    },
    "1534": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1535": {
      "fn": "ECDSA._throwError",
      "offset": [
        533,
        1164
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1536": {
      "fn": "ECDSA._throwError",
      "offset": [
        610,
        630
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1538": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        606
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1539": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1541": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1542": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "GT",
      "path": "43"
    },
    "1543": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1544": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x613"
    },
    "1547": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1548": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x613"
    },
    "1551": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB0B"
    },
    "1554": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        601,
        630
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1555": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1556": {
      "branch": 28,
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "EQ",
      "path": "43"
    },
    "1557": {
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1558": {
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x61C"
    },
    "1561": {
      "branch": 28,
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1562": {
      "fn": "ECDSA._throwError",
      "offset": [
        533,
        1164
      ],
      "op": "POP",
      "path": "43"
    },
    "1563": {
      "fn": "ECDSA._throwError",
      "jump": "o",
      "offset": [
        533,
        1164
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1564": {
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1565": {
      "fn": "ECDSA._throwError",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "1567": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        702
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1568": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1570": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1571": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "GT",
      "path": "43"
    },
    "1572": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1573": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x630"
    },
    "1576": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1577": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x630"
    },
    "1580": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB0B"
    },
    "1583": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        697,
        735
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1584": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1585": {
      "branch": 29,
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "EQ",
      "path": "43"
    },
    "1586": {
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1587": {
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x67E"
    },
    "1590": {
      "branch": 29,
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1591": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 16,
      "value": "0x40"
    },
    "1593": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1602": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1605": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1607": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1608": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "ADD",
      "path": "43"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1614": {
      "op": "DUP3"
    },
    "1615": {
      "op": "ADD"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1652": {
      "op": "DUP3"
    },
    "1653": {
      "op": "ADD"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x145"
    },
    "1661": {
      "op": "JUMP"
    },
    "1662": {
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1663": {
      "fn": "ECDSA._throwError",
      "offset": [
        815,
        850
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x2"
    },
    "1665": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        811
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1666": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1668": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1669": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "GT",
      "path": "43"
    },
    "1670": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1671": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x692"
    },
    "1674": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1675": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x692"
    },
    "1678": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB0B"
    },
    "1681": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        806,
        850
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1682": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1683": {
      "branch": 30,
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "EQ",
      "path": "43"
    },
    "1684": {
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1685": {
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6E0"
    },
    "1688": {
      "branch": 30,
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1689": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 17,
      "value": "0x40"
    },
    "1691": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1700": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1703": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1705": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1706": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "ADD",
      "path": "43"
    },
    "1707": {
      "op": "MSTORE"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1712": {
      "op": "DUP3"
    },
    "1713": {
      "op": "ADD"
    },
    "1714": {
      "op": "MSTORE"
    },
    "1715": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1750": {
      "op": "DUP3"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1755": {
      "op": "ADD"
    },
    "1756": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x145"
    },
    "1759": {
      "op": "JUMP"
    },
    "1760": {
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1761": {
      "fn": "ECDSA._throwError",
      "offset": [
        937,
        967
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x3"
    },
    "1763": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        933
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1764": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1766": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1767": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "GT",
      "path": "43"
    },
    "1768": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1769": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F4"
    },
    "1772": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1773": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F4"
    },
    "1776": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB0B"
    },
    "1779": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        928,
        967
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1780": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1781": {
      "branch": 31,
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "EQ",
      "path": "43"
    },
    "1782": {
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1783": {
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x74D"
    },
    "1786": {
      "branch": 31,
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1787": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 18,
      "value": "0x40"
    },
    "1789": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1798": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1801": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1803": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1804": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "ADD",
      "path": "43"
    },
    "1805": {
      "op": "MSTORE"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202773272076616C"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1848": {
      "op": "DUP3"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "op": "MSTORE"
    },
    "1851": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "MSTORE"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x145"
    },
    "1868": {
      "op": "JUMP"
    },
    "1869": {
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1870": {
      "fn": "ECDSA._throwError",
      "offset": [
        1057,
        1087
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1872": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1053
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1873": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1875": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1876": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "GT",
      "path": "43"
    },
    "1877": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1878": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x761"
    },
    "1881": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1882": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x761"
    },
    "1885": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB0B"
    },
    "1888": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        1048,
        1087
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1889": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1890": {
      "branch": 32,
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "EQ",
      "path": "43"
    },
    "1891": {
      "fn": "ECDSA._throwError",
      "offset": [
        1044,
        1158
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1892": {
      "fn": "ECDSA._throwError",
      "offset": [
        1044,
        1158
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x7BA"
    },
    "1895": {
      "branch": 32,
      "fn": "ECDSA._throwError",
      "offset": [
        1044,
        1158
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1896": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 19,
      "value": "0x40"
    },
    "1898": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1907": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1910": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1912": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1913": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "ADD",
      "path": "43"
    },
    "1914": {
      "op": "MSTORE"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1919": {
      "op": "DUP3"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202776272076616C"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1957": {
      "op": "DUP3"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1968": {
      "op": "DUP3"
    },
    "1969": {
      "op": "ADD"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x145"
    },
    "1977": {
      "op": "JUMP"
    },
    "1978": {
      "fn": "ECDSA._throwError",
      "offset": [
        1044,
        1158
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1979": {
      "fn": "ECDSA._throwError",
      "offset": [
        533,
        1164
      ],
      "op": "POP",
      "path": "43"
    },
    "1980": {
      "fn": "ECDSA._throwError",
      "jump": "o",
      "offset": [
        533,
        1164
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1981": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1982": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5870,
        5877
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1984": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5870,
        5877
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1985": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6794,
        6860
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "2018": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6781,
        6860
      ],
      "op": "DUP4",
      "path": "43"
    },
    "2019": {
      "branch": 33,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6781,
        6860
      ],
      "op": "GT",
      "path": "43"
    },
    "2020": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6777,
        6938
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2021": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6777,
        6938
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x7F4"
    },
    "2024": {
      "branch": 33,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6777,
        6938
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6892,
        6893
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 20,
      "value": "0x0"
    },
    "2028": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6892,
        6893
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6896,
        6926
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x3"
    },
    "2032": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6876,
        6927
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x8A1"
    },
    "2035": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6876,
        6927
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2036": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6777,
        6938
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2037": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6952
      ],
      "op": "DUP5",
      "path": "43"
    },
    "2038": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6958
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0xFF"
    },
    "2040": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6958
      ],
      "op": "AND",
      "path": "43"
    },
    "2041": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6956,
        6958
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1B"
    },
    "2043": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6958
      ],
      "op": "EQ",
      "path": "43"
    },
    "2044": {
      "branch": 34,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6958
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2045": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6969
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2046": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6969
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2047": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6969
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x80C"
    },
    "2050": {
      "branch": 34,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6969
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "2051": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6969
      ],
      "op": "POP",
      "path": "43"
    },
    "2052": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6962,
        6963
      ],
      "op": "DUP5",
      "path": "43"
    },
    "2053": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6962,
        6969
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0xFF"
    },
    "2055": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6962,
        6969
      ],
      "op": "AND",
      "path": "43"
    },
    "2056": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6967,
        6969
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1C"
    },
    "2058": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6962,
        6969
      ],
      "op": "EQ",
      "path": "43"
    },
    "2059": {
      "branch": 35,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6962,
        6969
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2060": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6951,
        6969
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2061": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6947,
        7047
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2062": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6947,
        7047
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x81D"
    },
    "2065": {
      "branch": 35,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6947,
        7047
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7001,
        7002
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 21,
      "value": "0x0"
    },
    "2069": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7001,
        7002
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7005,
        7035
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "2073": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6985,
        7036
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x8A1"
    },
    "2076": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6985,
        7036
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2077": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6947,
        7047
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2078": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "2080": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2081": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "2082": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7141,
        7155
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "2084": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2085": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP3",
      "path": "43"
    },
    "2086": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "2087": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "2089": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP3",
      "path": "43"
    },
    "2090": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "ADD",
      "path": "43"
    },
    "2091": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2092": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP5",
      "path": "43"
    },
    "2093": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "2094": {
      "op": "DUP10"
    },
    "2095": {
      "op": "SWAP1"
    },
    "2096": {
      "op": "MSTORE"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2099": {
      "op": "DUP9"
    },
    "2100": {
      "op": "AND"
    },
    "2101": {
      "op": "SWAP3"
    },
    "2102": {
      "op": "DUP3"
    },
    "2103": {
      "op": "ADD"
    },
    "2104": {
      "op": "SWAP3"
    },
    "2105": {
      "op": "SWAP1"
    },
    "2106": {
      "op": "SWAP3"
    },
    "2107": {
      "op": "MSTORE"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2110": {
      "op": "DUP2"
    },
    "2111": {
      "op": "ADD"
    },
    "2112": {
      "op": "DUP7"
    },
    "2113": {
      "op": "SWAP1"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2117": {
      "op": "DUP2"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "DUP6"
    },
    "2120": {
      "op": "SWAP1"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "2124": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2127": {
      "op": "ADD"
    },
    "2128": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "2130": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "2132": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "2133": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "2135": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP2",
      "path": "43"
    },
    "2136": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "SUB",
      "path": "43"
    },
    "2137": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2138": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2139": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP5",
      "path": "43"
    },
    "2140": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "SUB",
      "path": "43"
    },
    "2141": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2142": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP6",
      "path": "43"
    },
    "2143": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "GAS",
      "path": "43"
    },
    "2144": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "STATICCALL",
      "path": "43"
    },
    "2145": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2146": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2147": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "2148": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x871"
    },
    "2151": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "2152": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "RETURNDATASIZE",
      "path": "43"
    },
    "2153": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "2155": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2156": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "RETURNDATACOPY",
      "path": "43"
    },
    "2157": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "RETURNDATASIZE",
      "path": "43"
    },
    "2158": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "2160": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "REVERT",
      "path": "43"
    },
    "2161": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2162": {
      "op": "POP"
    },
    "2163": {
      "op": "POP"
    },
    "2164": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "2166": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2169": {
      "op": "NOT"
    },
    "2170": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "ADD",
      "path": "43"
    },
    "2171": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "2172": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7158,
        7182
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "SUB"
    },
    "2183": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP2",
      "path": "43"
    },
    "2184": {
      "branch": 36,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7196,
        7216
      ],
      "op": "AND",
      "path": "43"
    },
    "2185": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7192,
        7293
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x89A"
    },
    "2188": {
      "branch": 36,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7192,
        7293
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "2189": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7248,
        7249
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 22,
      "value": "0x0"
    },
    "2191": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7252,
        7281
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "2193": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "2194": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "POP",
      "path": "43"
    },
    "2195": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "2196": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "POP",
      "path": "43"
    },
    "2197": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "POP",
      "path": "43"
    },
    "2198": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x8A1"
    },
    "2201": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7232,
        7282
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2202": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7192,
        7293
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2203": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7311,
        7317
      ],
      "op": "SWAP2",
      "path": "43",
      "statement": 23
    },
    "2204": {
      "op": "POP"
    },
    "2205": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7319,
        7339
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "2207": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7319,
        7339
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2210": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "2211": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "POP",
      "path": "43"
    },
    "2212": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "2213": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "2214": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "POP",
      "path": "43"
    },
    "2215": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "POP",
      "path": "43"
    },
    "2216": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5744,
        7347
      ],
      "op": "POP",
      "path": "43"
    },
    "2217": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5744,
        7347
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2218": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2219": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "2221": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP1",
      "path": "43"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4981,
        5056
      ],
      "op": "DUP4",
      "path": "43"
    },
    "2231": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4981,
        5056
      ],
      "op": "AND",
      "path": "43"
    },
    "2232": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5082,
        5085
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0xFF"
    },
    "2234": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5090
      ],
      "op": "DUP5",
      "path": "43"
    },
    "2235": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5090
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "2236": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5090
      ],
      "op": "SHR",
      "path": "43"
    },
    "2237": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5092,
        5094
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1B"
    },
    "2239": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5074,
        5095
      ],
      "op": "ADD",
      "path": "43"
    },
    "2240": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5121,
        5146
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 24,
      "value": "0x8CB"
    },
    "2243": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5132,
        5136
      ],
      "op": "DUP8",
      "path": "43"
    },
    "2244": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5074,
        5095
      ],
      "op": "DUP3",
      "path": "43"
    },
    "2245": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5141,
        5142
      ],
      "op": "DUP9",
      "path": "43"
    },
    "2246": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4981,
        5056
      ],
      "op": "DUP6",
      "path": "43"
    },
    "2247": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5121,
        5131
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x7BD"
    },
    "2250": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5121,
        5146
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2251": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5121,
        5146
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "2252": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "2253": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "43"
    },
    "2254": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "2255": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "43"
    },
    "2256": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "43"
    },
    "2257": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5114,
        5146
      ],
      "op": "POP",
      "path": "43"
    },
    "2258": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "2259": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "POP",
      "path": "43"
    },
    "2260": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "2261": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "2262": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "POP",
      "path": "43"
    },
    "2263": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5153
      ],
      "op": "POP",
      "path": "43"
    },
    "2264": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4774,
        5153
      ],
      "op": "JUMP",
      "path": "43"
    },
    "2265": {
      "op": "JUMPDEST"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2270": {
      "op": "DUP3"
    },
    "2271": {
      "op": "DUP5"
    },
    "2272": {
      "op": "SUB"
    },
    "2273": {
      "op": "SLT"
    },
    "2274": {
      "op": "ISZERO"
    },
    "2275": {
      "op": "PUSH2",
      "value": "0x8EB"
    },
    "2278": {
      "op": "JUMPI"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2281": {
      "op": "DUP1"
    },
    "2282": {
      "op": "REVERT"
    },
    "2283": {
      "op": "JUMPDEST"
    },
    "2284": {
      "op": "DUP2"
    },
    "2285": {
      "op": "CALLDATALOAD"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "op": "DUP2"
    },
    "2295": {
      "op": "AND"
    },
    "2296": {
      "op": "DUP2"
    },
    "2297": {
      "op": "EQ"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "DUP1"
    },
    "2305": {
      "op": "REVERT"
    },
    "2306": {
      "op": "JUMPDEST"
    },
    "2307": {
      "op": "SWAP4"
    },
    "2308": {
      "op": "SWAP3"
    },
    "2309": {
      "op": "POP"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "jump": "o",
      "op": "JUMP"
    },
    "2313": {
      "op": "JUMPDEST"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2321": {
      "op": "DUP5"
    },
    "2322": {
      "op": "DUP7"
    },
    "2323": {
      "op": "SUB"
    },
    "2324": {
      "op": "SLT"
    },
    "2325": {
      "op": "ISZERO"
    },
    "2326": {
      "op": "PUSH2",
      "value": "0x91E"
    },
    "2329": {
      "op": "JUMPI"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2332": {
      "op": "DUP1"
    },
    "2333": {
      "op": "REVERT"
    },
    "2334": {
      "op": "JUMPDEST"
    },
    "2335": {
      "op": "DUP4"
    },
    "2336": {
      "op": "CALLDATALOAD"
    },
    "2337": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2346": {
      "op": "DUP1"
    },
    "2347": {
      "op": "DUP3"
    },
    "2348": {
      "op": "GT"
    },
    "2349": {
      "op": "ISZERO"
    },
    "2350": {
      "op": "PUSH2",
      "value": "0x936"
    },
    "2353": {
      "op": "JUMPI"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2356": {
      "op": "DUP1"
    },
    "2357": {
      "op": "REVERT"
    },
    "2358": {
      "op": "JUMPDEST"
    },
    "2359": {
      "op": "SWAP1"
    },
    "2360": {
      "op": "DUP6"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "SWAP1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2365": {
      "op": "DUP3"
    },
    "2366": {
      "op": "DUP9"
    },
    "2367": {
      "op": "SUB"
    },
    "2368": {
      "op": "SLT"
    },
    "2369": {
      "op": "ISZERO"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x94A"
    },
    "2373": {
      "op": "JUMPI"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "REVERT"
    },
    "2378": {
      "op": "JUMPDEST"
    },
    "2379": {
      "op": "SWAP1"
    },
    "2380": {
      "op": "SWAP4"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2384": {
      "op": "DUP6"
    },
    "2385": {
      "op": "ADD"
    },
    "2386": {
      "op": "CALLDATALOAD"
    },
    "2387": {
      "op": "SWAP1"
    },
    "2388": {
      "op": "DUP1"
    },
    "2389": {
      "op": "DUP3"
    },
    "2390": {
      "op": "GT"
    },
    "2391": {
      "op": "ISZERO"
    },
    "2392": {
      "op": "PUSH2",
      "value": "0x960"
    },
    "2395": {
      "op": "JUMPI"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2398": {
      "op": "DUP1"
    },
    "2399": {
      "op": "REVERT"
    },
    "2400": {
      "op": "JUMPDEST"
    },
    "2401": {
      "op": "DUP2"
    },
    "2402": {
      "op": "DUP7"
    },
    "2403": {
      "op": "ADD"
    },
    "2404": {
      "op": "SWAP2"
    },
    "2405": {
      "op": "POP"
    },
    "2406": {
      "op": "DUP7"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2409": {
      "op": "DUP4"
    },
    "2410": {
      "op": "ADD"
    },
    "2411": {
      "op": "SLT"
    },
    "2412": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2415": {
      "op": "JUMPI"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "DUP1"
    },
    "2419": {
      "op": "REVERT"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "DUP2"
    },
    "2422": {
      "op": "CALLDATALOAD"
    },
    "2423": {
      "op": "DUP2"
    },
    "2424": {
      "op": "DUP2"
    },
    "2425": {
      "op": "GT"
    },
    "2426": {
      "op": "ISZERO"
    },
    "2427": {
      "op": "PUSH2",
      "value": "0x983"
    },
    "2430": {
      "op": "JUMPI"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2433": {
      "op": "DUP1"
    },
    "2434": {
      "op": "REVERT"
    },
    "2435": {
      "op": "JUMPDEST"
    },
    "2436": {
      "op": "DUP8"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "DUP6"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "GT"
    },
    "2444": {
      "op": "ISZERO"
    },
    "2445": {
      "op": "PUSH2",
      "value": "0x995"
    },
    "2448": {
      "op": "JUMPI"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2451": {
      "op": "DUP1"
    },
    "2452": {
      "op": "REVERT"
    },
    "2453": {
      "op": "JUMPDEST"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2456": {
      "op": "DUP4"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "SWAP5"
    },
    "2459": {
      "op": "POP"
    },
    "2460": {
      "op": "DUP1"
    },
    "2461": {
      "op": "SWAP4"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "op": "SWAP3"
    },
    "2467": {
      "op": "POP"
    },
    "2468": {
      "op": "SWAP3"
    },
    "2469": {
      "op": "POP"
    },
    "2470": {
      "op": "SWAP3"
    },
    "2471": {
      "jump": "o",
      "op": "JUMP"
    },
    "2472": {
      "op": "JUMPDEST"
    },
    "2473": {
      "op": "DUP2"
    },
    "2474": {
      "op": "DUP4"
    },
    "2475": {
      "op": "DUP3"
    },
    "2476": {
      "op": "CALLDATACOPY"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2479": {
      "op": "SWAP2"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "op": "SWAP1"
    },
    "2482": {
      "op": "DUP2"
    },
    "2483": {
      "op": "MSTORE"
    },
    "2484": {
      "op": "SWAP2"
    },
    "2485": {
      "op": "SWAP1"
    },
    "2486": {
      "op": "POP"
    },
    "2487": {
      "jump": "o",
      "op": "JUMP"
    },
    "2488": {
      "op": "JUMPDEST"
    },
    "2489": {
      "op": "DUP3"
    },
    "2490": {
      "op": "DUP5"
    },
    "2491": {
      "op": "DUP3"
    },
    "2492": {
      "op": "CALLDATACOPY"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2495": {
      "op": "SWAP2"
    },
    "2496": {
      "op": "SWAP1"
    },
    "2497": {
      "op": "SWAP2"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2512": {
      "op": "NOT"
    },
    "2513": {
      "op": "AND"
    },
    "2514": {
      "op": "SWAP2"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "op": "SWAP1"
    },
    "2517": {
      "op": "DUP2"
    },
    "2518": {
      "op": "MSTORE"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "SWAP2"
    },
    "2523": {
      "op": "SWAP1"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "jump": "o",
      "op": "JUMP"
    },
    "2526": {
      "op": "JUMPDEST"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2529": {
      "op": "DUP3"
    },
    "2530": {
      "op": "MLOAD"
    },
    "2531": {
      "op": "PUSH2",
      "value": "0x9F0"
    },
    "2534": {
      "op": "DUP2"
    },
    "2535": {
      "op": "DUP5"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "DUP8"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "op": "PUSH2",
      "value": "0xAC5"
    },
    "2543": {
      "jump": "i",
      "op": "JUMP"
    },
    "2544": {
      "op": "JUMPDEST"
    },
    "2545": {
      "op": "SWAP2"
    },
    "2546": {
      "op": "SWAP1"
    },
    "2547": {
      "op": "SWAP2"
    },
    "2548": {
      "op": "ADD"
    },
    "2549": {
      "op": "SWAP3"
    },
    "2550": {
      "op": "SWAP2"
    },
    "2551": {
      "op": "POP"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "jump": "o",
      "op": "JUMP"
    },
    "2554": {
      "op": "JUMPDEST"
    },
    "2555": {
      "op": "DUP3"
    },
    "2556": {
      "op": "ISZERO"
    },
    "2557": {
      "op": "ISZERO"
    },
    "2558": {
      "op": "DUP2"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2564": {
      "op": "DUP3"
    },
    "2565": {
      "op": "ADD"
    },
    "2566": {
      "op": "MSTORE"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "MLOAD"
    },
    "2571": {
      "op": "DUP1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2574": {
      "op": "DUP5"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH2",
      "value": "0xA21"
    },
    "2580": {
      "op": "DUP2"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2583": {
      "op": "DUP6"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2587": {
      "op": "DUP8"
    },
    "2588": {
      "op": "ADD"
    },
    "2589": {
      "op": "PUSH2",
      "value": "0xAC5"
    },
    "2592": {
      "jump": "i",
      "op": "JUMP"
    },
    "2593": {
      "op": "JUMPDEST"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2599": {
      "op": "NOT"
    },
    "2600": {
      "op": "AND"
    },
    "2601": {
      "op": "SWAP2"
    },
    "2602": {
      "op": "SWAP1"
    },
    "2603": {
      "op": "SWAP2"
    },
    "2604": {
      "op": "ADD"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "op": "SWAP4"
    },
    "2609": {
      "op": "SWAP3"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "jump": "o",
      "op": "JUMP"
    },
    "2614": {
      "op": "JUMPDEST"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2617": {
      "op": "DUP1"
    },
    "2618": {
      "op": "DUP4"
    },
    "2619": {
      "op": "CALLDATALOAD"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2622": {
      "op": "NOT"
    },
    "2623": {
      "op": "DUP5"
    },
    "2624": {
      "op": "CALLDATASIZE"
    },
    "2625": {
      "op": "SUB"
    },
    "2626": {
      "op": "ADD"
    },
    "2627": {
      "op": "DUP2"
    },
    "2628": {
      "op": "SLT"
    },
    "2629": {
      "op": "PUSH2",
      "value": "0xA4D"
    },
    "2632": {
      "op": "JUMPI"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2635": {
      "op": "DUP1"
    },
    "2636": {
      "op": "REVERT"
    },
    "2637": {
      "op": "JUMPDEST"
    },
    "2638": {
      "op": "DUP4"
    },
    "2639": {
      "op": "ADD"
    },
    "2640": {
      "op": "DUP1"
    },
    "2641": {
      "op": "CALLDATALOAD"
    },
    "2642": {
      "op": "SWAP2"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2653": {
      "op": "DUP3"
    },
    "2654": {
      "op": "GT"
    },
    "2655": {
      "op": "ISZERO"
    },
    "2656": {
      "op": "PUSH2",
      "value": "0xA68"
    },
    "2659": {
      "op": "JUMPI"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2662": {
      "op": "DUP1"
    },
    "2663": {
      "op": "REVERT"
    },
    "2664": {
      "op": "JUMPDEST"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2667": {
      "op": "ADD"
    },
    "2668": {
      "op": "SWAP2"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "CALLDATASIZE"
    },
    "2671": {
      "op": "DUP2"
    },
    "2672": {
      "op": "SWAP1"
    },
    "2673": {
      "op": "SUB"
    },
    "2674": {
      "op": "DUP3"
    },
    "2675": {
      "op": "SGT"
    },
    "2676": {
      "op": "ISZERO"
    },
    "2677": {
      "op": "PUSH2",
      "value": "0x5F8"
    },
    "2680": {
      "op": "JUMPI"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2683": {
      "op": "DUP1"
    },
    "2684": {
      "op": "REVERT"
    },
    "2685": {
      "op": "JUMPDEST"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "NOT"
    },
    "2690": {
      "op": "DUP3"
    },
    "2691": {
      "op": "GT"
    },
    "2692": {
      "op": "ISZERO"
    },
    "2693": {
      "op": "PUSH2",
      "value": "0xA9E"
    },
    "2696": {
      "op": "JUMPI"
    },
    "2697": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2712": {
      "op": "MSTORE"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2717": {
      "op": "REVERT"
    },
    "2718": {
      "op": "JUMPDEST"
    },
    "2719": {
      "op": "POP"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "SWAP1"
    },
    "2722": {
      "jump": "o",
      "op": "JUMP"
    },
    "2723": {
      "op": "JUMPDEST"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2726": {
      "op": "DUP3"
    },
    "2727": {
      "op": "PUSH2",
      "value": "0xAC0"
    },
    "2730": {
      "op": "JUMPI"
    },
    "2731": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2741": {
      "op": "MSTORE"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2746": {
      "op": "MSTORE"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2751": {
      "op": "REVERT"
    },
    "2752": {
      "op": "JUMPDEST"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "op": "DIV"
    },
    "2755": {
      "op": "SWAP1"
    },
    "2756": {
      "jump": "o",
      "op": "JUMP"
    },
    "2757": {
      "op": "JUMPDEST"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "JUMPDEST"
    },
    "2761": {
      "op": "DUP4"
    },
    "2762": {
      "op": "DUP2"
    },
    "2763": {
      "op": "LT"
    },
    "2764": {
      "op": "ISZERO"
    },
    "2765": {
      "op": "PUSH2",
      "value": "0xAE0"
    },
    "2768": {
      "op": "JUMPI"
    },
    "2769": {
      "op": "DUP2"
    },
    "2770": {
      "op": "DUP2"
    },
    "2771": {
      "op": "ADD"
    },
    "2772": {
      "op": "MLOAD"
    },
    "2773": {
      "op": "DUP4"
    },
    "2774": {
      "op": "DUP3"
    },
    "2775": {
      "op": "ADD"
    },
    "2776": {
      "op": "MSTORE"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2779": {
      "op": "ADD"
    },
    "2780": {
      "op": "PUSH2",
      "value": "0xAC8"
    },
    "2783": {
      "op": "JUMP"
    },
    "2784": {
      "op": "JUMPDEST"
    },
    "2785": {
      "op": "DUP4"
    },
    "2786": {
      "op": "DUP2"
    },
    "2787": {
      "op": "GT"
    },
    "2788": {
      "op": "ISZERO"
    },
    "2789": {
      "op": "PUSH2",
      "value": "0xAEF"
    },
    "2792": {
      "op": "JUMPI"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2795": {
      "op": "DUP5"
    },
    "2796": {
      "op": "DUP5"
    },
    "2797": {
      "op": "ADD"
    },
    "2798": {
      "op": "MSTORE"
    },
    "2799": {
      "op": "JUMPDEST"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "jump": "o",
      "op": "JUMP"
    },
    "2805": {
      "op": "JUMPDEST"
    },
    "2806": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2816": {
      "op": "MSTORE"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2821": {
      "op": "MSTORE"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2826": {
      "op": "REVERT"
    },
    "2827": {
      "op": "JUMPDEST"
    },
    "2828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2838": {
      "op": "MSTORE"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2848": {
      "op": "REVERT"
    }
  },
  "sha1": "4f689187f08ad4a279f4022cb876c7b353e95b31",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (metatx/MinimalForwarder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/ECDSA.sol\";\nimport \"../utils/cryptography/draft-EIP712.sol\";\n\n/**\n * @dev Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}.\n */\ncontract MinimalForwarder is EIP712 {\n    using ECDSA for bytes32;\n\n    struct ForwardRequest {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint256 nonce;\n        bytes data;\n    }\n\n    bytes32 private constant _TYPEHASH =\n        keccak256(\"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\");\n\n    mapping(address => uint256) private _nonces;\n\n    constructor() EIP712(\"MinimalForwarder\", \"0.0.1\") {}\n\n    function getNonce(address from) public view returns (uint256) {\n        return _nonces[from];\n    }\n\n    function verify(ForwardRequest calldata req, bytes calldata signature) public view returns (bool) {\n        address signer = _hashTypedDataV4(\n            keccak256(abi.encode(_TYPEHASH, req.from, req.to, req.value, req.gas, req.nonce, keccak256(req.data)))\n        ).recover(signature);\n        return _nonces[req.from] == req.nonce && signer == req.from;\n    }\n\n    function execute(ForwardRequest calldata req, bytes calldata signature)\n        public\n        payable\n        returns (bool, bytes memory)\n    {\n        require(verify(req, signature), \"MinimalForwarder: signature does not match request\");\n        _nonces[req.from] = req.nonce + 1;\n\n        (bool success, bytes memory returndata) = req.to.call{gas: req.gas, value: req.value}(\n            abi.encodePacked(req.data, req.from)\n        );\n        // Validate that the relayer has sent enough gas for the call.\n        // See https://ronan.eth.link/blog/ethereum-gas-dangers/\n        assert(gasleft() > req.gas / 63);\n\n        return (success, returndata);\n    }\n}\n",
  "sourceMap": "333:1636:17:-:0;;;774:52;;;;;;;;;-1:-1:-1;2455:602:44;;;;;;;;;;;-1:-1:-1;;;2455:602:44;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:44;;;;2541:22;;;;2778:25;;;;2597;2813:31;;;;2873:13;2854:32;;2455:602;;;2651:117;2923:58;2651:117;2541:22;2597:25;3633:73;;;;;;273:25:52;;;314:18;;;307:34;;;357:18;;;350:34;;;3677:13:44;400:18:52;;;393:34;3700:4:44;443:19:52;;;436:61;3597:7:44;;245:19:52;;3633:73:44;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;;;3029:21;;-1:-1:-1;333:1636:17;;-1:-1:-1;;;333:1636:17;227:276:52;333:1636:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/metatx/MinimalForwarder.sol",
  "type": "contract"
}