{
  "abi": [
    {
      "inputs": [],
      "name": "father",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gramps",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_gramps",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_father",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isHuman",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "130": "contracts/OpenZepellin/contracts/proxy/utils/Initializable.sol",
    "99": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "Initializable": [
        15984
      ],
      "SampleChild": [
        11906
      ],
      "SampleFather": [
        11865
      ],
      "SampleGramps": [
        11837
      ],
      "SampleHuman": [
        11787
      ],
      "SampleMother": [
        11812
      ]
    },
    "id": 11907,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11770,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:99"
      },
      {
        "absolutePath": "contracts/OpenZepellin/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 11771,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11907,
        "sourceUnit": 15985,
        "src": "58:42:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11773,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "496:13:99"
            },
            "id": 11774,
            "nodeType": "InheritanceSpecifier",
            "src": "496:13:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11772,
          "nodeType": "StructuredDocumentation",
          "src": "411:60:99",
          "text": " Sample base intializable contract that is a human"
        },
        "fullyImplemented": true,
        "id": 11787,
        "linearizedBaseContracts": [
          11787,
          15984
        ],
        "name": "SampleHuman",
        "nameLocation": "481:11:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4a6c9db6",
            "id": 11776,
            "mutability": "mutable",
            "name": "isHuman",
            "nameLocation": "528:7:99",
            "nodeType": "VariableDeclaration",
            "scope": 11787,
            "src": "516:19:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11775,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "516:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11785,
              "nodeType": "Block",
              "src": "583:31:99",
              "statements": [
                {
                  "expression": {
                    "id": 11783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11781,
                      "name": "isHuman",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11776,
                      "src": "593:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "603:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "593:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11784,
                  "nodeType": "ExpressionStatement",
                  "src": "593:14:99"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 11786,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11779,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11778,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "571:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "551:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:99"
            },
            "returnParameters": {
              "id": 11780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:99"
            },
            "scope": 11787,
            "src": "542:72:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "472:144:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11789,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "716:13:99"
            },
            "id": 11790,
            "nodeType": "InheritanceSpecifier",
            "src": "716:13:99"
          },
          {
            "baseName": {
              "id": 11791,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11787,
              "src": "731:11:99"
            },
            "id": 11792,
            "nodeType": "InheritanceSpecifier",
            "src": "731:11:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11788,
          "nodeType": "StructuredDocumentation",
          "src": "618:72:99",
          "text": " Sample base intializable contract that defines a field mother"
        },
        "fullyImplemented": true,
        "id": 11812,
        "linearizedBaseContracts": [
          11812,
          11787,
          15984
        ],
        "name": "SampleMother",
        "nameLocation": "700:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ed7dfee3",
            "id": 11794,
            "mutability": "mutable",
            "name": "mother",
            "nameLocation": "764:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11812,
            "src": "749:21:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11793,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "749:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11810,
              "nodeType": "Block",
              "src": "839:65:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11801,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11787,
                        "src": "849:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$11787_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 11803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11786,
                      "src": "849:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:24:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11805,
                  "nodeType": "ExpressionStatement",
                  "src": "849:24:99"
                },
                {
                  "expression": {
                    "id": 11808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11806,
                      "name": "mother",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11794,
                      "src": "883:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11807,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11796,
                      "src": "892:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "883:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11809,
                  "nodeType": "ExpressionStatement",
                  "src": "883:14:99"
                }
              ]
            },
            "functionSelector": "fe4b84df",
            "id": 11811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11798,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "827:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "827:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "786:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11796,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "805:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11811,
                  "src": "797:13:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:15:99"
            },
            "returnParameters": {
              "id": 11800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:99"
            },
            "scope": 11812,
            "src": "777:127:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "691:215:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11814,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1006:13:99"
            },
            "id": 11815,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:13:99"
          },
          {
            "baseName": {
              "id": 11816,
              "name": "SampleHuman",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11787,
              "src": "1021:11:99"
            },
            "id": 11817,
            "nodeType": "InheritanceSpecifier",
            "src": "1021:11:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11813,
          "nodeType": "StructuredDocumentation",
          "src": "908:72:99",
          "text": " Sample base intializable contract that defines a field gramps"
        },
        "fullyImplemented": true,
        "id": 11837,
        "linearizedBaseContracts": [
          11837,
          11787,
          15984
        ],
        "name": "SampleGramps",
        "nameLocation": "990:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fa39851f",
            "id": 11819,
            "mutability": "mutable",
            "name": "gramps",
            "nameLocation": "1053:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11837,
            "src": "1039:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11818,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1039:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11835,
              "nodeType": "Block",
              "src": "1134:65:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11826,
                        "name": "SampleHuman",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11787,
                        "src": "1144:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleHuman_$11787_$",
                          "typeString": "type(contract SampleHuman)"
                        }
                      },
                      "id": 11828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11786,
                      "src": "1144:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:24:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11830,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:24:99"
                },
                {
                  "expression": {
                    "id": 11833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11831,
                      "name": "gramps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11819,
                      "src": "1178:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11832,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11821,
                      "src": "1187:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1178:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11834,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:14:99"
                }
              ]
            },
            "functionSelector": "f62d1888",
            "id": 11836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11824,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11823,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1122:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1075:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11821,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1100:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11836,
                  "src": "1086:19:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:21:99"
            },
            "returnParameters": {
              "id": 11825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:99"
            },
            "scope": 11837,
            "src": "1066:133:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "981:220:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11839,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1325:13:99"
            },
            "id": 11840,
            "nodeType": "InheritanceSpecifier",
            "src": "1325:13:99"
          },
          {
            "baseName": {
              "id": 11841,
              "name": "SampleGramps",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11837,
              "src": "1340:12:99"
            },
            "id": 11842,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:12:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11838,
          "nodeType": "StructuredDocumentation",
          "src": "1203:96:99",
          "text": " Sample base intializable contract that defines a field father and extends from gramps"
        },
        "fullyImplemented": true,
        "id": 11865,
        "linearizedBaseContracts": [
          11865,
          11837,
          11787,
          15984
        ],
        "name": "SampleFather",
        "nameLocation": "1309:12:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1c8aca3b",
            "id": 11844,
            "mutability": "mutable",
            "name": "father",
            "nameLocation": "1374:6:99",
            "nodeType": "VariableDeclaration",
            "scope": 11865,
            "src": "1359:21:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11863,
              "nodeType": "Block",
              "src": "1466:75:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11856,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11846,
                        "src": "1500:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 11853,
                        "name": "SampleGramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11837,
                        "src": "1476:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleGramps_$11837_$",
                          "typeString": "type(contract SampleGramps)"
                        }
                      },
                      "id": 11855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11836,
                      "src": "1476:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 11857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11858,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:32:99"
                },
                {
                  "expression": {
                    "id": 11861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11859,
                      "name": "father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11844,
                      "src": "1518:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11860,
                      "name": "_father",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11848,
                      "src": "1527:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1518:16:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11862,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:16:99"
                }
              ]
            },
            "functionSelector": "8beaf7d7",
            "id": 11864,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11850,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1454:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1454:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1396:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11846,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1421:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11864,
                  "src": "1407:21:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11845,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11848,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1438:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11864,
                  "src": "1430:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:40:99"
            },
            "returnParameters": {
              "id": 11852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:99"
            },
            "scope": 11865,
            "src": "1387:154:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "1300:243:99",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11867,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15984,
              "src": "1623:13:99"
            },
            "id": 11868,
            "nodeType": "InheritanceSpecifier",
            "src": "1623:13:99"
          },
          {
            "baseName": {
              "id": 11869,
              "name": "SampleMother",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11812,
              "src": "1638:12:99"
            },
            "id": 11870,
            "nodeType": "InheritanceSpecifier",
            "src": "1638:12:99"
          },
          {
            "baseName": {
              "id": 11871,
              "name": "SampleFather",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11865,
              "src": "1652:12:99"
            },
            "id": 11872,
            "nodeType": "InheritanceSpecifier",
            "src": "1652:12:99"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11866,
          "nodeType": "StructuredDocumentation",
          "src": "1545:53:99",
          "text": " Child extends from mother, father (gramps)"
        },
        "fullyImplemented": true,
        "id": 11906,
        "linearizedBaseContracts": [
          11906,
          11865,
          11837,
          11812,
          11787,
          15984
        ],
        "name": "SampleChild",
        "nameLocation": "1608:11:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "237b5e96",
            "id": 11874,
            "mutability": "mutable",
            "name": "child",
            "nameLocation": "1686:5:99",
            "nodeType": "VariableDeclaration",
            "scope": 11906,
            "src": "1671:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1671:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11904,
              "nodeType": "Block",
              "src": "1848:124:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11890,
                        "name": "_mother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11876,
                        "src": "1882:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11887,
                        "name": "SampleMother",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11812,
                        "src": "1858:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleMother_$11812_$",
                          "typeString": "type(contract SampleMother)"
                        }
                      },
                      "id": 11889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11811,
                      "src": "1858:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11892,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:32:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11896,
                        "name": "_gramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11878,
                        "src": "1924:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 11897,
                        "name": "_father",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11880,
                        "src": "1933:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11893,
                        "name": "SampleFather",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11865,
                        "src": "1900:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SampleFather_$11865_$",
                          "typeString": "type(contract SampleFather)"
                        }
                      },
                      "id": 11895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11864,
                      "src": "1900:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 11898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:41:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11899,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:41:99"
                },
                {
                  "expression": {
                    "id": 11902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11900,
                      "name": "child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11874,
                      "src": "1951:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11901,
                      "name": "_child",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11882,
                      "src": "1959:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1951:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11903,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:14:99"
                }
              ]
            },
            "functionSelector": "6f2edbd2",
            "id": 11905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11884,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15983,
                  "src": "1836:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1836:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "1707:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11876,
                  "mutability": "mutable",
                  "name": "_mother",
                  "nameLocation": "1735:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1727:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11878,
                  "mutability": "mutable",
                  "name": "_gramps",
                  "nameLocation": "1766:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1752:21:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11880,
                  "mutability": "mutable",
                  "name": "_father",
                  "nameLocation": "1791:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1783:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11882,
                  "mutability": "mutable",
                  "name": "_child",
                  "nameLocation": "1816:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 11905,
                  "src": "1808:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:111:99"
            },
            "returnParameters": {
              "id": 11886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:99"
            },
            "scope": 11906,
            "src": "1698:274:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11907,
        "src": "1599:375:99",
        "usedErrors": []
      }
    ],
    "src": "33:1942:99"
  },
  "bytecode": "608060405234801561001057600080fd5b506105d6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631c8aca3b146100675780634a6c9db6146100835780638129fc1c146100a65780638beaf7d7146100b0578063f62d1888146100c3578063fa39851f146100d6575b600080fd5b61007060025481565b6040519081526020015b60405180910390f35b6000546100969062010000900460ff1681565b604051901515815260200161007a565b6100ae6100eb565b005b6100ae6100be366004610467565b610171565b6100ae6100d136600461042a565b6101ed565b6100de610276565b60405161007a91906104ac565b600054610100900460ff1680610104575060005460ff16155b6101295760405162461bcd60e51b815260040161012090610501565b60405180910390fd5b600054610100900460ff1615801561014b576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561016e576000805461ff00191690555b50565b600054610100900460ff168061018a575060005460ff16155b6101a65760405162461bcd60e51b815260040161012090610501565b600054610100900460ff161580156101c8576000805461ffff19166101011790555b6101d1836101ed565b600282905580156101e8576000805461ff00191690555b505050565b600054610100900460ff1680610206575060005460ff16155b6102225760405162461bcd60e51b815260040161012090610501565b600054610100900460ff16158015610244576000805461ffff19166101011790555b61024c6100eb565b815161025f906001906020850190610304565b508015610272576000805461ff00191690555b5050565b600180546102839061054f565b80601f01602080910402602001604051908101604052809291908181526020018280546102af9061054f565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b8280546103109061054f565b90600052602060002090601f0160209004810192826103325760008555610378565b82601f1061034b57805160ff1916838001178555610378565b82800160010185558215610378579182015b8281111561037857825182559160200191906001019061035d565b50610384929150610388565b5090565b5b808211156103845760008155600101610389565b600082601f8301126103ae57600080fd5b813567ffffffffffffffff808211156103c9576103c961058a565b604051601f8301601f19908116603f011681019082821181831017156103f1576103f161058a565b8160405283815286602085880101111561040a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561043c57600080fd5b813567ffffffffffffffff81111561045357600080fd5b61045f8482850161039d565b949350505050565b6000806040838503121561047a57600080fd5b823567ffffffffffffffff81111561049157600080fd5b61049d8582860161039d565b95602094909401359450505050565b600060208083528351808285015260005b818110156104d9578581018301518582016040015282016104bd565b818111156104eb576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061056357607f821691505b6020821081141561058457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212202f91b2d21812920098946d46279ce4f4e82c15325ea8b516334fe944053142fc64736f6c63430008060033",
  "bytecodeSha1": "73dca3e5433ffa7610e50b4cbdb6d3ae0cbf9627",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "SampleFather",
  "coverageMap": {
    "branches": {
      "130": {
        "SampleGramps.initialize": {
          "5": [
            2037,
            2050,
            true
          ],
          "6": [
            2055,
            2067,
            true
          ]
        }
      },
      "99": {}
    },
    "statements": {
      "130": {},
      "99": {
        "SampleFather.initialize": {
          "1": [
            1476,
            1508
          ],
          "2": [
            1518,
            1534
          ]
        },
        "SampleGramps.initialize": {
          "3": [
            1144,
            1168
          ],
          "4": [
            1178,
            1192
          ]
        },
        "SampleHuman.initialize": {
          "0": [
            593,
            607
          ]
        }
      }
    }
  },
  "dependencies": [
    "Initializable",
    "SampleGramps",
    "SampleHuman"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631c8aca3b146100675780634a6c9db6146100835780638129fc1c146100a65780638beaf7d7146100b0578063f62d1888146100c3578063fa39851f146100d6575b600080fd5b61007060025481565b6040519081526020015b60405180910390f35b6000546100969062010000900460ff1681565b604051901515815260200161007a565b6100ae6100eb565b005b6100ae6100be366004610467565b610171565b6100ae6100d136600461042a565b6101ed565b6100de610276565b60405161007a91906104ac565b600054610100900460ff1680610104575060005460ff16155b6101295760405162461bcd60e51b815260040161012090610501565b60405180910390fd5b600054610100900460ff1615801561014b576000805461ffff19166101011790555b6000805462ff0000191662010000179055801561016e576000805461ff00191690555b50565b600054610100900460ff168061018a575060005460ff16155b6101a65760405162461bcd60e51b815260040161012090610501565b600054610100900460ff161580156101c8576000805461ffff19166101011790555b6101d1836101ed565b600282905580156101e8576000805461ff00191690555b505050565b600054610100900460ff1680610206575060005460ff16155b6102225760405162461bcd60e51b815260040161012090610501565b600054610100900460ff16158015610244576000805461ffff19166101011790555b61024c6100eb565b815161025f906001906020850190610304565b508015610272576000805461ff00191690555b5050565b600180546102839061054f565b80601f01602080910402602001604051908101604052809291908181526020018280546102af9061054f565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b8280546103109061054f565b90600052602060002090601f0160209004810192826103325760008555610378565b82601f1061034b57805160ff1916838001178555610378565b82800160010185558215610378579182015b8281111561037857825182559160200191906001019061035d565b50610384929150610388565b5090565b5b808211156103845760008155600101610389565b600082601f8301126103ae57600080fd5b813567ffffffffffffffff808211156103c9576103c961058a565b604051601f8301601f19908116603f011681019082821181831017156103f1576103f161058a565b8160405283815286602085880101111561040a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561043c57600080fd5b813567ffffffffffffffff81111561045357600080fd5b61045f8482850161039d565b949350505050565b6000806040838503121561047a57600080fd5b823567ffffffffffffffff81111561049157600080fd5b61049d8582860161039d565b95602094909401359450505050565b600060208083528351808285015260005b818110156104d9578581018301518582016040015282016104bd565b818111156104eb576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600181811c9082168061056357607f821691505b6020821081141561058457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212202f91b2d21812920098946d46279ce4f4e82c15325ea8b516334fe944053142fc64736f6c63430008060033",
  "deployedSourceMap": "1300:243:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:21;;;;;;;;;2815:25:211;;;2803:2;2788:18;1359:21:99;;;;;;;;516:19;;;;;;;;;;;;;;;1625:14:211;;1618:22;1600:41;;1588:2;1573:18;516:19:99;1555:92:211;542:72:99;;;:::i;:::-;;1387:154;;;;;;:::i;:::-;;:::i;1066:133::-;;;;;;:::i;:::-;;:::i;1039:20::-;;;:::i;:::-;;;;;;;:::i;542:72::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;;;;;;;;;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;593:7:99::1;:14:::0;;-1:-1:-1;;593:14:99::1;::::0;::::1;::::0;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;542:72:99:o;1387:154::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;1476:32:99::1;1500:7;1476:23;:32::i;:::-;1518:6;:16:::0;;;2295:66:130;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;1387:154:99;;:::o;1066:133::-;2037:13:130;;;;;;;;:30;;-1:-1:-1;2055:12:130;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:130;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:130;;;;;2175:98;1144:24:99::1;:22;:24::i;:::-;1178:14:::0;;::::1;::::0;:6:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2299::130::0;2295:66;;;2345:5;2329:21;;-1:-1:-1;;2329:21:130;;;2295:66;2019:348;1066:133:99;:::o;1039:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:719:211;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;128:1;125;118:12;77:2;164:6;151:20;190:18;227:2;223;220:10;217:2;;;233:18;;:::i;:::-;308:2;302:9;276:2;362:13;;-1:-1:-1;;358:22:211;;;382:2;354:31;350:40;338:53;;;406:18;;;426:22;;;403:46;400:2;;;452:18;;:::i;:::-;492:10;488:2;481:22;527:2;519:6;512:18;573:3;566:4;561:2;553:6;549:15;545:26;542:35;539:2;;;590:1;587;580:12;539:2;654;647:4;639:6;635:17;628:4;620:6;616:17;603:54;701:1;694:4;689:2;681:6;677:15;673:26;666:37;721:6;712:15;;;;;;67:666;;;;:::o;738:322::-;807:6;860:2;848:9;839:7;835:23;831:32;828:2;;;876:1;873;866:12;828:2;916:9;903:23;949:18;941:6;938:30;935:2;;;981:1;978;971:12;935:2;1004:50;1046:7;1037:6;1026:9;1022:22;1004:50;:::i;:::-;994:60;818:242;-1:-1:-1;;;;818:242:211:o;1065:390::-;1143:6;1151;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1260:9;1247:23;1293:18;1285:6;1282:30;1279:2;;;1325:1;1322;1315:12;1279:2;1348:50;1390:7;1381:6;1370:9;1366:22;1348:50;:::i;:::-;1338:60;1445:2;1430:18;;;;1417:32;;-1:-1:-1;;;;1162:293:211:o;1652:597::-;1764:4;1793:2;1822;1811:9;1804:21;1854:6;1848:13;1897:6;1892:2;1881:9;1877:18;1870:34;1922:1;1932:140;1946:6;1943:1;1940:13;1932:140;;;2041:14;;;2037:23;;2031:30;2007:17;;;2026:2;2003:26;1996:66;1961:10;;1932:140;;;2090:6;2087:1;2084:13;2081:2;;;2160:1;2155:2;2146:6;2135:9;2131:22;2127:31;2120:42;2081:2;-1:-1:-1;2233:2:211;2212:15;-1:-1:-1;;2208:29:211;2193:45;;;;2240:2;2189:54;;1773:476;-1:-1:-1;;;1773:476:211:o;2254:410::-;2456:2;2438:21;;;2495:2;2475:18;;;2468:30;2534:34;2529:2;2514:18;;2507:62;-1:-1:-1;;;2600:2:211;2585:18;;2578:44;2654:3;2639:19;;2428:236::o;2851:380::-;2930:1;2926:12;;;;2973;;;2994:2;;3048:4;3040:6;3036:17;3026:27;;2994:2;3101;3093:6;3090:14;3070:18;3067:38;3064:2;;;3147:10;3142:3;3138:20;3135:1;3128:31;3182:4;3179:1;3172:15;3210:4;3207:1;3200:15;3064:2;;2906:325;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "Sample base intializable contract that defines a field father and extends from gramps",
    "version": 1
  },
  "offset": [
    1300,
    1543
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C8ACA3B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4A6C9DB6 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x8BEAF7D7 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xFA39851F EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x96 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7A JUMP JUMPDEST PUSH2 0xAE PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH2 0xAE PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH2 0xDE PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x104 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x18A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1D1 DUP4 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x206 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x24C PUSH2 0xEB JUMP JUMPDEST DUP2 MLOAD PUSH2 0x25F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x304 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x283 SWAP1 PUSH2 0x54F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0x54F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x310 SWAP1 PUSH2 0x54F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x332 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x378 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x34B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x378 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x378 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x378 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x35D JUMP JUMPDEST POP PUSH2 0x384 SWAP3 SWAP2 POP PUSH2 0x388 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x389 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3C9 JUMPI PUSH2 0x3C9 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3F1 JUMPI PUSH2 0x3F1 PUSH2 0x58A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45F DUP5 DUP3 DUP6 ADD PUSH2 0x39D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49D DUP6 DUP3 DUP7 ADD PUSH2 0x39D JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4BD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x563 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x584 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SWAP2 0xB2 0xD2 XOR SLT SWAP3 STOP SWAP9 SWAP5 PUSH14 0x46279CE4F4E82C15325EA8B51633 0x4F 0xE9 DIFFICULTY SDIV BALANCE TIMESTAMP 0xFC PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "5": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "CALLVALUE",
      "path": "99"
    },
    "6": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "7": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "ISZERO",
      "path": "99"
    },
    "8": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "12": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "REVERT",
      "path": "99"
    },
    "16": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "17": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "POP",
      "path": "99"
    },
    "18": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "21": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "LT",
      "path": "99"
    },
    "22": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "26": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "CALLDATALOAD",
      "path": "99"
    },
    "29": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "SHR",
      "path": "99"
    },
    "32": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "33": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x1C8ACA3B"
    },
    "38": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "EQ",
      "path": "99"
    },
    "39": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "43": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "44": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x4A6C9DB6"
    },
    "49": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "EQ",
      "path": "99"
    },
    "50": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x83"
    },
    "53": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "54": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "55": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x8129FC1C"
    },
    "60": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "EQ",
      "path": "99"
    },
    "61": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xA6"
    },
    "64": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "65": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "66": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0x8BEAF7D7"
    },
    "71": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "EQ",
      "path": "99"
    },
    "72": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xB0"
    },
    "75": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "76": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "77": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xF62D1888"
    },
    "82": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "EQ",
      "path": "99"
    },
    "83": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xC3"
    },
    "86": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "87": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "88": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH4",
      "path": "99",
      "value": "0xFA39851F"
    },
    "93": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "EQ",
      "path": "99"
    },
    "94": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xD6"
    },
    "97": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "98": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "99": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "DUP1",
      "path": "99"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1300,
        1543
      ],
      "op": "REVERT",
      "path": "99"
    },
    "103": {
      "offset": [
        1359,
        1380
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "104": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x70"
    },
    "107": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x2"
    },
    "109": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "110": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "DUP2",
      "path": "99"
    },
    "111": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "JUMP",
      "path": "99"
    },
    "112": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "113": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "115": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "116": {
      "op": "SWAP1"
    },
    "117": {
      "op": "DUP2"
    },
    "118": {
      "op": "MSTORE"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "121": {
      "op": "ADD"
    },
    "122": {
      "offset": [
        1359,
        1380
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "123": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "125": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "126": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "DUP1",
      "path": "99"
    },
    "127": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "128": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SUB",
      "path": "99"
    },
    "129": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "130": {
      "fn": null,
      "offset": [
        1359,
        1380
      ],
      "op": "RETURN",
      "path": "99"
    },
    "131": {
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "132": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "134": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "135": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x96"
    },
    "138": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "139": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH3",
      "path": "99",
      "value": "0x10000"
    },
    "143": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "144": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DIV",
      "path": "99"
    },
    "145": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0xFF"
    },
    "147": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "AND",
      "path": "99"
    },
    "148": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "DUP2",
      "path": "99"
    },
    "149": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMP",
      "path": "99"
    },
    "150": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "151": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "153": {
      "fn": null,
      "offset": [
        516,
        535
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "154": {
      "op": "SWAP1"
    },
    "155": {
      "op": "ISZERO"
    },
    "156": {
      "op": "ISZERO"
    },
    "157": {
      "op": "DUP2"
    },
    "158": {
      "op": "MSTORE"
    },
    "159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "161": {
      "op": "ADD"
    },
    "162": {
      "offset": [
        516,
        535
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x7A"
    },
    "165": {
      "op": "JUMP"
    },
    "166": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "167": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAE"
    },
    "170": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xEB"
    },
    "173": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "99"
    },
    "174": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "175": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "STOP",
      "path": "99"
    },
    "176": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "177": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAE"
    },
    "180": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xBE"
    },
    "183": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "184": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "186": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x467"
    },
    "189": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMP",
      "path": "99"
    },
    "190": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "191": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x171"
    },
    "194": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMP",
      "path": "99"
    },
    "195": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "196": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xAE"
    },
    "199": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xD1"
    },
    "202": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "CALLDATASIZE",
      "path": "99"
    },
    "203": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x4"
    },
    "205": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x42A"
    },
    "208": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "209": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "210": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1ED"
    },
    "213": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "214": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "215": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xDE"
    },
    "218": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x276"
    },
    "221": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "222": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "223": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "225": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "226": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x7A"
    },
    "229": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "230": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "231": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x4AC"
    },
    "234": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "235": {
      "fn": "SampleHuman.initialize",
      "offset": [
        542,
        614
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "236": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "238": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "239": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "242": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "243": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "244": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "246": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "247": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "248": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x104"
    },
    "251": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "252": {
      "op": "POP"
    },
    "253": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "255": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "256": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "258": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "259": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "260": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "261": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x129"
    },
    "264": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "265": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "267": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "276": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "277": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "279": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "280": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x120"
    },
    "283": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "284": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x501"
    },
    "287": {
      "fn": "SampleHuman.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "288": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "289": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "291": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "292": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "DUP1",
      "path": "130"
    },
    "293": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP2",
      "path": "130"
    },
    "294": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SUB",
      "path": "130"
    },
    "295": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "296": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "130"
    },
    "297": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "298": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "300": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "301": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "304": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "305": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "306": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "308": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "309": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "310": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "311": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "312": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x14B"
    },
    "315": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "316": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "318": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "319": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "320": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "323": {
      "op": "NOT"
    },
    "324": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "325": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "328": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "329": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "330": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "331": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "332": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        600
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 0,
      "value": "0x0"
    },
    "334": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "DUP1",
      "path": "99"
    },
    "335": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "336": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "340": {
      "op": "NOT"
    },
    "341": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "AND",
      "path": "99"
    },
    "342": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "PUSH3",
      "path": "99",
      "value": "0x10000"
    },
    "346": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "OR",
      "path": "99"
    },
    "347": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "348": {
      "fn": "SampleHuman.initialize",
      "offset": [
        593,
        607
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "349": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "350": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "351": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x16E"
    },
    "354": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "355": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "357": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "358": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "359": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "362": {
      "op": "NOT"
    },
    "363": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "364": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "365": {
      "fn": "SampleHuman.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "366": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "367": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "368": {
      "fn": "SampleHuman.initialize",
      "jump": "o",
      "offset": [
        542,
        614
      ],
      "op": "JUMP",
      "path": "99"
    },
    "369": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "370": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "372": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "373": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "376": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "377": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "378": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "380": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "381": {
      "fn": "SampleFather.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "382": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x18A"
    },
    "385": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "389": {
      "fn": "SampleFather.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "390": {
      "fn": "SampleFather.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "392": {
      "fn": "SampleFather.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "393": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "394": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "395": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x1A6"
    },
    "398": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "399": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "401": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "410": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "411": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "413": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "414": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x120"
    },
    "417": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "418": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x501"
    },
    "421": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "422": {
      "fn": "SampleFather.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "423": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "425": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "426": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "429": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "430": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "431": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "433": {
      "fn": "SampleFather.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "434": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "435": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "436": {
      "fn": "SampleFather.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "437": {
      "fn": "SampleFather.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x1C8"
    },
    "440": {
      "fn": "SampleFather.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "441": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "443": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "444": {
      "fn": "SampleFather.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "445": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "448": {
      "op": "NOT"
    },
    "449": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "450": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "453": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "454": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "455": {
      "fn": "SampleFather.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "456": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "457": {
      "fn": "SampleFather.initialize",
      "offset": [
        1476,
        1508
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 1,
      "value": "0x1D1"
    },
    "460": {
      "fn": "SampleFather.initialize",
      "offset": [
        1500,
        1507
      ],
      "op": "DUP4",
      "path": "99"
    },
    "461": {
      "fn": "SampleFather.initialize",
      "offset": [
        1476,
        1499
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x1ED"
    },
    "464": {
      "fn": "SampleFather.initialize",
      "jump": "i",
      "offset": [
        1476,
        1508
      ],
      "op": "JUMP",
      "path": "99"
    },
    "465": {
      "fn": "SampleFather.initialize",
      "offset": [
        1476,
        1508
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "466": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1524
      ],
      "op": "PUSH1",
      "path": "99",
      "statement": 2,
      "value": "0x2"
    },
    "468": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "DUP3",
      "path": "99"
    },
    "469": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "470": {
      "fn": "SampleFather.initialize",
      "offset": [
        1518,
        1534
      ],
      "op": "SSTORE",
      "path": "99"
    },
    "471": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "130"
    },
    "472": {
      "fn": "SampleFather.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "473": {
      "fn": "SampleFather.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x1E8"
    },
    "476": {
      "fn": "SampleFather.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "477": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "479": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "480": {
      "fn": "SampleFather.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "481": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "484": {
      "op": "NOT"
    },
    "485": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "486": {
      "fn": "SampleFather.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "487": {
      "fn": "SampleFather.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "488": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "489": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "490": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "POP",
      "path": "99"
    },
    "491": {
      "fn": "SampleFather.initialize",
      "offset": [
        1387,
        1541
      ],
      "op": "POP",
      "path": "99"
    },
    "492": {
      "fn": "SampleFather.initialize",
      "jump": "o",
      "offset": [
        1387,
        1541
      ],
      "op": "JUMP",
      "path": "99"
    },
    "493": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "494": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "496": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "497": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "500": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "501": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "130"
    },
    "502": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "504": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "130"
    },
    "505": {
      "branch": 5,
      "fn": "SampleGramps.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "130"
    },
    "506": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x206"
    },
    "509": {
      "branch": 5,
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "513": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "514": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "516": {
      "branch": 6,
      "fn": "SampleGramps.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "130"
    },
    "517": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "518": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "519": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x222"
    },
    "522": {
      "branch": 6,
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "523": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x40"
    },
    "525": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "130"
    },
    "526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "130"
    },
    "534": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "130"
    },
    "535": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x4"
    },
    "537": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "130"
    },
    "538": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x120"
    },
    "541": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "542": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x501"
    },
    "545": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "130"
    },
    "546": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "547": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "549": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "550": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x100"
    },
    "553": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "554": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "130"
    },
    "555": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0xFF"
    },
    "557": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "130"
    },
    "558": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "559": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "130"
    },
    "560": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "561": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x244"
    },
    "564": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "565": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "567": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "130"
    },
    "568": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "569": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "572": {
      "op": "NOT"
    },
    "573": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "130"
    },
    "574": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x101"
    },
    "577": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "130"
    },
    "578": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "579": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "580": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "581": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "PUSH2",
      "path": "99",
      "statement": 3,
      "value": "0x24C"
    },
    "584": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1166
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0xEB"
    },
    "587": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMP",
      "path": "99"
    },
    "588": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1144,
        1168
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "589": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP2",
      "path": "99",
      "statement": 4
    },
    "590": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "591": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x25F"
    },
    "594": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "595": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "597": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1184
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "598": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "600": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP6",
      "path": "99"
    },
    "601": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "ADD",
      "path": "99"
    },
    "602": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "603": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x304"
    },
    "606": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMP",
      "path": "99"
    },
    "607": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "608": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1178,
        1192
      ],
      "op": "POP",
      "path": "99"
    },
    "609": {
      "offset": [
        2299,
        2313
      ],
      "op": "DUP1",
      "path": "130"
    },
    "610": {
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "130"
    },
    "611": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "130",
      "value": "0x272"
    },
    "614": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "130"
    },
    "615": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "130",
      "value": "0x0"
    },
    "617": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "130"
    },
    "618": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "130"
    },
    "619": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "622": {
      "op": "NOT"
    },
    "623": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "130"
    },
    "624": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "130"
    },
    "625": {
      "fn": "SampleGramps.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "130"
    },
    "626": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "130"
    },
    "627": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "130"
    },
    "628": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1066,
        1199
      ],
      "op": "POP",
      "path": "99"
    },
    "629": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1066,
        1199
      ],
      "op": "JUMP",
      "path": "99"
    },
    "630": {
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "631": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "633": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "634": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "635": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x283"
    },
    "638": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "639": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x54F"
    },
    "642": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "643": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "644": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "645": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "647": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "648": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "650": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "651": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "652": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "99"
    },
    "653": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "99"
    },
    "654": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "656": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "657": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "659": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MLOAD",
      "path": "99"
    },
    "660": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "661": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "662": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "663": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x40"
    },
    "665": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "666": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "667": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP3",
      "path": "99"
    },
    "668": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "669": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "670": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "671": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "672": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "673": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "675": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "676": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "677": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "678": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "679": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2AF"
    },
    "682": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "683": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x54F"
    },
    "686": {
      "fn": "SampleGramps.initialize",
      "jump": "i",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "687": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "688": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "689": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ISZERO",
      "path": "99"
    },
    "690": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2FC"
    },
    "693": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "694": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "695": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "697": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "LT",
      "path": "99"
    },
    "698": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2D1"
    },
    "701": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "702": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x100"
    },
    "705": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "706": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "707": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "708": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DIV",
      "path": "99"
    },
    "709": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MUL",
      "path": "99"
    },
    "710": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "711": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "712": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "713": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "715": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "716": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "717": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2FC"
    },
    "720": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "721": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "722": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "723": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "724": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "725": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "726": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "728": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "729": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "731": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x0"
    },
    "733": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "KECCAK256",
      "path": "99"
    },
    "734": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "735": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "736": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "737": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SLOAD",
      "path": "99"
    },
    "738": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "739": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "MSTORE",
      "path": "99"
    },
    "740": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "741": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1"
    },
    "743": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "744": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "745": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x20"
    },
    "747": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "748": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP1",
      "path": "99"
    },
    "749": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP4",
      "path": "99"
    },
    "750": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "GT",
      "path": "99"
    },
    "751": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH2",
      "path": "99",
      "value": "0x2DF"
    },
    "754": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPI",
      "path": "99"
    },
    "755": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "756": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP1",
      "path": "99"
    },
    "757": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SUB",
      "path": "99"
    },
    "758": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "PUSH1",
      "path": "99",
      "value": "0x1F"
    },
    "760": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "AND",
      "path": "99"
    },
    "761": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP3",
      "path": "99"
    },
    "762": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "ADD",
      "path": "99"
    },
    "763": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "SWAP2",
      "path": "99"
    },
    "764": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMPDEST",
      "path": "99"
    },
    "765": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "766": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "767": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "768": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "769": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "POP",
      "path": "99"
    },
    "770": {
      "fn": "SampleGramps.initialize",
      "offset": [
        1039,
        1059
      ],
      "op": "DUP2",
      "path": "99"
    },
    "771": {
      "fn": "SampleGramps.initialize",
      "jump": "o",
      "offset": [
        1039,
        1059
      ],
      "op": "JUMP",
      "path": "99"
    },
    "772": {
      "op": "JUMPDEST"
    },
    "773": {
      "op": "DUP3"
    },
    "774": {
      "op": "DUP1"
    },
    "775": {
      "op": "SLOAD"
    },
    "776": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "779": {
      "op": "SWAP1"
    },
    "780": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "783": {
      "jump": "i",
      "op": "JUMP"
    },
    "784": {
      "op": "JUMPDEST"
    },
    "785": {
      "op": "SWAP1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "793": {
      "op": "KECCAK256"
    },
    "794": {
      "op": "SWAP1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "op": "SWAP1"
    },
    "801": {
      "op": "DIV"
    },
    "802": {
      "op": "DUP2"
    },
    "803": {
      "op": "ADD"
    },
    "804": {
      "op": "SWAP3"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "PUSH2",
      "value": "0x332"
    },
    "809": {
      "op": "JUMPI"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "812": {
      "op": "DUP6"
    },
    "813": {
      "op": "SSTORE"
    },
    "814": {
      "op": "PUSH2",
      "value": "0x378"
    },
    "817": {
      "op": "JUMP"
    },
    "818": {
      "op": "JUMPDEST"
    },
    "819": {
      "op": "DUP3"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "822": {
      "op": "LT"
    },
    "823": {
      "op": "PUSH2",
      "value": "0x34B"
    },
    "826": {
      "op": "JUMPI"
    },
    "827": {
      "op": "DUP1"
    },
    "828": {
      "op": "MLOAD"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "831": {
      "op": "NOT"
    },
    "832": {
      "op": "AND"
    },
    "833": {
      "op": "DUP4"
    },
    "834": {
      "op": "DUP1"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "OR"
    },
    "837": {
      "op": "DUP6"
    },
    "838": {
      "op": "SSTORE"
    },
    "839": {
      "op": "PUSH2",
      "value": "0x378"
    },
    "842": {
      "op": "JUMP"
    },
    "843": {
      "op": "JUMPDEST"
    },
    "844": {
      "op": "DUP3"
    },
    "845": {
      "op": "DUP1"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "op": "DUP6"
    },
    "851": {
      "op": "SSTORE"
    },
    "852": {
      "op": "DUP3"
    },
    "853": {
      "op": "ISZERO"
    },
    "854": {
      "op": "PUSH2",
      "value": "0x378"
    },
    "857": {
      "op": "JUMPI"
    },
    "858": {
      "op": "SWAP2"
    },
    "859": {
      "op": "DUP3"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "JUMPDEST"
    },
    "862": {
      "op": "DUP3"
    },
    "863": {
      "op": "DUP2"
    },
    "864": {
      "op": "GT"
    },
    "865": {
      "op": "ISZERO"
    },
    "866": {
      "op": "PUSH2",
      "value": "0x378"
    },
    "869": {
      "op": "JUMPI"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "MLOAD"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "SSTORE"
    },
    "874": {
      "op": "SWAP2"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "op": "SWAP2"
    },
    "879": {
      "op": "SWAP1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "SWAP1"
    },
    "884": {
      "op": "PUSH2",
      "value": "0x35D"
    },
    "887": {
      "op": "JUMP"
    },
    "888": {
      "op": "JUMPDEST"
    },
    "889": {
      "op": "POP"
    },
    "890": {
      "op": "PUSH2",
      "value": "0x384"
    },
    "893": {
      "op": "SWAP3"
    },
    "894": {
      "op": "SWAP2"
    },
    "895": {
      "op": "POP"
    },
    "896": {
      "op": "PUSH2",
      "value": "0x388"
    },
    "899": {
      "jump": "i",
      "op": "JUMP"
    },
    "900": {
      "op": "JUMPDEST"
    },
    "901": {
      "op": "POP"
    },
    "902": {
      "op": "SWAP1"
    },
    "903": {
      "jump": "o",
      "op": "JUMP"
    },
    "904": {
      "op": "JUMPDEST"
    },
    "905": {
      "op": "JUMPDEST"
    },
    "906": {
      "op": "DUP1"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "GT"
    },
    "909": {
      "op": "ISZERO"
    },
    "910": {
      "op": "PUSH2",
      "value": "0x384"
    },
    "913": {
      "op": "JUMPI"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "916": {
      "op": "DUP2"
    },
    "917": {
      "op": "SSTORE"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "PUSH2",
      "value": "0x389"
    },
    "924": {
      "op": "JUMP"
    },
    "925": {
      "op": "JUMPDEST"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "928": {
      "op": "DUP3"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "931": {
      "op": "DUP4"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "SLT"
    },
    "934": {
      "op": "PUSH2",
      "value": "0x3AE"
    },
    "937": {
      "op": "JUMPI"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "940": {
      "op": "DUP1"
    },
    "941": {
      "op": "REVERT"
    },
    "942": {
      "op": "JUMPDEST"
    },
    "943": {
      "op": "DUP2"
    },
    "944": {
      "op": "CALLDATALOAD"
    },
    "945": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "954": {
      "op": "DUP1"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "GT"
    },
    "957": {
      "op": "ISZERO"
    },
    "958": {
      "op": "PUSH2",
      "value": "0x3C9"
    },
    "961": {
      "op": "JUMPI"
    },
    "962": {
      "op": "PUSH2",
      "value": "0x3C9"
    },
    "965": {
      "op": "PUSH2",
      "value": "0x58A"
    },
    "968": {
      "jump": "i",
      "op": "JUMP"
    },
    "969": {
      "op": "JUMPDEST"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "972": {
      "op": "MLOAD"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "975": {
      "op": "DUP4"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "979": {
      "op": "NOT"
    },
    "980": {
      "op": "SWAP1"
    },
    "981": {
      "op": "DUP2"
    },
    "982": {
      "op": "AND"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "985": {
      "op": "ADD"
    },
    "986": {
      "op": "AND"
    },
    "987": {
      "op": "DUP2"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "SWAP1"
    },
    "990": {
      "op": "DUP3"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "GT"
    },
    "993": {
      "op": "DUP2"
    },
    "994": {
      "op": "DUP4"
    },
    "995": {
      "op": "LT"
    },
    "996": {
      "op": "OR"
    },
    "997": {
      "op": "ISZERO"
    },
    "998": {
      "op": "PUSH2",
      "value": "0x3F1"
    },
    "1001": {
      "op": "JUMPI"
    },
    "1002": {
      "op": "PUSH2",
      "value": "0x3F1"
    },
    "1005": {
      "op": "PUSH2",
      "value": "0x58A"
    },
    "1008": {
      "jump": "i",
      "op": "JUMP"
    },
    "1009": {
      "op": "JUMPDEST"
    },
    "1010": {
      "op": "DUP2"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "DUP4"
    },
    "1015": {
      "op": "DUP2"
    },
    "1016": {
      "op": "MSTORE"
    },
    "1017": {
      "op": "DUP7"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1020": {
      "op": "DUP6"
    },
    "1021": {
      "op": "DUP9"
    },
    "1022": {
      "op": "ADD"
    },
    "1023": {
      "op": "ADD"
    },
    "1024": {
      "op": "GT"
    },
    "1025": {
      "op": "ISZERO"
    },
    "1026": {
      "op": "PUSH2",
      "value": "0x40A"
    },
    "1029": {
      "op": "JUMPI"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1032": {
      "op": "DUP1"
    },
    "1033": {
      "op": "REVERT"
    },
    "1034": {
      "op": "JUMPDEST"
    },
    "1035": {
      "op": "DUP4"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1038": {
      "op": "DUP8"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1042": {
      "op": "DUP4"
    },
    "1043": {
      "op": "ADD"
    },
    "1044": {
      "op": "CALLDATACOPY"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1049": {
      "op": "DUP6"
    },
    "1050": {
      "op": "DUP4"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "op": "MSTORE"
    },
    "1054": {
      "op": "DUP1"
    },
    "1055": {
      "op": "SWAP5"
    },
    "1056": {
      "op": "POP"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "op": "POP"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "op": "SWAP3"
    },
    "1062": {
      "op": "SWAP2"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "op": "POP"
    },
    "1065": {
      "jump": "o",
      "op": "JUMP"
    },
    "1066": {
      "op": "JUMPDEST"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1071": {
      "op": "DUP3"
    },
    "1072": {
      "op": "DUP5"
    },
    "1073": {
      "op": "SUB"
    },
    "1074": {
      "op": "SLT"
    },
    "1075": {
      "op": "ISZERO"
    },
    "1076": {
      "op": "PUSH2",
      "value": "0x43C"
    },
    "1079": {
      "op": "JUMPI"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1082": {
      "op": "DUP1"
    },
    "1083": {
      "op": "REVERT"
    },
    "1084": {
      "op": "JUMPDEST"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "CALLDATALOAD"
    },
    "1087": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1096": {
      "op": "DUP2"
    },
    "1097": {
      "op": "GT"
    },
    "1098": {
      "op": "ISZERO"
    },
    "1099": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1102": {
      "op": "JUMPI"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "op": "DUP1"
    },
    "1106": {
      "op": "REVERT"
    },
    "1107": {
      "op": "JUMPDEST"
    },
    "1108": {
      "op": "PUSH2",
      "value": "0x45F"
    },
    "1111": {
      "op": "DUP5"
    },
    "1112": {
      "op": "DUP3"
    },
    "1113": {
      "op": "DUP6"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "PUSH2",
      "value": "0x39D"
    },
    "1118": {
      "jump": "i",
      "op": "JUMP"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "SWAP5"
    },
    "1121": {
      "op": "SWAP4"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "jump": "o",
      "op": "JUMP"
    },
    "1127": {
      "op": "JUMPDEST"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1130": {
      "op": "DUP1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1133": {
      "op": "DUP4"
    },
    "1134": {
      "op": "DUP6"
    },
    "1135": {
      "op": "SUB"
    },
    "1136": {
      "op": "SLT"
    },
    "1137": {
      "op": "ISZERO"
    },
    "1138": {
      "op": "PUSH2",
      "value": "0x47A"
    },
    "1141": {
      "op": "JUMPI"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1144": {
      "op": "DUP1"
    },
    "1145": {
      "op": "REVERT"
    },
    "1146": {
      "op": "JUMPDEST"
    },
    "1147": {
      "op": "DUP3"
    },
    "1148": {
      "op": "CALLDATALOAD"
    },
    "1149": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1158": {
      "op": "DUP2"
    },
    "1159": {
      "op": "GT"
    },
    "1160": {
      "op": "ISZERO"
    },
    "1161": {
      "op": "PUSH2",
      "value": "0x491"
    },
    "1164": {
      "op": "JUMPI"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1167": {
      "op": "DUP1"
    },
    "1168": {
      "op": "REVERT"
    },
    "1169": {
      "op": "JUMPDEST"
    },
    "1170": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "1173": {
      "op": "DUP6"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "DUP7"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "PUSH2",
      "value": "0x39D"
    },
    "1180": {
      "jump": "i",
      "op": "JUMP"
    },
    "1181": {
      "op": "JUMPDEST"
    },
    "1182": {
      "op": "SWAP6"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1185": {
      "op": "SWAP5"
    },
    "1186": {
      "op": "SWAP1"
    },
    "1187": {
      "op": "SWAP5"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "CALLDATALOAD"
    },
    "1190": {
      "op": "SWAP5"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "op": "POP"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "jump": "o",
      "op": "JUMP"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1201": {
      "op": "DUP1"
    },
    "1202": {
      "op": "DUP4"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "DUP4"
    },
    "1205": {
      "op": "MLOAD"
    },
    "1206": {
      "op": "DUP1"
    },
    "1207": {
      "op": "DUP3"
    },
    "1208": {
      "op": "DUP6"
    },
    "1209": {
      "op": "ADD"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1213": {
      "op": "JUMPDEST"
    },
    "1214": {
      "op": "DUP2"
    },
    "1215": {
      "op": "DUP2"
    },
    "1216": {
      "op": "LT"
    },
    "1217": {
      "op": "ISZERO"
    },
    "1218": {
      "op": "PUSH2",
      "value": "0x4D9"
    },
    "1221": {
      "op": "JUMPI"
    },
    "1222": {
      "op": "DUP6"
    },
    "1223": {
      "op": "DUP2"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "DUP4"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MLOAD"
    },
    "1228": {
      "op": "DUP6"
    },
    "1229": {
      "op": "DUP3"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "op": "MSTORE"
    },
    "1235": {
      "op": "DUP3"
    },
    "1236": {
      "op": "ADD"
    },
    "1237": {
      "op": "PUSH2",
      "value": "0x4BD"
    },
    "1240": {
      "op": "JUMP"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "DUP2"
    },
    "1243": {
      "op": "DUP2"
    },
    "1244": {
      "op": "GT"
    },
    "1245": {
      "op": "ISZERO"
    },
    "1246": {
      "op": "PUSH2",
      "value": "0x4EB"
    },
    "1249": {
      "op": "JUMPI"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1254": {
      "op": "DUP4"
    },
    "1255": {
      "op": "DUP8"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "ADD"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "op": "JUMPDEST"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1263": {
      "op": "ADD"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1266": {
      "op": "NOT"
    },
    "1267": {
      "op": "AND"
    },
    "1268": {
      "op": "SWAP3"
    },
    "1269": {
      "op": "SWAP1"
    },
    "1270": {
      "op": "SWAP3"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "op": "SWAP4"
    },
    "1276": {
      "op": "SWAP3"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "jump": "o",
      "op": "JUMP"
    },
    "1281": {
      "op": "JUMPDEST"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1284": {
      "op": "DUP1"
    },
    "1285": {
      "op": "DUP3"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1289": {
      "op": "SWAP1"
    },
    "1290": {
      "op": "DUP3"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "SWAP1"
    },
    "1358": {
      "jump": "o",
      "op": "JUMP"
    },
    "1359": {
      "op": "JUMPDEST"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "DUP2"
    },
    "1363": {
      "op": "DUP2"
    },
    "1364": {
      "op": "SHR"
    },
    "1365": {
      "op": "SWAP1"
    },
    "1366": {
      "op": "DUP3"
    },
    "1367": {
      "op": "AND"
    },
    "1368": {
      "op": "DUP1"
    },
    "1369": {
      "op": "PUSH2",
      "value": "0x563"
    },
    "1372": {
      "op": "JUMPI"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1375": {
      "op": "DUP3"
    },
    "1376": {
      "op": "AND"
    },
    "1377": {
      "op": "SWAP2"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "op": "JUMPDEST"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1382": {
      "op": "DUP3"
    },
    "1383": {
      "op": "LT"
    },
    "1384": {
      "op": "DUP2"
    },
    "1385": {
      "op": "EQ"
    },
    "1386": {
      "op": "ISZERO"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x584"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1401": {
      "op": "MSTORE"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1411": {
      "op": "REVERT"
    },
    "1412": {
      "op": "JUMPDEST"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "SWAP2"
    },
    "1415": {
      "op": "SWAP1"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "jump": "o",
      "op": "JUMP"
    },
    "1418": {
      "op": "JUMPDEST"
    },
    "1419": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "MSTORE"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1434": {
      "op": "MSTORE"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1439": {
      "op": "REVERT"
    }
  },
  "sha1": "e5d5fb97e35fc725af618e81bf0e1c1b779a15ab",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n// Sample contracts showing upgradeability with multiple inheritance.\n// Child contract inherits from Father and Mother contracts, and Father extends from Gramps.\n//\n//         Human\n//       /       \\\n//      |       Gramps\n//      |         |\n//    Mother    Father\n//      |         |\n//      -- Child --\n\n/**\n * Sample base intializable contract that is a human\n */\ncontract SampleHuman is Initializable {\n    bool public isHuman;\n\n    function initialize() public initializer {\n        isHuman = true;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field mother\n */\ncontract SampleMother is Initializable, SampleHuman {\n    uint256 public mother;\n\n    function initialize(uint256 value) public virtual initializer {\n        SampleHuman.initialize();\n        mother = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field gramps\n */\ncontract SampleGramps is Initializable, SampleHuman {\n    string public gramps;\n\n    function initialize(string memory value) public virtual initializer {\n        SampleHuman.initialize();\n        gramps = value;\n    }\n}\n\n/**\n * Sample base intializable contract that defines a field father and extends from gramps\n */\ncontract SampleFather is Initializable, SampleGramps {\n    uint256 public father;\n\n    function initialize(string memory _gramps, uint256 _father) public initializer {\n        SampleGramps.initialize(_gramps);\n        father = _father;\n    }\n}\n\n/**\n * Child extends from mother, father (gramps)\n */\ncontract SampleChild is Initializable, SampleMother, SampleFather {\n    uint256 public child;\n\n    function initialize(\n        uint256 _mother,\n        string memory _gramps,\n        uint256 _father,\n        uint256 _child\n    ) public initializer {\n        SampleMother.initialize(_mother);\n        SampleFather.initialize(_gramps, _father);\n        child = _child;\n    }\n}\n",
  "sourceMap": "1300:243:99:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OpenZepellin/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
  "type": "contract"
}