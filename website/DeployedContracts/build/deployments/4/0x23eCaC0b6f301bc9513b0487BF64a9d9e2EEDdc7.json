{"abi": [{"inputs": [{"internalType": "string", "name": "_electionName", "type": "string"}, {"internalType": "address", "name": "_wakandaTokenAddress", "type": "address"}, {"internalType": "string[]", "name": "_candidateNames", "type": "string[]"}, {"internalType": "uint8[]", "name": "_candidateAges", "type": "uint8[]"}, {"internalType": "string[]", "name": "_candidateCults", "type": "string[]"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint8", "name": "age", "type": "uint8"}, {"internalType": "string", "name": "cult", "type": "string"}, {"internalType": "uint256", "name": "votes", "type": "uint256"}], "indexed": false, "internalType": "struct Voting.Candidate", "name": "challenger", "type": "tuple"}], "name": "NewChallenger", "type": "event"}, {"inputs": [{"internalType": "address", "name": "_citizenAddress", "type": "address"}], "name": "citizenHasVoted", "outputs": [{"components": [{"internalType": "uint256", "name": "candidateId", "type": "uint256"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bool", "name": "hasVoted", "type": "bool"}], "internalType": "struct Voting.Vote", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_citizenAddress", "type": "address"}], "name": "citizenIsRegistered", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes", "name": "signature", "type": "bytes"}, {"internalType": "address", "name": "citizenAddress", "type": "address"}, {"internalType": "uint256", "name": "candidateId", "type": "uint256"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "delegatedVote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "endTheElection", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "citizenAddress", "type": "address"}, {"internalType": "uint256", "name": "candidateId", "type": "uint256"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "getDigest", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "citizenAddress", "type": "address"}], "name": "getNonce", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "digest", "type": "bytes32"}, {"internalType": "bytes", "name": "signature", "type": "bytes"}], "name": "getSigner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_citizen", "type": "address"}], "name": "register", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "seeAllCandidates", "outputs": [{"components": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint8", "name": "age", "type": "uint8"}, {"internalType": "string", "name": "cult", "type": "string"}, {"internalType": "uint256", "name": "votes", "type": "uint256"}], "internalType": "struct Voting.Candidate[]", "name": "", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_candidateId", "type": "uint256"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "vote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "winningCandidates", "outputs": [{"components": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint8", "name": "age", "type": "uint8"}, {"internalType": "string", "name": "cult", "type": "string"}, {"internalType": "uint256", "name": "votes", "type": "uint256"}], "internalType": "struct Voting.Candidate[]", "name": "", "type": "tuple[]"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/OpenZepellin/contracts/utils/Strings.sol", "1": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol", "2": "contracts/OpenZepellin/contracts/utils/cryptography/draft-EIP712.sol", "3": "contracts/OpenZepellin/contracts/utils/math/SafeMath.sol", "4": "contracts/Token.sol", "5": "contracts/Voting.sol"}, "ast": {"absolutePath": "contracts/Voting.sol", "exportedSymbols": {"ECDSA": [1820], "EIP712": [1974], "SafeMath": [1430], "Strings": [2177], "Token": [371], "Voting": [1118]}, "id": 1119, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 373, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "0:23:5"}, {"id": 374, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "24:33:5"}, {"absolutePath": "contracts/OpenZepellin/contracts/utils/math/SafeMath.sol", "file": "./OpenZepellin/contracts/utils/math/SafeMath.sol", "id": 375, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1119, "sourceUnit": 1431, "src": "91:58:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/Token.sol", "file": "./Token.sol", "id": 376, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1119, "sourceUnit": 372, "src": "150:21:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/ECDSA.sol", "file": "./OpenZepellin/contracts/utils/cryptography/ECDSA.sol", "id": 377, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1119, "sourceUnit": 1821, "src": "173:63:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/OpenZepellin/contracts/utils/cryptography/draft-EIP712.sol", "file": "./OpenZepellin/contracts/utils/cryptography/draft-EIP712.sol", "id": 378, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1119, "sourceUnit": 1975, "src": "237:70:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 380, "name": "EIP712", "nodeType": "IdentifierPath", "referencedDeclaration": 1974, "src": "466:6:5"}, "id": 381, "nodeType": "InheritanceSpecifier", "src": "466:6:5"}], "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 379, "nodeType": "StructuredDocumentation", "src": "309:137:5", "text": "@title Voting Contract\n@notice Voters Register (receive 1 WKND) token after which, they can particapate in the elections"}, "fullyImplemented": true, "id": 1118, "linearizedBaseContracts": [1118, 1974], "name": "Voting", "nameLocation": "456:6:5", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 384, "mutability": "constant", "name": "ELECTION_WINNERS_LENGTH", "nameLocation": "496:23:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "479:44:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 382, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "479:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "33", "id": 383, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "522:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "visibility": "internal"}, {"constant": true, "id": 387, "mutability": "constant", "name": "REGISTRATION_AMOUNT", "nameLocation": "546:19:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "529:40:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "529:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31", "id": 386, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "568:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "visibility": "internal"}, {"id": 390, "libraryName": {"id": 388, "name": "SafeMath", "nodeType": "IdentifierPath", "referencedDeclaration": 1430, "src": "582:8:5"}, "nodeType": "UsingForDirective", "src": "576:27:5", "typeName": {"id": 389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "595:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"canonicalName": "Voting.Candidate", "id": 399, "members": [{"constant": false, "id": 392, "mutability": "mutable", "name": "name", "nameLocation": "643:4:5", "nodeType": "VariableDeclaration", "scope": 399, "src": "636:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 391, "name": "string", "nodeType": "ElementaryTypeName", "src": "636:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 394, "mutability": "mutable", "name": "age", "nameLocation": "663:3:5", "nodeType": "VariableDeclaration", "scope": 399, "src": "657:9:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 393, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "657:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 396, "mutability": "mutable", "name": "cult", "nameLocation": "683:4:5", "nodeType": "VariableDeclaration", "scope": 399, "src": "676:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 395, "name": "string", "nodeType": "ElementaryTypeName", "src": "676:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 398, "mutability": "mutable", "name": "votes", "nameLocation": "705:5:5", "nodeType": "VariableDeclaration", "scope": 399, "src": "697:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 397, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "697:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Candidate", "nameLocation": "616:9:5", "nodeType": "StructDefinition", "scope": 1118, "src": "609:108:5", "visibility": "public"}, {"canonicalName": "Voting.Vote", "id": 406, "members": [{"constant": false, "id": 401, "mutability": "mutable", "name": "candidateId", "nameLocation": "753:11:5", "nodeType": "VariableDeclaration", "scope": 406, "src": "745:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "745:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 403, "mutability": "mutable", "name": "amount", "nameLocation": "782:6:5", "nodeType": "VariableDeclaration", "scope": 406, "src": "774:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 402, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "774:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 405, "mutability": "mutable", "name": "hasVoted", "nameLocation": "803:8:5", "nodeType": "VariableDeclaration", "scope": 406, "src": "798:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 404, "name": "bool", "nodeType": "ElementaryTypeName", "src": "798:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "Vote", "nameLocation": "730:4:5", "nodeType": "StructDefinition", "scope": 1118, "src": "723:95:5", "visibility": "public"}, {"constant": false, "id": 408, "mutability": "mutable", "name": "king", "nameLocation": "832:4:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "824:12:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 407, "name": "address", "nodeType": "ElementaryTypeName", "src": "824:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 411, "mutability": "mutable", "name": "wakandaToken", "nameLocation": "849:12:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "843:18:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}, "typeName": {"id": 410, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 409, "name": "Token", "nodeType": "IdentifierPath", "referencedDeclaration": 371, "src": "843:5:5"}, "referencedDeclaration": 371, "src": "843:5:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}}, "visibility": "internal"}, {"constant": false, "id": 415, "mutability": "mutable", "name": "isRegistered", "nameLocation": "894:12:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "868:38:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 414, "keyType": {"id": 412, "name": "address", "nodeType": "ElementaryTypeName", "src": "877:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "868:25:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 413, "name": "bool", "nodeType": "ElementaryTypeName", "src": "888:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "internal"}, {"constant": false, "id": 419, "mutability": "mutable", "name": "nonces", "nameLocation": "941:6:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "912:35:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 418, "keyType": {"id": 416, "name": "address", "nodeType": "ElementaryTypeName", "src": "921:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "912:28:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 417, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "932:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "internal"}, {"constant": false, "id": 424, "mutability": "mutable", "name": "votes", "nameLocation": "979:5:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "953:31:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote)"}, "typeName": {"id": 423, "keyType": {"id": 420, "name": "address", "nodeType": "ElementaryTypeName", "src": "962:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "953:25:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote)"}, "valueType": {"id": 422, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 421, "name": "Vote", "nodeType": "IdentifierPath", "referencedDeclaration": 406, "src": "973:4:5"}, "referencedDeclaration": 406, "src": "973:4:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage_ptr", "typeString": "struct Voting.Vote"}}}, "visibility": "internal"}, {"constant": false, "id": 428, "mutability": "mutable", "name": "candidates", "nameLocation": "1003:10:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "991:22:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate[]"}, "typeName": {"baseType": {"id": 426, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 425, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 399, "src": "991:9:5"}, "referencedDeclaration": 399, "src": "991:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage_ptr", "typeString": "struct Voting.Candidate"}}, "id": 427, "nodeType": "ArrayTypeName", "src": "991:11:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr", "typeString": "struct Voting.Candidate[]"}}, "visibility": "internal"}, {"constant": false, "id": 431, "mutability": "mutable", "name": "electionWinners", "nameLocation": "1030:15:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "1020:25:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 429, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1020:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 430, "nodeType": "ArrayTypeName", "src": "1020:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"anonymous": false, "id": 436, "name": "NewChallenger", "nameLocation": "1057:13:5", "nodeType": "EventDefinition", "parameters": {"id": 435, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 434, "indexed": false, "mutability": "mutable", "name": "challenger", "nameLocation": "1081:10:5", "nodeType": "VariableDeclaration", "scope": 436, "src": "1071:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_memory_ptr", "typeString": "struct Voting.Candidate"}, "typeName": {"id": 433, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 432, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 399, "src": "1071:9:5"}, "referencedDeclaration": 399, "src": "1071:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage_ptr", "typeString": "struct Voting.Candidate"}}, "visibility": "internal"}], "src": "1070:22:5"}, "src": "1051:42:5"}, {"constant": false, "id": 438, "mutability": "mutable", "name": "hasEnded", "nameLocation": "1104:8:5", "nodeType": "VariableDeclaration", "scope": 1118, "src": "1099:13:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 437, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1099:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"body": {"id": 475, "nodeType": "Block", "src": "1318:164:5", "statements": [{"expression": {"id": 461, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 458, "name": "king", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "1329:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 459, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1336:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1336:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1329:17:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 462, "nodeType": "ExpressionStatement", "src": "1329:17:5"}, {"expression": {"arguments": [{"id": 464, "name": "_candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 445, "src": "1372:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, {"id": 465, "name": "_candidateAges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 448, "src": "1389:14:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}}, {"id": 466, "name": "_candidateCults", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 451, "src": "1405:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}, {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}, {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}], "id": 463, "name": "_addCandidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "1357:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (string memory[] memory,uint8[] memory,string memory[] memory)"}}, "id": 467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1357:64:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 468, "nodeType": "ExpressionStatement", "src": "1357:64:5"}, {"expression": {"id": 473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 469, "name": "wakandaToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 411, "src": "1432:12:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 471, "name": "_wakandaTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 442, "src": "1453:20:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 470, "name": "Token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 371, "src": "1447:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Token_$371_$", "typeString": "type(contract Token)"}}, "id": 472, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1447:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}}, "src": "1432:42:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}}, "id": 474, "nodeType": "ExpressionStatement", "src": "1432:42:5"}]}, "id": 476, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 454, "name": "_electionName", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "1294:13:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"hexValue": "312e302e30", "id": 455, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1309:7:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c", "typeString": "literal_string \"1.0.0\""}, "value": "1.0.0"}], "id": 456, "kind": "baseConstructorSpecifier", "modifierName": {"id": 453, "name": "EIP712", "nodeType": "IdentifierPath", "referencedDeclaration": 1974, "src": "1287:6:5"}, "nodeType": "ModifierInvocation", "src": "1287:30:5"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 452, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 440, "mutability": "mutable", "name": "_electionName", "nameLocation": "1145:13:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "1131:27:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 439, "name": "string", "nodeType": "ElementaryTypeName", "src": "1131:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 442, "mutability": "mutable", "name": "_wakandaTokenAddress", "nameLocation": "1168:20:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "1160:28:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 441, "name": "address", "nodeType": "ElementaryTypeName", "src": "1160:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 445, "mutability": "mutable", "name": "_candidateNames", "nameLocation": "1206:15:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "1190:31:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 443, "name": "string", "nodeType": "ElementaryTypeName", "src": "1190:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 444, "nodeType": "ArrayTypeName", "src": "1190:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}, {"constant": false, "id": 448, "mutability": "mutable", "name": "_candidateAges", "nameLocation": "1238:14:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "1223:29:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[]"}, "typeName": {"baseType": {"id": 446, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "1223:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 447, "nodeType": "ArrayTypeName", "src": "1223:7:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr", "typeString": "uint8[]"}}, "visibility": "internal"}, {"constant": false, "id": 451, "mutability": "mutable", "name": "_candidateCults", "nameLocation": "1270:15:5", "nodeType": "VariableDeclaration", "scope": 476, "src": "1254:31:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 449, "name": "string", "nodeType": "ElementaryTypeName", "src": "1254:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 450, "nodeType": "ArrayTypeName", "src": "1254:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}], "src": "1130:156:5"}, "returnParameters": {"id": 457, "nodeType": "ParameterList", "parameters": [], "src": "1318:0:5"}, "scope": 1118, "src": "1119:363:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 496, "nodeType": "Block", "src": "1658:137:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 483, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1685:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1685:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 485, "name": "king", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "1699:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1685:18:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79204b494e472063616e20656e642074686520656c656374696f6e2e", "id": 487, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1705:33:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a1b605d168fe5784a734412dcb52e0d48f9d8632eac7605d6d7e8c88947b8561", "typeString": "literal_string \"Only KING can end the election.\""}, "value": "Only KING can end the election."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a1b605d168fe5784a734412dcb52e0d48f9d8632eac7605d6d7e8c88947b8561", "typeString": "literal_string \"Only KING can end the election.\""}], "id": 482, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1677:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 488, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1677:62:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 489, "nodeType": "ExpressionStatement", "src": "1677:62:5"}, {"expression": {"id": 492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 490, "name": "hasEnded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "1750:8:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 491, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1761:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1750:15:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 493, "nodeType": "ExpressionStatement", "src": "1750:15:5"}, {"expression": {"hexValue": "74727565", "id": 494, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1783:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 481, "id": 495, "nodeType": "Return", "src": "1776:11:5"}]}, "documentation": {"id": 477, "nodeType": "StructuredDocumentation", "src": "1488:117:5", "text": "@notice Ends the election - there is no voting after\n@return Boolean : True if successful"}, "functionSelector": "7107852a", "id": 497, "implemented": true, "kind": "function", "modifiers": [], "name": "endTheElection", "nameLocation": "1619:14:5", "nodeType": "FunctionDefinition", "parameters": {"id": 478, "nodeType": "ParameterList", "parameters": [], "src": "1633:2:5"}, "returnParameters": {"id": 481, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 480, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 497, "src": "1652:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 479, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1652:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1651:6:5"}, "scope": 1118, "src": "1610:185:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 529, "nodeType": "Block", "src": "2044:278:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 506, "name": "isRegistered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 415, "src": "2071:12:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 508, "indexExpression": {"id": 507, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "2084:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2071:22:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "74727565", "id": 509, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2097:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2071:30:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520636974697a656e20686173206265656e2072656769737465726564202d20746865726520617265206e6f206d756c7469706c6520726567697374726174696f6e732e", "id": 511, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2103:72:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a70c582a78fbd2cd7b93c04f3d3b505e997d06391caf7e37fb55139c032d1a9d", "typeString": "literal_string \"The citizen has been registered - there are no multiple registrations.\""}, "value": "The citizen has been registered - there are no multiple registrations."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a70c582a78fbd2cd7b93c04f3d3b505e997d06391caf7e37fb55139c032d1a9d", "typeString": "literal_string \"The citizen has been registered - there are no multiple registrations.\""}], "id": 505, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2063:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 512, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2063:113:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 513, "nodeType": "ExpressionStatement", "src": "2063:113:5"}, {"expression": {"arguments": [{"id": 517, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "2223:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 518, "name": "REGISTRATION_AMOUNT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 387, "src": "2233:19:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 514, "name": "wakandaToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 411, "src": "2187:12:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}}, "id": 516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "usingRegistrationRight", "nodeType": "MemberAccess", "referencedDeclaration": 163, "src": "2187:35:5", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2187:66:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 520, "nodeType": "ExpressionStatement", "src": "2187:66:5"}, {"expression": {"id": 525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 521, "name": "isRegistered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 415, "src": "2263:12:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 523, "indexExpression": {"id": 522, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "2276:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2263:22:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 524, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2288:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2263:29:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 526, "nodeType": "ExpressionStatement", "src": "2263:29:5"}, {"expression": {"hexValue": "74727565", "id": 527, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2310:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 504, "id": 528, "nodeType": "Return", "src": "2303:11:5"}]}, "documentation": {"id": 498, "nodeType": "StructuredDocumentation", "src": "1801:180:5", "text": "@notice Registers the _citizen to be able to participate in the elections\n@param _citizen Citizen's address\n@return Boolean : True if successful"}, "functionSelector": "4420e486", "id": 530, "implemented": true, "kind": "function", "modifiers": [], "name": "register", "nameLocation": "1995:8:5", "nodeType": "FunctionDefinition", "parameters": {"id": 501, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 500, "mutability": "mutable", "name": "_citizen", "nameLocation": "2012:8:5", "nodeType": "VariableDeclaration", "scope": 530, "src": "2004:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 499, "name": "address", "nodeType": "ElementaryTypeName", "src": "2004:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2003:18:5"}, "returnParameters": {"id": 504, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 503, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 530, "src": "2038:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 502, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2038:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2037:6:5"}, "scope": 1118, "src": "1986:336:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 542, "nodeType": "Block", "src": "2597:55:5", "statements": [{"expression": {"baseExpression": {"id": 538, "name": "isRegistered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 415, "src": "2615:12:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 540, "indexExpression": {"id": 539, "name": "_citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 533, "src": "2628:15:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2615:29:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 537, "id": 541, "nodeType": "Return", "src": "2608:36:5"}]}, "documentation": {"id": 531, "nodeType": "StructuredDocumentation", "src": "2328:183:5", "text": "@notice Returns the registration status of _citizenAddress\n@param _citizenAddress Citizen's address\n@return Boolean : True if citizen is registered"}, "functionSelector": "0cf2ee64", "id": 543, "implemented": true, "kind": "function", "modifiers": [], "name": "citizenIsRegistered", "nameLocation": "2525:19:5", "nodeType": "FunctionDefinition", "parameters": {"id": 534, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 533, "mutability": "mutable", "name": "_citizenAddress", "nameLocation": "2553:15:5", "nodeType": "VariableDeclaration", "scope": 543, "src": "2545:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 532, "name": "address", "nodeType": "ElementaryTypeName", "src": "2545:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2544:25:5"}, "returnParameters": {"id": 537, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 536, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 543, "src": "2591:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 535, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2591:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2590:6:5"}, "scope": 1118, "src": "2516:136:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 558, "nodeType": "Block", "src": "2905:59:5", "statements": [{"expression": {"arguments": [{"expression": {"id": 552, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2922:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2922:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 554, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 546, "src": "2934:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 555, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 548, "src": "2948:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 551, "name": "_vote", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 943, "src": "2916:5:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2916:40:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 557, "nodeType": "ExpressionStatement", "src": "2916:40:5"}]}, "documentation": {"id": 544, "nodeType": "StructuredDocumentation", "src": "2658:182:5", "text": "@notice Voting function - casts a vote from msg.sender\n@param _candidateId Candidate ID\n@param _amount Amount of WKND tokens to be used for voting"}, "functionSelector": "b384abef", "id": 559, "implemented": true, "kind": "function", "modifiers": [], "name": "vote", "nameLocation": "2854:4:5", "nodeType": "FunctionDefinition", "parameters": {"id": 549, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 546, "mutability": "mutable", "name": "_candidateId", "nameLocation": "2867:12:5", "nodeType": "VariableDeclaration", "scope": 559, "src": "2859:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 545, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2859:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 548, "mutability": "mutable", "name": "_amount", "nameLocation": "2889:7:5", "nodeType": "VariableDeclaration", "scope": 559, "src": "2881:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 547, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2881:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2858:39:5"}, "returnParameters": {"id": 550, "nodeType": "ParameterList", "parameters": [], "src": "2905:0:5"}, "scope": 1118, "src": "2845:119:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 572, "nodeType": "Block", "src": "3212:56:5", "statements": [{"expression": {"baseExpression": {"id": 568, "name": "votes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "3230:5:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote storage ref)"}}, "id": 570, "indexExpression": {"id": 569, "name": "_citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 562, "src": "3236:15:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3230:22:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage", "typeString": "struct Voting.Vote storage ref"}}, "functionReturnParameters": 567, "id": 571, "nodeType": "Return", "src": "3223:29:5"}]}, "documentation": {"id": 560, "nodeType": "StructuredDocumentation", "src": "2970:153:5", "text": "@notice Returns the voting status of _citizenAddress\n@param _citizenAddress Citizen's address\n@return The Vote struct"}, "functionSelector": "30226efe", "id": 573, "implemented": true, "kind": "function", "modifiers": [], "name": "citizenHasVoted", "nameLocation": "3137:15:5", "nodeType": "FunctionDefinition", "parameters": {"id": 563, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 562, "mutability": "mutable", "name": "_citizenAddress", "nameLocation": "3161:15:5", "nodeType": "VariableDeclaration", "scope": 573, "src": "3153:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 561, "name": "address", "nodeType": "ElementaryTypeName", "src": "3153:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3152:25:5"}, "returnParameters": {"id": 567, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 566, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 573, "src": "3199:11:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_memory_ptr", "typeString": "struct Voting.Vote"}, "typeName": {"id": 565, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 564, "name": "Vote", "nodeType": "IdentifierPath", "referencedDeclaration": 406, "src": "3199:4:5"}, "referencedDeclaration": 406, "src": "3199:4:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage_ptr", "typeString": "struct Voting.Vote"}}, "visibility": "internal"}], "src": "3198:13:5"}, "scope": 1118, "src": "3128:140:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 618, "nodeType": "Block", "src": "3479:227:5", "statements": [{"assignments": [585], "declarations": [{"constant": false, "id": 585, "mutability": "mutable", "name": "winners", "nameLocation": "3513:7:5", "nodeType": "VariableDeclaration", "scope": 618, "src": "3494:26:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr", "typeString": "struct Voting.Candidate[]"}, "typeName": {"baseType": {"id": 583, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 582, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 399, "src": "3494:9:5"}, "referencedDeclaration": 399, "src": "3494:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage_ptr", "typeString": "struct Voting.Candidate"}}, "id": 584, "nodeType": "ArrayTypeName", "src": "3494:11:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr", "typeString": "struct Voting.Candidate[]"}}, "visibility": "internal"}], "id": 593, "initialValue": {"arguments": [{"expression": {"id": 590, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "3539:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 591, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3539:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 589, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "3523:15:5", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct Voting.Candidate memory[] memory)"}, "typeName": {"baseType": {"id": 587, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 586, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 399, "src": "3527:9:5"}, "referencedDeclaration": 399, "src": "3527:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage_ptr", "typeString": "struct Voting.Candidate"}}, "id": 588, "nodeType": "ArrayTypeName", "src": "3527:11:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr", "typeString": "struct Voting.Candidate[]"}}}, "id": 592, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3523:39:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr", "typeString": "struct Voting.Candidate memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3494:68:5"}, {"body": {"expression": {"id": 613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 605, "name": "winners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 585, "src": "3623:7:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr", "typeString": "struct Voting.Candidate memory[] memory"}}, "id": 607, "indexExpression": {"id": 606, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 595, "src": "3631:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3623:10:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_memory_ptr", "typeString": "struct Voting.Candidate memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 608, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "3636:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 612, "indexExpression": {"baseExpression": {"id": 609, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "3647:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 611, "indexExpression": {"id": 610, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 595, "src": "3663:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3647:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3636:30:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "src": "3623:43:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_memory_ptr", "typeString": "struct Voting.Candidate memory"}}, "id": 614, "nodeType": "ExpressionStatement", "src": "3623:43:5"}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 601, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 598, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 595, "src": "3590:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 599, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "3594:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3594:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3590:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 615, "initializationExpression": {"assignments": [595], "declarations": [{"constant": false, "id": 595, "mutability": "mutable", "name": "i", "nameLocation": "3583:1:5", "nodeType": "VariableDeclaration", "scope": 615, "src": "3577:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 594, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "3577:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 597, "initialValue": {"hexValue": "30", "id": 596, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3587:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3577:11:5"}, "loopExpression": {"expression": {"id": 603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "3618:3:5", "subExpression": {"id": 602, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 595, "src": "3620:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 604, "nodeType": "ExpressionStatement", "src": "3618:3:5"}, "nodeType": "ForStatement", "src": "3572:94:5"}, {"expression": {"id": 616, "name": "winners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 585, "src": "3683:7:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr", "typeString": "struct Voting.Candidate memory[] memory"}}, "functionReturnParameters": 580, "id": 617, "nodeType": "Return", "src": "3676:14:5"}]}, "documentation": {"id": 574, "nodeType": "StructuredDocumentation", "src": "3274:131:5", "text": "@notice Returns the Election's top 3 candidates (winning candidates)\n@return An array of top candidates"}, "functionSelector": "377968d4", "id": 619, "implemented": true, "kind": "function", "modifiers": [], "name": "winningCandidates", "nameLocation": "3419:17:5", "nodeType": "FunctionDefinition", "parameters": {"id": 575, "nodeType": "ParameterList", "parameters": [], "src": "3436:2:5"}, "returnParameters": {"id": 580, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 579, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 619, "src": "3460:18:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr", "typeString": "struct Voting.Candidate[]"}, "typeName": {"baseType": {"id": 577, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 576, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 399, "src": "3460:9:5"}, "referencedDeclaration": 399, "src": "3460:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage_ptr", "typeString": "struct Voting.Candidate"}}, "id": 578, "nodeType": "ArrayTypeName", "src": "3460:11:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr", "typeString": "struct Voting.Candidate[]"}}, "visibility": "internal"}], "src": "3459:20:5"}, "scope": 1118, "src": "3410:296:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 629, "nodeType": "Block", "src": "3895:36:5", "statements": [{"expression": {"id": 627, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "3913:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "functionReturnParameters": 626, "id": 628, "nodeType": "Return", "src": "3906:17:5"}]}, "documentation": {"id": 620, "nodeType": "StructuredDocumentation", "src": "3712:109:5", "text": "@notice Returns an array of all candidates involved in the election\n@return Array"}, "functionSelector": "de90bb6f", "id": 630, "implemented": true, "kind": "function", "modifiers": [], "name": "seeAllCandidates", "nameLocation": "3835:16:5", "nodeType": "FunctionDefinition", "parameters": {"id": 621, "nodeType": "ParameterList", "parameters": [], "src": "3851:2:5"}, "returnParameters": {"id": 626, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 625, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 630, "src": "3875:18:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_memory_ptr_$dyn_memory_ptr", "typeString": "struct Voting.Candidate[]"}, "typeName": {"baseType": {"id": 623, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 622, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 399, "src": "3875:9:5"}, "referencedDeclaration": 399, "src": "3875:9:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage_ptr", "typeString": "struct Voting.Candidate"}}, "id": 624, "nodeType": "ArrayTypeName", "src": "3875:11:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr", "typeString": "struct Voting.Candidate[]"}}, "visibility": "internal"}], "src": "3874:20:5"}, "scope": 1118, "src": "3826:105:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 642, "nodeType": "Block", "src": "4158:56:5", "statements": [{"expression": {"baseExpression": {"id": 638, "name": "nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 419, "src": "4176:6:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 640, "indexExpression": {"id": 639, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "4183:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4176:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 637, "id": 641, "nodeType": "Return", "src": "4169:29:5"}]}, "documentation": {"id": 631, "nodeType": "StructuredDocumentation", "src": "3937:145:5", "text": "@notice Returns a nonce fo the specified citizenAddress\n@param citizenAddress Citizen's address\n@return Nonce"}, "functionSelector": "2d0335ab", "id": 643, "implemented": true, "kind": "function", "modifiers": [], "name": "getNonce", "nameLocation": "4096:8:5", "nodeType": "FunctionDefinition", "parameters": {"id": 634, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 633, "mutability": "mutable", "name": "citizenAddress", "nameLocation": "4113:14:5", "nodeType": "VariableDeclaration", "scope": 643, "src": "4105:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 632, "name": "address", "nodeType": "ElementaryTypeName", "src": "4105:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4104:24:5"}, "returnParameters": {"id": 637, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 636, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 643, "src": "4150:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 635, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4150:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4149:9:5"}, "scope": 1118, "src": "4087:127:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 676, "nodeType": "Block", "src": "4605:423:5", "statements": [{"assignments": [656], "declarations": [{"constant": false, "id": 656, "mutability": "mutable", "name": "nonce", "nameLocation": "4624:5:5", "nodeType": "VariableDeclaration", "scope": 676, "src": "4616:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 655, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4616:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 660, "initialValue": {"baseExpression": {"id": 657, "name": "nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 419, "src": "4632:6:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 659, "indexExpression": {"id": 658, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "4639:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4632:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4616:38:5"}, {"expression": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"hexValue": "766f7465286164647265737320636974697a656e416464726573732c75696e743235362063616e64696461746549642c75696e7432353620616d6f756e742c75696e74323536206e6f6e636529", "id": 666, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4775:79:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a56f781f7251d29fca13933d69c34316ea277f967c4a968f77db62d983fe1120", "typeString": "literal_string \"vote(address citizenAddress,uint256 candidateId,uint256 amount,uint256 nonce)\""}, "value": "vote(address citizenAddress,uint256 candidateId,uint256 amount,uint256 nonce)"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_a56f781f7251d29fca13933d69c34316ea277f967c4a968f77db62d983fe1120", "typeString": "literal_string \"vote(address citizenAddress,uint256 candidateId,uint256 amount,uint256 nonce)\""}], "id": 665, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "4765:9:5", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 667, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4765:90:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 668, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "4877:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 669, "name": "candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 648, "src": "4913:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 670, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 650, "src": "4946:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 671, "name": "nonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 656, "src": "4974:5:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 663, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "4729:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 664, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "4729:10:5", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 672, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4729:268:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 662, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "4702:9:5", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 673, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4702:309:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 661, "name": "_hashTypedDataV4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1973, "src": "4672:16:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$", "typeString": "function (bytes32) view returns (bytes32)"}}, "id": 674, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4672:349:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 654, "id": 675, "nodeType": "Return", "src": "4665:356:5"}]}, "documentation": {"id": 644, "nodeType": "StructuredDocumentation", "src": "4220:271:5", "text": "@notice Returns a digest that will be used in verification of a signature\n@param citizenAddress Citizen's address\n@param candidateId Candidate's ID\n@param amount Amount of WKND tokens to be used in voting\n@return Digest"}, "functionSelector": "b8d06bc4", "id": 677, "implemented": true, "kind": "function", "modifiers": [], "name": "getDigest", "nameLocation": "4505:9:5", "nodeType": "FunctionDefinition", "parameters": {"id": 651, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 646, "mutability": "mutable", "name": "citizenAddress", "nameLocation": "4523:14:5", "nodeType": "VariableDeclaration", "scope": 677, "src": "4515:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 645, "name": "address", "nodeType": "ElementaryTypeName", "src": "4515:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 648, "mutability": "mutable", "name": "candidateId", "nameLocation": "4547:11:5", "nodeType": "VariableDeclaration", "scope": 677, "src": "4539:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 647, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4539:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 650, "mutability": "mutable", "name": "amount", "nameLocation": "4568:6:5", "nodeType": "VariableDeclaration", "scope": 677, "src": "4560:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 649, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4560:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4514:61:5"}, "returnParameters": {"id": 654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 653, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 677, "src": "4597:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 652, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4597:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "4596:9:5"}, "scope": 1118, "src": "4496:532:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 693, "nodeType": "Block", "src": "5301:57:5", "statements": [{"expression": {"arguments": [{"id": 689, "name": "digest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 680, "src": "5333:6:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 690, "name": "signature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 682, "src": "5341:9:5", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "expression": {"id": 687, "name": "ECDSA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1820, "src": "5319:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ECDSA_$1820_$", "typeString": "type(library ECDSA)"}}, "id": 688, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "recover", "nodeType": "MemberAccess", "referencedDeclaration": 1586, "src": "5319:13:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes memory) pure returns (address)"}}, "id": 691, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5319:32:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 686, "id": 692, "nodeType": "Return", "src": "5311:40:5"}]}, "documentation": {"id": 678, "nodeType": "StructuredDocumentation", "src": "5038:168:5", "text": "@notice Return the signer of a message\n@param digest Digested message\n@param signature Singature\n@return Signer of a message"}, "functionSelector": "f7b2ec0d", "id": 694, "implemented": true, "kind": "function", "modifiers": [], "name": "getSigner", "nameLocation": "5220:9:5", "nodeType": "FunctionDefinition", "parameters": {"id": 683, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 680, "mutability": "mutable", "name": "digest", "nameLocation": "5238:6:5", "nodeType": "VariableDeclaration", "scope": 694, "src": "5230:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 679, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5230:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 682, "mutability": "mutable", "name": "signature", "nameLocation": "5261:9:5", "nodeType": "VariableDeclaration", "scope": 694, "src": "5246:24:5", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 681, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5246:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5229:42:5"}, "returnParameters": {"id": 686, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 685, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 694, "src": "5293:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 684, "name": "address", "nodeType": "ElementaryTypeName", "src": "5293:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5292:9:5"}, "scope": 1118, "src": "5211:147:5", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"body": {"id": 749, "nodeType": "Block", "src": "5768:373:5", "statements": [{"assignments": [707], "declarations": [{"constant": false, "id": 707, "mutability": "mutable", "name": "digest", "nameLocation": "5787:6:5", "nodeType": "VariableDeclaration", "scope": 749, "src": "5779:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 706, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5779:7:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 713, "initialValue": {"arguments": [{"id": 709, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "5806:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 710, "name": "candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 701, "src": "5822:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 711, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 703, "src": "5835:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 708, "name": "getDigest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 677, "src": "5796:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (address,uint256,uint256) view returns (bytes32)"}}, "id": 712, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5796:46:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5779:63:5"}, {"assignments": [715], "declarations": [{"constant": false, "id": 715, "mutability": "mutable", "name": "signer", "nameLocation": "5860:6:5", "nodeType": "VariableDeclaration", "scope": 749, "src": "5852:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 714, "name": "address", "nodeType": "ElementaryTypeName", "src": "5852:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 720, "initialValue": {"arguments": [{"id": 717, "name": "digest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 707, "src": "5879:6:5", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 718, "name": "signature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 697, "src": "5887:9:5", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}], "id": 716, "name": "getSigner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 694, "src": "5869:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$", "typeString": "function (bytes32,bytes calldata) pure returns (address)"}}, "id": 719, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5869:28:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "5852:45:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 724, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 722, "name": "signer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 715, "src": "5915:6:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 723, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "5925:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5915:24:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "46756e6374696f6e2060766f746560203a20696e76616c6964207369676e6174757265", "id": 725, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5941:37:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8711b25749807eaf13485e927437cc7a837800fd2aa545eb533bac6c8053c7f9", "typeString": "literal_string \"Function `vote` : invalid signature\""}, "value": "Function `vote` : invalid signature"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8711b25749807eaf13485e927437cc7a837800fd2aa545eb533bac6c8053c7f9", "typeString": "literal_string \"Function `vote` : invalid signature\""}], "id": 721, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5907:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 726, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5907:72:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 727, "nodeType": "ExpressionStatement", "src": "5907:72:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 729, "name": "signer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 715, "src": "5997:6:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 732, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6015:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 731, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6007:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 730, "name": "address", "nodeType": "ElementaryTypeName", "src": "6007:7:5", "typeDescriptions": {}}}, "id": 733, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6007:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5997:20:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45434453413a20696e76616c6964207369676e6174757265", "id": 735, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6019:26:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be", "typeString": "literal_string \"ECDSA: invalid signature\""}, "value": "ECDSA: invalid signature"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be", "typeString": "literal_string \"ECDSA: invalid signature\""}], "id": 728, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5989:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5989:57:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 737, "nodeType": "ExpressionStatement", "src": "5989:57:5"}, {"expression": {"arguments": [{"id": 739, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "6063:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 740, "name": "candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 701, "src": "6079:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 741, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 703, "src": "6092:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 738, "name": "_vote", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 943, "src": "6057:5:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 742, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6057:42:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 743, "nodeType": "ExpressionStatement", "src": "6057:42:5"}, {"expression": {"id": 747, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6110:24:5", "subExpression": {"baseExpression": {"id": 744, "name": "nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 419, "src": "6110:6:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 746, "indexExpression": {"id": 745, "name": "citizenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "6117:14:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6110:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 748, "nodeType": "ExpressionStatement", "src": "6110:24:5"}]}, "documentation": {"id": 695, "nodeType": "StructuredDocumentation", "src": "5364:282:5", "text": "@notice Used for delegating a vote - can be called by anyone having a signature and rest of the information\n@param citizenAddress Citizen's address\n@param candidateId Candidate's ID\n@param amount Amount of WKND tokens to be used in voting"}, "functionSelector": "1565507e", "id": 750, "implemented": true, "kind": "function", "modifiers": [], "name": "delegatedVote", "nameLocation": "5660:13:5", "nodeType": "FunctionDefinition", "parameters": {"id": 704, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 697, "mutability": "mutable", "name": "signature", "nameLocation": "5689:9:5", "nodeType": "VariableDeclaration", "scope": 750, "src": "5674:24:5", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 696, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5674:5:5", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 699, "mutability": "mutable", "name": "citizenAddress", "nameLocation": "5708:14:5", "nodeType": "VariableDeclaration", "scope": 750, "src": "5700:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 698, "name": "address", "nodeType": "ElementaryTypeName", "src": "5700:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 701, "mutability": "mutable", "name": "candidateId", "nameLocation": "5732:11:5", "nodeType": "VariableDeclaration", "scope": 750, "src": "5724:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 700, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5724:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 703, "mutability": "mutable", "name": "amount", "nameLocation": "5753:6:5", "nodeType": "VariableDeclaration", "scope": 750, "src": "5745:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 702, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5745:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5673:87:5"}, "returnParameters": {"id": 705, "nodeType": "ParameterList", "parameters": [], "src": "5768:0:5"}, "scope": 1118, "src": "5651:490:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 819, "nodeType": "Block", "src": "6501:516:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 764, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6520:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 765, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6520:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 766, "name": "king", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "6534:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6520:18:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79204b494e472063616e2073746172742061206e657720656c656374696f6e2021", "id": 768, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6540:38:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e2bbc0c540e35d2566966c68bdc14f2b0ea7877499b24cb475aa9e7823d9776e", "typeString": "literal_string \"Only KING can start a new election !\""}, "value": "Only KING can start a new election !"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e2bbc0c540e35d2566966c68bdc14f2b0ea7877499b24cb475aa9e7823d9776e", "typeString": "literal_string \"Only KING can start a new election !\""}], "id": 763, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6512:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 769, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6512:67:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 770, "nodeType": "ExpressionStatement", "src": "6512:67:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 772, "name": "_candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 754, "src": "6597:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6597:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 774, "name": "_candidateAges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 757, "src": "6623:14:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}}, "id": 775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6623:21:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6597:47:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4c656e677468206d69736d61746368202d2063616e646964617465206e616d657320616e6420616765732021", "id": 777, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6646:46:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0e57b89fae90a09a0f43ad601610a3813ba7fa907ec273104fc3cbb663bfc677", "typeString": "literal_string \"Length mismatch - candidate names and ages !\""}, "value": "Length mismatch - candidate names and ages !"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0e57b89fae90a09a0f43ad601610a3813ba7fa907ec273104fc3cbb663bfc677", "typeString": "literal_string \"Length mismatch - candidate names and ages !\""}], "id": 771, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6589:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 778, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6589:104:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 779, "nodeType": "ExpressionStatement", "src": "6589:104:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 781, "name": "_candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 754, "src": "6711:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6711:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 783, "name": "_candidateCults", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "6737:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 784, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6737:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6711:48:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4c656e677468206d69736d61746368202d2063616e646964617465206e616d657320616e6420616765732021", "id": 786, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6761:46:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0e57b89fae90a09a0f43ad601610a3813ba7fa907ec273104fc3cbb663bfc677", "typeString": "literal_string \"Length mismatch - candidate names and ages !\""}, "value": "Length mismatch - candidate names and ages !"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0e57b89fae90a09a0f43ad601610a3813ba7fa907ec273104fc3cbb663bfc677", "typeString": "literal_string \"Length mismatch - candidate names and ages !\""}], "id": 780, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6703:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 787, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6703:105:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 788, "nodeType": "ExpressionStatement", "src": "6703:105:5"}, {"body": {"id": 817, "nodeType": "Block", "src": "6871:139:5", "statements": [{"expression": {"arguments": [{"arguments": [{"baseExpression": {"id": 804, "name": "_candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 754, "src": "6918:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 806, "indexExpression": {"id": 805, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 790, "src": "6934:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6918:18:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"baseExpression": {"id": 807, "name": "_candidateAges", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 757, "src": "6943:14:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}}, "id": 809, "indexExpression": {"id": 808, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 790, "src": "6958:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6943:17:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"baseExpression": {"id": 810, "name": "_candidateCults", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "6968:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 812, "indexExpression": {"id": 811, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 790, "src": "6984:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6968:18:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"hexValue": "30", "id": 813, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6995:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 803, "name": "Candidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "6901:9:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Candidate_$399_storage_ptr_$", "typeString": "type(struct Voting.Candidate storage pointer)"}}, "id": 814, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["name", "age", "cult", "votes"], "nodeType": "FunctionCall", "src": "6901:97:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_memory_ptr", "typeString": "struct Voting.Candidate memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Candidate_$399_memory_ptr", "typeString": "struct Voting.Candidate memory"}], "expression": {"id": 800, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6885:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 802, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "6885:15:5", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$399_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$399_storage_$dyn_storage_ptr_$", "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"}}, "id": 815, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6885:114:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 816, "nodeType": "ExpressionStatement", "src": "6885:114:5"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 796, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 793, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 790, "src": "6838:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 794, "name": "_candidateNames", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 754, "src": "6842:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string memory[] memory"}}, "id": 795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6842:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6838:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 818, "initializationExpression": {"assignments": [790], "declarations": [{"constant": false, "id": 790, "mutability": "mutable", "name": "i", "nameLocation": "6831:1:5", "nodeType": "VariableDeclaration", "scope": 818, "src": "6823:9:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 789, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6823:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 792, "initialValue": {"hexValue": "30", "id": 791, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6835:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6823:13:5"}, "loopExpression": {"expression": {"id": 798, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "6866:3:5", "subExpression": {"id": 797, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 790, "src": "6868:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 799, "nodeType": "ExpressionStatement", "src": "6866:3:5"}, "nodeType": "ForStatement", "src": "6819:191:5"}]}, "documentation": {"id": 751, "nodeType": "StructuredDocumentation", "src": "6146:220:5", "text": "@notice When deployed, instantiates the candidate array\n@param _candidateNames Candidate's Names\n@param _candidateAges Candidate's Ages\n@param _candidateCults Candidate's Cults"}, "id": 820, "implemented": true, "kind": "function", "modifiers": [], "name": "_addCandidates", "nameLocation": "6380:14:5", "nodeType": "FunctionDefinition", "parameters": {"id": 761, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 754, "mutability": "mutable", "name": "_candidateNames", "nameLocation": "6411:15:5", "nodeType": "VariableDeclaration", "scope": 820, "src": "6395:31:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 752, "name": "string", "nodeType": "ElementaryTypeName", "src": "6395:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 753, "nodeType": "ArrayTypeName", "src": "6395:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}, {"constant": false, "id": 757, "mutability": "mutable", "name": "_candidateAges", "nameLocation": "6443:14:5", "nodeType": "VariableDeclaration", "scope": 820, "src": "6428:29:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[]"}, "typeName": {"baseType": {"id": 755, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "6428:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 756, "nodeType": "ArrayTypeName", "src": "6428:7:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr", "typeString": "uint8[]"}}, "visibility": "internal"}, {"constant": false, "id": 760, "mutability": "mutable", "name": "_candidateCults", "nameLocation": "6475:15:5", "nodeType": "VariableDeclaration", "scope": 820, "src": "6459:31:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr", "typeString": "string[]"}, "typeName": {"baseType": {"id": 758, "name": "string", "nodeType": "ElementaryTypeName", "src": "6459:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "id": 759, "nodeType": "ArrayTypeName", "src": "6459:8:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr", "typeString": "string[]"}}, "visibility": "internal"}], "src": "6394:97:5"}, "returnParameters": {"id": 762, "nodeType": "ParameterList", "parameters": [], "src": "6501:0:5"}, "scope": 1118, "src": "6371:646:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 942, "nodeType": "Block", "src": "7342:1377:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 833, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 831, "name": "hasEnded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 438, "src": "7361:8:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "74727565", "id": 832, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7373:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "7361:16:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "566f74696e6720666f72207468652063757272656e7420656c656374696f6e2068617320656e646564202e", "id": 834, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7379:45:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3b38f2d0ee3b3c03b5783b19b51bc382b201ed592c6ecd1628f202d590f82324", "typeString": "literal_string \"Voting for the current election has ended .\""}, "value": "Voting for the current election has ended ."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3b38f2d0ee3b3c03b5783b19b51bc382b201ed592c6ecd1628f202d590f82324", "typeString": "literal_string \"Voting for the current election has ended .\""}], "id": 830, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7353:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 835, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7353:72:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 836, "nodeType": "ExpressionStatement", "src": "7353:72:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 843, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 838, "name": "votes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "7443:5:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote storage ref)"}}, "id": 840, "indexExpression": {"id": 839, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 823, "src": "7449:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7443:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage", "typeString": "struct Voting.Vote storage ref"}}, "id": 841, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "hasVoted", "nodeType": "MemberAccess", "referencedDeclaration": 405, "src": "7443:24:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "74727565", "id": 842, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7471:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "7443:32:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520636974697a656e20616c726561647920766f74656420696e2074686520656c656374696f6e202e", "id": 844, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7477:45:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_10c8ad749e71a74f7e249efa3a99aa6c1544ab3da9d688f87f0b450ea1086bad", "typeString": "literal_string \"The citizen already voted in the election .\""}, "value": "The citizen already voted in the election ."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_10c8ad749e71a74f7e249efa3a99aa6c1544ab3da9d688f87f0b450ea1086bad", "typeString": "literal_string \"The citizen already voted in the election .\""}], "id": 837, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7435:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 845, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7435:88:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 846, "nodeType": "ExpressionStatement", "src": "7435:88:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 850, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 848, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "7541:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 849, "name": "REGISTRATION_AMOUNT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 387, "src": "7552:19:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7541:30:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520616d6f756e74206973206c6573736572207468616e2074686520524547495354524154494f4e20414d4f554e542e", "id": 851, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7573:52:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2e784848b4494ba2a850e33f095bc091633ac7bb6815ea49fbe7f24f7c206e6d", "typeString": "literal_string \"The amount is lesser than the REGISTRATION AMOUNT.\""}, "value": "The amount is lesser than the REGISTRATION AMOUNT."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2e784848b4494ba2a850e33f095bc091633ac7bb6815ea49fbe7f24f7c206e6d", "typeString": "literal_string \"The amount is lesser than the REGISTRATION AMOUNT.\""}], "id": 847, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7533:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 852, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7533:93:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 853, "nodeType": "ExpressionStatement", "src": "7533:93:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 855, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "7644:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 856, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7659:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 857, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7659:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7644:32:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652063616e6469646174652049442067726561746572207468616e20746865206e756d626572206f662063616e646964617465732021", "id": 859, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7678:58:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_003775ffdd551a9a5f6186f98d7cfca364359cfe38f14aebaa8b741cdf00be38", "typeString": "literal_string \"The candidate ID greater than the number of candidates !\""}, "value": "The candidate ID greater than the number of candidates !"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_003775ffdd551a9a5f6186f98d7cfca364359cfe38f14aebaa8b741cdf00be38", "typeString": "literal_string \"The candidate ID greater than the number of candidates !\""}], "id": 854, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7636:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 860, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7636:101:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 861, "nodeType": "ExpressionStatement", "src": "7636:101:5"}, {"expression": {"arguments": [{"id": 865, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 823, "src": "7778:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 866, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "7788:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 862, "name": "wakandaToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 411, "src": "7748:12:5", "typeDescriptions": {"typeIdentifier": "t_contract$_Token_$371", "typeString": "contract Token"}}, "id": 864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "usingVotingRight", "nodeType": "MemberAccess", "referencedDeclaration": 193, "src": "7748:29:5", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 867, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7748:48:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 868, "nodeType": "ExpressionStatement", "src": "7748:48:5"}, {"expression": {"id": 880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 869, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7807:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 871, "indexExpression": {"id": 870, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "7818:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7807:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 872, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "votes", "nodeType": "MemberAccess", "referencedDeclaration": 398, "src": "7807:30:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 878, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "7875:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"baseExpression": {"id": 873, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7840:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 875, "indexExpression": {"id": 874, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "7851:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7840:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 876, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "votes", "nodeType": "MemberAccess", "referencedDeclaration": 398, "src": "7840:30:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1294, "src": "7840:34:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 879, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7840:43:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7807:76:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 881, "nodeType": "ExpressionStatement", "src": "7807:76:5"}, {"expression": {"id": 887, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 882, "name": "votes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "7893:5:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote storage ref)"}}, "id": 884, "indexExpression": {"id": 883, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 823, "src": "7899:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7893:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage", "typeString": "struct Voting.Vote storage ref"}}, "id": 885, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "candidateId", "nodeType": "MemberAccess", "referencedDeclaration": 401, "src": "7893:27:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 886, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "7923:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7893:42:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 888, "nodeType": "ExpressionStatement", "src": "7893:42:5"}, {"expression": {"id": 894, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 889, "name": "votes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "7945:5:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote storage ref)"}}, "id": 891, "indexExpression": {"id": 890, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 823, "src": "7951:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7945:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage", "typeString": "struct Voting.Vote storage ref"}}, "id": 892, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 403, "src": "7945:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 893, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 827, "src": "7970:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7945:32:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 895, "nodeType": "ExpressionStatement", "src": "7945:32:5"}, {"expression": {"id": 901, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 896, "name": "votes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "7987:5:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$406_storage_$", "typeString": "mapping(address => struct Voting.Vote storage ref)"}}, "id": 898, "indexExpression": {"id": 897, "name": "_citizen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 823, "src": "7993:8:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7987:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Vote_$406_storage", "typeString": "struct Voting.Vote storage ref"}}, "id": 899, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "hasVoted", "nodeType": "MemberAccess", "referencedDeclaration": 405, "src": "7987:24:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 900, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8014:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "7987:31:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 902, "nodeType": "ExpressionStatement", "src": "7987:31:5"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 907, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 904, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "8053:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 903, "name": "_isInElectionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1059, "src": "8032:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 905, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8032:34:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "66616c7365", "id": 906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8070:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "8032:43:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 940, "nodeType": "Block", "src": "8592:121:5", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 937, "name": "_sortElectionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1027, "src": "8645:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 938, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8645:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 939, "nodeType": "ExpressionStatement", "src": "8645:22:5"}]}, "id": 941, "nodeType": "IfStatement", "src": "8029:684:5", "trueBody": {"id": 936, "nodeType": "Block", "src": "8076:510:5", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 919, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 914, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 908, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "8137:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 910, "indexExpression": {"id": 909, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "8148:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8137:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 911, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "votes", "nodeType": "MemberAccess", "referencedDeclaration": 398, "src": "8137:30:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 912, "name": "_getLastPlaceVotes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1085, "src": "8170:18:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 913, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8170:20:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8137:53:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 915, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "8194:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 916, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8194:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 917, "name": "ELECTION_WINNERS_LENGTH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "8219:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8194:48:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8137:105:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 934, "nodeType": "Block", "src": "8461:102:5", "statements": []}, "id": 935, "nodeType": "IfStatement", "src": "8133:430:5", "trueBody": {"id": 933, "nodeType": "Block", "src": "8244:211:5", "statements": [{"expression": {"arguments": [{"id": 921, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "8324:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 920, "name": "_insertIntoElectionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1117, "src": "8297:26:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 922, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8297:40:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 923, "nodeType": "ExpressionStatement", "src": "8297:40:5"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 924, "name": "_sortElectionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1027, "src": "8355:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8355:22:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 926, "nodeType": "ExpressionStatement", "src": "8355:22:5"}, {"eventCall": {"arguments": [{"baseExpression": {"id": 928, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "8414:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 930, "indexExpression": {"id": 929, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 825, "src": "8425:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8414:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}], "id": 927, "name": "NewChallenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "8400:13:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_Candidate_$399_memory_ptr_$returns$__$", "typeString": "function (struct Voting.Candidate memory)"}}, "id": 931, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8400:39:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 932, "nodeType": "EmitStatement", "src": "8395:44:5"}]}}]}}]}, "documentation": {"id": 821, "nodeType": "StructuredDocumentation", "src": "7023:233:5", "text": "@notice Internal function which handles the voting\n@param _citizen Citizen's address\n@param _candidateId Candidate's ID\n@param _amount Amount of WKND tokens to be used in the voting process"}, "id": 943, "implemented": true, "kind": "function", "modifiers": [], "name": "_vote", "nameLocation": "7270:5:5", "nodeType": "FunctionDefinition", "parameters": {"id": 828, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 823, "mutability": "mutable", "name": "_citizen", "nameLocation": "7284:8:5", "nodeType": "VariableDeclaration", "scope": 943, "src": "7276:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 822, "name": "address", "nodeType": "ElementaryTypeName", "src": "7276:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 825, "mutability": "mutable", "name": "_candidateId", "nameLocation": "7302:12:5", "nodeType": "VariableDeclaration", "scope": 943, "src": "7294:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 824, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7294:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 827, "mutability": "mutable", "name": "_amount", "nameLocation": "7324:7:5", "nodeType": "VariableDeclaration", "scope": 943, "src": "7316:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 826, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7316:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7275:57:5"}, "returnParameters": {"id": 829, "nodeType": "ParameterList", "parameters": [], "src": "7342:0:5"}, "scope": 1118, "src": "7261:1458:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1026, "nodeType": "Block", "src": "8854:589:5", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 950, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 947, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "8868:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 948, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8868:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 949, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8894:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8868:27:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 952, "nodeType": "IfStatement", "src": "8865:39:5", "trueBody": {"functionReturnParameters": 946, "id": 951, "nodeType": "Return", "src": "8897:7:5"}}, {"body": {"id": 1024, "nodeType": "Block", "src": "8967:470:5", "statements": [{"body": {"id": 1022, "nodeType": "Block", "src": "9032:395:5", "statements": [{"assignments": [980], "declarations": [{"constant": false, "id": 980, "mutability": "mutable", "name": "currPlaceId", "nameLocation": "9058:11:5", "nodeType": "VariableDeclaration", "scope": 1022, "src": "9050:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 979, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9050:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 984, "initialValue": {"baseExpression": {"id": 981, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9072:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 983, "indexExpression": {"id": 982, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "9088:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9072:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9050:40:5"}, {"assignments": [986], "declarations": [{"constant": false, "id": 986, "mutability": "mutable", "name": "nextPlaceId", "nameLocation": "9116:11:5", "nodeType": "VariableDeclaration", "scope": 1022, "src": "9108:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 985, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9108:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 990, "initialValue": {"baseExpression": {"id": 987, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9130:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 989, "indexExpression": {"id": 988, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "9146:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9130:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9108:40:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 999, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 991, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "9169:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 993, "indexExpression": {"id": 992, "name": "currPlaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 980, "src": "9180:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9169:23:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 994, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "votes", "nodeType": "MemberAccess", "referencedDeclaration": 398, "src": "9169:29:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 995, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "9201:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 997, "indexExpression": {"id": 996, "name": "nextPlaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 986, "src": "9212:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9201:23:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 998, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "votes", "nodeType": "MemberAccess", "referencedDeclaration": 398, "src": "9201:29:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9169:61:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1021, "nodeType": "IfStatement", "src": "9166:247:5", "trueBody": {"id": 1020, "nodeType": "Block", "src": "9231:182:5", "statements": [{"assignments": [1001], "declarations": [{"constant": false, "id": 1001, "mutability": "mutable", "name": "temp", "nameLocation": "9261:4:5", "nodeType": "VariableDeclaration", "scope": 1020, "src": "9253:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1000, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9253:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1005, "initialValue": {"baseExpression": {"id": 1002, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9268:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1004, "indexExpression": {"id": 1003, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "9284:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9268:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9253:33:5"}, {"expression": {"id": 1012, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1006, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9308:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1008, "indexExpression": {"id": 1007, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "9324:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9308:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 1009, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9329:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1011, "indexExpression": {"id": 1010, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "9345:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9329:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9308:39:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1013, "nodeType": "ExpressionStatement", "src": "9308:39:5"}, {"expression": {"id": 1018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1014, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9369:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1016, "indexExpression": {"id": 1015, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "9385:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9369:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1017, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1001, "src": "9390:4:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9369:25:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1019, "nodeType": "ExpressionStatement", "src": "9369:25:5"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 975, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 972, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "9000:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 973, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9004:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9004:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9000:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1023, "initializationExpression": {"assignments": [967], "declarations": [{"constant": false, "id": 967, "mutability": "mutable", "name": "j", "nameLocation": "8991:1:5", "nodeType": "VariableDeclaration", "scope": 1023, "src": "8985:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 966, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "8985:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 971, "initialValue": {"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 970, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 968, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "8995:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 969, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8997:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "8995:3:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "VariableDeclarationStatement", "src": "8985:13:5"}, "loopExpression": {"expression": {"id": 977, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "9028:3:5", "subExpression": {"id": 976, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 967, "src": "9030:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 978, "nodeType": "ExpressionStatement", "src": "9028:3:5"}, "nodeType": "ForStatement", "src": "8981:446:5"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 957, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "8931:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 958, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "8935:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 959, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8935:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 960, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8960:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "8935:26:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8931:30:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1025, "initializationExpression": {"assignments": [954], "declarations": [{"constant": false, "id": 954, "mutability": "mutable", "name": "i", "nameLocation": "8924:1:5", "nodeType": "VariableDeclaration", "scope": 1025, "src": "8918:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 953, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "8918:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 956, "initialValue": {"hexValue": "30", "id": 955, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8928:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "8918:11:5"}, "loopExpression": {"expression": {"id": 964, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "8963:3:5", "subExpression": {"id": 963, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 954, "src": "8965:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 965, "nodeType": "ExpressionStatement", "src": "8963:3:5"}, "nodeType": "ForStatement", "src": "8914:523:5"}]}, "documentation": {"id": 944, "nodeType": "StructuredDocumentation", "src": "8725:83:5", "text": "@notice Internal function which sorts the electionWinners Array"}, "id": 1027, "implemented": true, "kind": "function", "modifiers": [], "name": "_sortElectionWinners", "nameLocation": "8822:20:5", "nodeType": "FunctionDefinition", "parameters": {"id": 945, "nodeType": "ParameterList", "parameters": [], "src": "8842:2:5"}, "returnParameters": {"id": 946, "nodeType": "ParameterList", "parameters": [], "src": "8854:0:5"}, "scope": 1118, "src": "8813:630:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1058, "nodeType": "Block", "src": "9762:163:5", "statements": [{"body": {"id": 1054, "nodeType": "Block", "src": "9822:75:5", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1050, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1046, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1030, "src": "9839:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"baseExpression": {"id": 1047, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9855:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1049, "indexExpression": {"id": 1048, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "9871:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9855:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9839:34:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1053, "nodeType": "IfStatement", "src": "9836:50:5", "trueBody": {"expression": {"hexValue": "74727565", "id": 1051, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9882:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1034, "id": 1052, "nodeType": "Return", "src": "9875:11:5"}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1042, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1039, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "9790:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 1040, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "9794:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1041, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9794:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9790:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1055, "initializationExpression": {"assignments": [1036], "declarations": [{"constant": false, "id": 1036, "mutability": "mutable", "name": "i", "nameLocation": "9783:1:5", "nodeType": "VariableDeclaration", "scope": 1055, "src": "9777:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 1035, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "9777:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 1038, "initialValue": {"hexValue": "30", "id": 1037, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9787:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "9777:11:5"}, "loopExpression": {"expression": {"id": 1044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "9818:3:5", "subExpression": {"id": 1043, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "9820:1:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 1045, "nodeType": "ExpressionStatement", "src": "9818:3:5"}, "nodeType": "ForStatement", "src": "9773:124:5"}, {"expression": {"hexValue": "66616c7365", "id": 1056, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9913:5:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 1034, "id": 1057, "nodeType": "Return", "src": "9906:12:5"}]}, "documentation": {"id": 1028, "nodeType": "StructuredDocumentation", "src": "9449:228:5", "text": "@notice Internal function which returns if the _candidateId is in the electionWinners Array\n@param _candidateId Candidate's ID to be checked\n@return Bool : True if found in the electionWinners"}, "id": 1059, "implemented": true, "kind": "function", "modifiers": [], "name": "_isInElectionWinners", "nameLocation": "9691:20:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1031, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1030, "mutability": "mutable", "name": "_candidateId", "nameLocation": "9720:12:5", "nodeType": "VariableDeclaration", "scope": 1059, "src": "9712:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1029, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9712:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9711:22:5"}, "returnParameters": {"id": 1034, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1033, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1059, "src": "9757:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1032, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9757:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9756:6:5"}, "scope": 1118, "src": "9682:243:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1084, "nodeType": "Block", "src": "10178:134:5", "statements": [{"assignments": [1066], "declarations": [{"constant": false, "id": 1066, "mutability": "mutable", "name": "length", "nameLocation": "10197:6:5", "nodeType": "VariableDeclaration", "scope": 1084, "src": "10189:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1065, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10189:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1069, "initialValue": {"expression": {"id": 1067, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "10206:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "10206:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10189:39:5"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1072, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1070, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1066, "src": "10245:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1071, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10254:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10245:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 1081, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10304:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 1082, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "10245:60:5", "trueExpression": {"expression": {"baseExpression": {"id": 1073, "name": "candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "10258:10:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Candidate_$399_storage_$dyn_storage", "typeString": "struct Voting.Candidate storage ref[] storage ref"}}, "id": 1079, "indexExpression": {"baseExpression": {"id": 1074, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "10269:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1078, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1077, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1075, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1066, "src": "10285:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 1076, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10292:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "10285:8:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10269:25:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10258:37:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$399_storage", "typeString": "struct Voting.Candidate storage ref"}}, "id": 1080, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "votes", "nodeType": "MemberAccess", "referencedDeclaration": 398, "src": "10258:43:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1064, "id": 1083, "nodeType": "Return", "src": "10238:67:5"}]}, "documentation": {"id": 1060, "nodeType": "StructuredDocumentation", "src": "9931:181:5", "text": "@notice Internal function which returns the number of votes of the last candidate in the electionWinners\n@return Votes of candidate that is in last place"}, "id": 1085, "implemented": true, "kind": "function", "modifiers": [], "name": "_getLastPlaceVotes", "nameLocation": "10126:18:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1061, "nodeType": "ParameterList", "parameters": [], "src": "10144:2:5"}, "returnParameters": {"id": 1064, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1063, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1085, "src": "10170:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1062, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10170:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10169:9:5"}, "scope": 1118, "src": "10117:195:5", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1116, "nodeType": "Block", "src": "10547:250:5", "statements": [{"assignments": [1092], "declarations": [{"constant": false, "id": 1092, "mutability": "mutable", "name": "length", "nameLocation": "10566:6:5", "nodeType": "VariableDeclaration", "scope": 1116, "src": "10558:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10558:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1095, "initialValue": {"expression": {"id": 1093, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "10575:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1094, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "10575:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10558:39:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1098, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1096, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1092, "src": "10610:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 1097, "name": "ELECTION_WINNERS_LENGTH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "10619:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10610:32:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1114, "nodeType": "Block", "src": "10709:82:5", "statements": [{"expression": {"id": 1112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1106, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "10723:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1110, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1109, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 1107, "name": "ELECTION_WINNERS_LENGTH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "10739:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 1108, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10763:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "10739:25:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10723:42:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1111, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1088, "src": "10768:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10723:57:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1113, "nodeType": "ExpressionStatement", "src": "10723:57:5"}]}, "id": 1115, "nodeType": "IfStatement", "src": "10607:184:5", "trueBody": {"id": 1105, "nodeType": "Block", "src": "10643:60:5", "statements": [{"expression": {"arguments": [{"id": 1102, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1088, "src": "10679:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1099, "name": "electionWinners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "10658:15:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "10658:20:5", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$", "typeString": "function (uint256[] storage pointer,uint256)"}}, "id": 1103, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10658:34:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1104, "nodeType": "ExpressionStatement", "src": "10658:34:5"}]}}]}, "documentation": {"id": 1086, "nodeType": "StructuredDocumentation", "src": "10318:157:5", "text": "@notice Internal function which inserts a candidate in the electionWinners\n@param _candidateId ID of the Candidate to be inserted"}, "id": 1117, "implemented": true, "kind": "function", "modifiers": [], "name": "_insertIntoElectionWinners", "nameLocation": "10489:26:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1089, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1088, "mutability": "mutable", "name": "_candidateId", "nameLocation": "10524:12:5", "nodeType": "VariableDeclaration", "scope": 1117, "src": "10516:20:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1087, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10516:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10515:22:5"}, "returnParameters": {"id": 1090, "nodeType": "ParameterList", "parameters": [], "src": "10547:0:5"}, "scope": 1118, "src": "10480:317:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 1119, "src": "447:10352:5", "usedErrors": []}], "src": "0:10800:5"}, "bytecode": "6101406040523480156200001257600080fd5b506040516200225f3803806200225f8339810160408190526200003591620005c2565b60408051808201825260058152640312e302e360dc1b60209182015286518782012060e08190527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c6101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81870181905281880195909552606081810194909452608080820193909352308183018190528751808303909301835260c09182019097528151919095012090529290921b905261012052600080546001600160a01b031916331790556200011683838362000142565b5050600180546001600160a01b0319166001600160a01b03939093169290921790915550620007899050565b6000546001600160a01b03163314620001ae5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79204b494e472063616e2073746172742061206e657720656c656374696044820152636f6e202160e01b60648201526084015b60405180910390fd5b8151835114620002055760405162461bcd60e51b815260206004820152602c60248201526000805160206200223f83398151915260448201526b7320616e642061676573202160a01b6064820152608401620001a5565b80518351146200025c5760405162461bcd60e51b815260206004820152602c60248201526000805160206200223f83398151915260448201526b7320616e642061676573202160a01b6064820152608401620001a5565b60005b83518110156200036957600560405180608001604052808684815181106200028b576200028b6200075d565b60200260200101518152602001858481518110620002ad57620002ad6200075d565b602002602001015160ff168152602001848481518110620002d257620002d26200075d565b60209081029190910181015182526000918101829052835460018101855593825290819020825180519394600402909101926200031392849201906200036f565b5060208281015160018301805460ff191660ff909216919091179055604083015180516200034892600285019201906200036f565b5060608201518160030155505080620003619062000733565b90506200025f565b50505050565b8280546200037d90620006f6565b90600052602060002090601f016020900481019282620003a15760008555620003ec565b82601f10620003bc57805160ff1916838001178555620003ec565b82800160010185558215620003ec579182015b82811115620003ec578251825591602001919060010190620003cf565b50620003fa929150620003fe565b5090565b5b80821115620003fa5760008155600101620003ff565b600082601f8301126200042757600080fd5b81516020620004406200043a83620006d0565b6200069d565b80838252828201915082860187848660051b89010111156200046157600080fd5b6000805b86811015620004a85782516001600160401b0381111562000484578283fd5b620004948b88838d01016200052d565b865250938501939185019160010162000465565b509198975050505050505050565b600082601f830112620004c857600080fd5b81516020620004db6200043a83620006d0565b80838252828201915082860187848660051b8901011115620004fc57600080fd5b6000805b86811015620004a857825160ff811681146200051a578283fd5b8552938501939185019160010162000500565b600082601f8301126200053f57600080fd5b81516001600160401b038111156200055b576200055b62000773565b602062000571601f8301601f191682016200069d565b82815285828487010111156200058657600080fd5b60005b83811015620005a657858101830151828201840152820162000589565b83811115620005b85760008385840101525b5095945050505050565b600080600080600060a08688031215620005db57600080fd5b85516001600160401b0380821115620005f357600080fd5b6200060189838a016200052d565b602089015190975091506001600160a01b03821682146200062157600080fd5b6040880151919550808211156200063757600080fd5b6200064589838a0162000415565b945060608801519150808211156200065c57600080fd5b6200066a89838a01620004b6565b935060808801519150808211156200068157600080fd5b50620006908882890162000415565b9150509295509295909350565b604051601f8201601f191681016001600160401b0381118282101715620006c857620006c862000773565b604052919050565b60006001600160401b03821115620006ec57620006ec62000773565b5060051b60200190565b600181811c908216806200070b57607f821691505b602082108114156200072d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200075657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60805160a05160c05160601c60e0516101005161012051611a63620007dc60003960006111ae015260006111fd015260006111d8015260006111310152600061115b015260006111850152611a636000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80634420e486116100715780634420e486146101875780637107852a1461019a578063b384abef146101a2578063b8d06bc4146101b5578063de90bb6f146101c8578063f7b2ec0d146101d057600080fd5b80630cf2ee64146100ae5780631565507e146100ef5780632d0335ab1461010457806330226efe1461013b578063377968d414610172575b600080fd5b6100da6100bc3660046115eb565b6001600160a01b031660009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101026100fd3660046116a7565b6101fb565b005b61012d6101123660046115eb565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100e6565b61014e6101493660046115eb565b610319565b604080518251815260208084015190820152918101511515908201526060016100e6565b61017a610386565b6040516100e6919061181c565b6100da6101953660046115eb565b6105db565b6100da61072f565b6101026101b036600461170d565b61079e565b61012d6101c3366004611606565b6107ad565b61017a61083d565b6101e36101de36600461165b565b6109db565b6040516001600160a01b0390911681526020016100e6565b60006102088484846107ad565b905060006102178288886109db565b9050846001600160a01b0316816001600160a01b03161461028b5760405162461bcd60e51b815260206004820152602360248201527f46756e6374696f6e2060766f746560203a20696e76616c6964207369676e617460448201526275726560e81b60648201526084015b60405180910390fd5b6001600160a01b0381166102dc5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610282565b6102e7858585610a25565b6001600160a01b038516600090815260036020526040812080549161030b8361199a565b919050555050505050505050565b61033f604051806060016040528060008152602001600081526020016000151581525090565b506001600160a01b03166000908152600460209081526040918290208251606081018452815481526001820154928101929092526002015460ff1615159181019190915290565b60065460609060009067ffffffffffffffff8111156103a7576103a7611a17565b60405190808252806020026020018201604052801561040657816020015b6103f3604051806080016040528060608152602001600060ff16815260200160608152602001600081525090565b8152602001906001900390816103c55790505b50905060005b60065460ff821610156105d557600560068260ff168154811061043157610431611a01565b90600052602060002001548154811061044c5761044c611a01565b906000526020600020906004020160405180608001604052908160008201805461047590611965565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611965565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050509183525050600182015460ff16602082015260028201805460409092019161051890611965565b80601f016020809104026020016040519081016040528092919081815260200182805461054490611965565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b50505050508152602001600382015481525050828260ff16815181106105b9576105b9611a01565b6020026020010181905250806105ce906119b5565b905061040c565b50919050565b6001600160a01b03811660009081526002602052604081205460ff1615156001141561067e5760405162461bcd60e51b815260206004820152604660248201527f54686520636974697a656e20686173206265656e20726567697374657265642060448201527f2d20746865726520617265206e6f206d756c7469706c652072656769737472616064820152653a34b7b7399760d11b608482015260a401610282565b6001805460405163bc0e60e160e01b81526001600160a01b038581166004830152602482019390935291169063bc0e60e190604401602060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190611639565b50506001600160a01b03166000908152600260205260409020805460ff1916600190811790915590565b600080546001600160a01b0316331461078a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79204b494e472063616e20656e642074686520656c656374696f6e2e006044820152606401610282565b506007805460ff1916600190811790915590565b6107a9338383610a25565b5050565b6001600160a01b03831660008181526003602090815260408083205481517fa56f781f7251d29fca13933d69c34316ea277f967c4a968f77db62d983fe11209381019390935290820193909352606081018590526080810184905260a081018390529091906108349060c00160405160208183030381529060405280519060200120610dd6565b95945050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156109d2578382906000526020600020906004020160405180608001604052908160008201805461089490611965565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090611965565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050509183525050600182015460ff16602082015260028201805460409092019161093790611965565b80601f016020809104026020016040519081016040528092919081815260200182805461096390611965565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b5050505050815260200160038201548152505081526020019060010190610861565b50505050905090565b6000610a1d8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e2a92505050565b949350505050565b60075460ff16151560011415610a915760405162461bcd60e51b815260206004820152602b60248201527f566f74696e6720666f72207468652063757272656e7420656c656374696f6e2060448201526a3430b99032b73232b2101760a91b6064820152608401610282565b6001600160a01b03831660009081526004602052604090206002015460ff16151560011415610b165760405162461bcd60e51b815260206004820152602b60248201527f54686520636974697a656e20616c726561647920766f74656420696e2074686560448201526a1032b632b1ba34b7b7101760a91b6064820152608401610282565b6001811015610b825760405162461bcd60e51b815260206004820152603260248201527f54686520616d6f756e74206973206c6573736572207468616e2074686520524560448201527123a4a9aa2920aa24a7a71020a6a7aaa72a1760711b6064820152608401610282565b6005548210610bf95760405162461bcd60e51b815260206004820152603860248201527f5468652063616e6469646174652049442067726561746572207468616e20746860448201527f65206e756d626572206f662063616e64696461746573202100000000000000006064820152608401610282565b600154604051631429461760e11b81526001600160a01b03858116600483015260248201849052909116906328528c2e90604401602060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7f9190611639565b50610cb78160058481548110610c9757610c97611a01565b906000526020600020906004020160030154610e4e90919063ffffffff16565b60058381548110610cca57610cca611a01565b60009182526020808320600492830201600301939093556001600160a01b03861682529091526040902082815560018082018390556002909101805460ff19169091179055610d1882610e61565b610dce57610d24610ebc565b60058381548110610d3757610d37611a01565b9060005260206000209060040201600301541180610d5757506006546003115b15610dc957610d6582610f21565b610d6d610f92565b7f06feb6d2e3b854b96ff5a9f8e857f483fbff471f03c8f8451fdedffe83cc605b60058381548110610da157610da1611a01565b9060005260206000209060040201604051610dbc91906118bb565b60405180910390a1505050565b505050565b610dc9610f92565b6000610e24610de3611124565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610e39858561124b565b91509150610e46816112bb565b509392505050565b6000610e5a8284611911565b9392505050565b6000805b60065460ff82161015610eb35760068160ff1681548110610e8857610e88611a01565b9060005260206000200154831415610ea35750600192915050565b610eac816119b5565b9050610e65565b50600092915050565b60065460009080610ece576000610f1b565b60056006610edd60018461194e565b81548110610eed57610eed611a01565b906000526020600020015481548110610f0857610f08611a01565b9060005260206000209060040201600301545b91505090565b6006546003811015610f635750600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155565b816006610f726001600361194e565b81548110610f8257610f82611a01565b6000918252602090912001555050565b600654610f9b57565b60005b600654610fad9060019061194e565b8160ff161015611121576000610fc4826001611929565b90505b60065460ff8216101561111057600060068360ff1681548110610fec57610fec611a01565b90600052602060002001549050600060068360ff168154811061101157611011611a01565b906000526020600020015490506005818154811061103157611031611a01565b9060005260206000209060040201600301546005838154811061105657611056611a01565b90600052602060002090600402016003015410156110fd57600060068560ff168154811061108657611086611a01565b9060005260206000200154905060068460ff16815481106110a9576110a9611a01565b906000526020600020015460068660ff16815481106110ca576110ca611a01565b90600052602060002001819055508060068560ff16815481106110ef576110ef611a01565b600091825260209091200155505b505080611109906119b5565b9050610fc7565b5061111a816119b5565b9050610f9e565b50565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561117d57507f000000000000000000000000000000000000000000000000000000000000000046145b156111a757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156112825760208301516040840151606085015160001a61127687828585611471565b945094505050506112b4565b8251604014156112ac57602083015160408401516112a186838361155e565b9350935050506112b4565b506000905060025b9250929050565b60008160048111156112cf576112cf6119eb565b14156112d85750565b60018160048111156112ec576112ec6119eb565b14156113355760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610282565b6002816004811115611349576113496119eb565b14156113975760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610282565b60038160048111156113ab576113ab6119eb565b14156114045760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610282565b6004816004811115611418576114186119eb565b14156111215760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610282565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156114a85750600090506003611555565b8460ff16601b141580156114c057508460ff16601c14155b156114d15750600090506004611555565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611525573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661154e57600060019250925050611555565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b0161157f87828885611471565b935093505050935093915050565b80356001600160a01b03811681146115a457600080fd5b919050565b60008083601f8401126115bb57600080fd5b50813567ffffffffffffffff8111156115d357600080fd5b6020830191508360208285010111156112b457600080fd5b6000602082840312156115fd57600080fd5b610e5a8261158d565b60008060006060848603121561161b57600080fd5b6116248461158d565b95602085013595506040909401359392505050565b60006020828403121561164b57600080fd5b81518015158114610e5a57600080fd5b60008060006040848603121561167057600080fd5b83359250602084013567ffffffffffffffff81111561168e57600080fd5b61169a868287016115a9565b9497909650939450505050565b6000806000806000608086880312156116bf57600080fd5b853567ffffffffffffffff8111156116d657600080fd5b6116e2888289016115a9565b90965094506116f590506020870161158d565b94979396509394604081013594506060013592915050565b6000806040838503121561172057600080fd5b50508035926020909101359150565b6000815180845260005b8181101561175557602081850181015186830182015201611739565b81811115611767576000602083870101525b50601f01601f19169290920160200192915050565b8054600090600181811c908083168061179657607f831692505b60208084108214156117b857634e487b7160e01b600052602260045260246000fd5b838852602088018280156117d357600181146117e45761180f565b60ff1987168252828201975061180f565b60008981526020902060005b87811015611809578154848201529086019084016117f0565b83019850505b5050505050505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156118ad57603f198984030185528151608081518186526118698287018261172f565b91505060ff898301511689860152878201518582038987015261188c828261172f565b60609384015196909301959095525094870194925090860190600101611843565b509098975050505050505050565b602081526080602082015260006118d560a083018461177c565b600184015460ff166040840152828103601f190160608401526118fb816002860161177c565b9050600384015460808401528091505092915050565b60008219821115611924576119246119d5565b500190565b600060ff821660ff84168060ff03821115611946576119466119d5565b019392505050565b600082821015611960576119606119d5565b500390565b600181811c9082168061197957607f821691505b602082108114156105d557634e487b7160e01b600052602260045260246000fd5b60006000198214156119ae576119ae6119d5565b5060010190565b600060ff821660ff8114156119cc576119cc6119d5565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122012c76e96027e622e6adeccd518a7f3c9c5cd4ed4c0cd5bf0580569a669f92c4864736f6c634300080600334c656e677468206d69736d61746368202d2063616e646964617465206e616d65", "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.6+commit.11564f7e"}, "contractName": "Voting", "coverageMap": {"branches": {"0": {}, "1": {"ECDSA._throwError": {"77": [601, 630, false], "78": [697, 735, false], "79": [806, 850, false], "80": [928, 967, false], "81": [1048, 1087, false]}, "ECDSA.tryRecover": {"75": [2539, 2561, false], "76": [3021, 3043, false], "82": [6781, 6860, false], "83": [6951, 6958, false], "84": [6962, 6969, false], "85": [7196, 7216, false]}}, "2": {"EIP712._domainSeparatorV4": {"86": [3219, 3248, false], "87": [3252, 3285, false]}}, "3": {}, "4": {}, "5": {"Voting._getLastPlaceVotes": {"72": [10245, 10255, true]}, "Voting._insertIntoElectionWinners": {"73": [10610, 10642, false]}, "Voting._isInElectionWinners": {"71": [9839, 9873, false]}, "Voting._sortElectionWinners": {"74": [9169, 9230, false]}, "Voting._vote": {"66": [7361, 7377, true], "67": [7443, 7475, true], "68": [7541, 7571, true], "69": [7644, 7676, true], "70": [8137, 8190, true]}, "Voting.delegatedVote": {"62": [5915, 5939, true], "63": [5997, 6017, true]}, "Voting.endTheElection": {"65": [1685, 1703, true]}, "Voting.register": {"64": [2071, 2101, true]}}}, "statements": {"0": {}, "1": {"ECDSA._throwError": {"53": [751, 785], "54": [866, 907], "55": [983, 1027], "56": [1103, 1147]}, "ECDSA.recover": {"34": [4469, 4487], "35": [4497, 4513]}, "ECDSA.toTypedDataHash": {"33": [9237, 9312]}, "ECDSA.tryRecover": {"50": [2968, 3000], "51": [3373, 3403], "52": [3434, 3490], "57": [6876, 6927], "58": [6985, 7036], "59": [7232, 7282], "60": [7303, 7340], "61": [5114, 5146]}}, "2": {"EIP712._buildDomainSeparator": {"48": [3616, 3707]}, "EIP712._domainSeparatorV4": {"47": [3301, 3332], "49": [3363, 3434]}, "EIP712._hashTypedDataV4": {"32": [4435, 4497]}}, "3": {"SafeMath.add": {"36": [2818, 2830]}}, "4": {}, "5": {"Voting._getLastPlaceVotes": {"40": [10238, 10305]}, "Voting._insertIntoElectionWinners": {"41": [10658, 10692], "42": [10723, 10780]}, "Voting._isInElectionWinners": {"37": [9875, 9886], "38": [9818, 9821], "39": [9906, 9918]}, "Voting._sortElectionWinners": {"43": [9308, 9347], "44": [9369, 9394], "45": [9028, 9031], "46": [8963, 8966]}, "Voting._vote": {"19": [7353, 7425], "20": [7435, 7523], "21": [7533, 7626], "22": [7636, 7737], "23": [7748, 7796], "24": [7807, 7883], "25": [7893, 7935], "26": [7945, 7977], "27": [7987, 8018], "28": [8297, 8337], "29": [8355, 8377], "30": [8395, 8439], "31": [8645, 8667]}, "Voting.citizenHasVoted": {"6": [3223, 3252]}, "Voting.citizenIsRegistered": {"0": [2608, 2644]}, "Voting.delegatedVote": {"2": [5907, 5979], "3": [5989, 6046], "4": [6057, 6099], "5": [6110, 6134]}, "Voting.endTheElection": {"13": [1677, 1739], "14": [1750, 1765]}, "Voting.getDigest": {"16": [4665, 5021]}, "Voting.getNonce": {"1": [4169, 4198]}, "Voting.getSigner": {"18": [5311, 5351]}, "Voting.register": {"10": [2063, 2176], "11": [2187, 2253], "12": [2263, 2292]}, "Voting.seeAllCandidates": {"17": [3906, 3923]}, "Voting.vote": {"15": [2916, 2956]}, "Voting.winningCandidates": {"7": [3623, 3666], "8": [3618, 3621], "9": [3676, 3690]}}}}, "dependencies": ["ECDSA", "EIP712", "SafeMath", "Strings", "Token"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80634420e486116100715780634420e486146101875780637107852a1461019a578063b384abef146101a2578063b8d06bc4146101b5578063de90bb6f146101c8578063f7b2ec0d146101d057600080fd5b80630cf2ee64146100ae5780631565507e146100ef5780632d0335ab1461010457806330226efe1461013b578063377968d414610172575b600080fd5b6100da6100bc3660046115eb565b6001600160a01b031660009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101026100fd3660046116a7565b6101fb565b005b61012d6101123660046115eb565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100e6565b61014e6101493660046115eb565b610319565b604080518251815260208084015190820152918101511515908201526060016100e6565b61017a610386565b6040516100e6919061181c565b6100da6101953660046115eb565b6105db565b6100da61072f565b6101026101b036600461170d565b61079e565b61012d6101c3366004611606565b6107ad565b61017a61083d565b6101e36101de36600461165b565b6109db565b6040516001600160a01b0390911681526020016100e6565b60006102088484846107ad565b905060006102178288886109db565b9050846001600160a01b0316816001600160a01b03161461028b5760405162461bcd60e51b815260206004820152602360248201527f46756e6374696f6e2060766f746560203a20696e76616c6964207369676e617460448201526275726560e81b60648201526084015b60405180910390fd5b6001600160a01b0381166102dc5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610282565b6102e7858585610a25565b6001600160a01b038516600090815260036020526040812080549161030b8361199a565b919050555050505050505050565b61033f604051806060016040528060008152602001600081526020016000151581525090565b506001600160a01b03166000908152600460209081526040918290208251606081018452815481526001820154928101929092526002015460ff1615159181019190915290565b60065460609060009067ffffffffffffffff8111156103a7576103a7611a17565b60405190808252806020026020018201604052801561040657816020015b6103f3604051806080016040528060608152602001600060ff16815260200160608152602001600081525090565b8152602001906001900390816103c55790505b50905060005b60065460ff821610156105d557600560068260ff168154811061043157610431611a01565b90600052602060002001548154811061044c5761044c611a01565b906000526020600020906004020160405180608001604052908160008201805461047590611965565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611965565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050509183525050600182015460ff16602082015260028201805460409092019161051890611965565b80601f016020809104026020016040519081016040528092919081815260200182805461054490611965565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b50505050508152602001600382015481525050828260ff16815181106105b9576105b9611a01565b6020026020010181905250806105ce906119b5565b905061040c565b50919050565b6001600160a01b03811660009081526002602052604081205460ff1615156001141561067e5760405162461bcd60e51b815260206004820152604660248201527f54686520636974697a656e20686173206265656e20726567697374657265642060448201527f2d20746865726520617265206e6f206d756c7469706c652072656769737472616064820152653a34b7b7399760d11b608482015260a401610282565b6001805460405163bc0e60e160e01b81526001600160a01b038581166004830152602482019390935291169063bc0e60e190604401602060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107059190611639565b50506001600160a01b03166000908152600260205260409020805460ff1916600190811790915590565b600080546001600160a01b0316331461078a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79204b494e472063616e20656e642074686520656c656374696f6e2e006044820152606401610282565b506007805460ff1916600190811790915590565b6107a9338383610a25565b5050565b6001600160a01b03831660008181526003602090815260408083205481517fa56f781f7251d29fca13933d69c34316ea277f967c4a968f77db62d983fe11209381019390935290820193909352606081018590526080810184905260a081018390529091906108349060c00160405160208183030381529060405280519060200120610dd6565b95945050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156109d2578382906000526020600020906004020160405180608001604052908160008201805461089490611965565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090611965565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050509183525050600182015460ff16602082015260028201805460409092019161093790611965565b80601f016020809104026020016040519081016040528092919081815260200182805461096390611965565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b5050505050815260200160038201548152505081526020019060010190610861565b50505050905090565b6000610a1d8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e2a92505050565b949350505050565b60075460ff16151560011415610a915760405162461bcd60e51b815260206004820152602b60248201527f566f74696e6720666f72207468652063757272656e7420656c656374696f6e2060448201526a3430b99032b73232b2101760a91b6064820152608401610282565b6001600160a01b03831660009081526004602052604090206002015460ff16151560011415610b165760405162461bcd60e51b815260206004820152602b60248201527f54686520636974697a656e20616c726561647920766f74656420696e2074686560448201526a1032b632b1ba34b7b7101760a91b6064820152608401610282565b6001811015610b825760405162461bcd60e51b815260206004820152603260248201527f54686520616d6f756e74206973206c6573736572207468616e2074686520524560448201527123a4a9aa2920aa24a7a71020a6a7aaa72a1760711b6064820152608401610282565b6005548210610bf95760405162461bcd60e51b815260206004820152603860248201527f5468652063616e6469646174652049442067726561746572207468616e20746860448201527f65206e756d626572206f662063616e64696461746573202100000000000000006064820152608401610282565b600154604051631429461760e11b81526001600160a01b03858116600483015260248201849052909116906328528c2e90604401602060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7f9190611639565b50610cb78160058481548110610c9757610c97611a01565b906000526020600020906004020160030154610e4e90919063ffffffff16565b60058381548110610cca57610cca611a01565b60009182526020808320600492830201600301939093556001600160a01b03861682529091526040902082815560018082018390556002909101805460ff19169091179055610d1882610e61565b610dce57610d24610ebc565b60058381548110610d3757610d37611a01565b9060005260206000209060040201600301541180610d5757506006546003115b15610dc957610d6582610f21565b610d6d610f92565b7f06feb6d2e3b854b96ff5a9f8e857f483fbff471f03c8f8451fdedffe83cc605b60058381548110610da157610da1611a01565b9060005260206000209060040201604051610dbc91906118bb565b60405180910390a1505050565b505050565b610dc9610f92565b6000610e24610de3611124565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610e39858561124b565b91509150610e46816112bb565b509392505050565b6000610e5a8284611911565b9392505050565b6000805b60065460ff82161015610eb35760068160ff1681548110610e8857610e88611a01565b9060005260206000200154831415610ea35750600192915050565b610eac816119b5565b9050610e65565b50600092915050565b60065460009080610ece576000610f1b565b60056006610edd60018461194e565b81548110610eed57610eed611a01565b906000526020600020015481548110610f0857610f08611a01565b9060005260206000209060040201600301545b91505090565b6006546003811015610f635750600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155565b816006610f726001600361194e565b81548110610f8257610f82611a01565b6000918252602090912001555050565b600654610f9b57565b60005b600654610fad9060019061194e565b8160ff161015611121576000610fc4826001611929565b90505b60065460ff8216101561111057600060068360ff1681548110610fec57610fec611a01565b90600052602060002001549050600060068360ff168154811061101157611011611a01565b906000526020600020015490506005818154811061103157611031611a01565b9060005260206000209060040201600301546005838154811061105657611056611a01565b90600052602060002090600402016003015410156110fd57600060068560ff168154811061108657611086611a01565b9060005260206000200154905060068460ff16815481106110a9576110a9611a01565b906000526020600020015460068660ff16815481106110ca576110ca611a01565b90600052602060002001819055508060068560ff16815481106110ef576110ef611a01565b600091825260209091200155505b505080611109906119b5565b9050610fc7565b5061111a816119b5565b9050610f9e565b50565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561117d57507f000000000000000000000000000000000000000000000000000000000000000046145b156111a757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156112825760208301516040840151606085015160001a61127687828585611471565b945094505050506112b4565b8251604014156112ac57602083015160408401516112a186838361155e565b9350935050506112b4565b506000905060025b9250929050565b60008160048111156112cf576112cf6119eb565b14156112d85750565b60018160048111156112ec576112ec6119eb565b14156113355760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610282565b6002816004811115611349576113496119eb565b14156113975760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610282565b60038160048111156113ab576113ab6119eb565b14156114045760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610282565b6004816004811115611418576114186119eb565b14156111215760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610282565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156114a85750600090506003611555565b8460ff16601b141580156114c057508460ff16601c14155b156114d15750600090506004611555565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611525573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661154e57600060019250925050611555565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b0161157f87828885611471565b935093505050935093915050565b80356001600160a01b03811681146115a457600080fd5b919050565b60008083601f8401126115bb57600080fd5b50813567ffffffffffffffff8111156115d357600080fd5b6020830191508360208285010111156112b457600080fd5b6000602082840312156115fd57600080fd5b610e5a8261158d565b60008060006060848603121561161b57600080fd5b6116248461158d565b95602085013595506040909401359392505050565b60006020828403121561164b57600080fd5b81518015158114610e5a57600080fd5b60008060006040848603121561167057600080fd5b83359250602084013567ffffffffffffffff81111561168e57600080fd5b61169a868287016115a9565b9497909650939450505050565b6000806000806000608086880312156116bf57600080fd5b853567ffffffffffffffff8111156116d657600080fd5b6116e2888289016115a9565b90965094506116f590506020870161158d565b94979396509394604081013594506060013592915050565b6000806040838503121561172057600080fd5b50508035926020909101359150565b6000815180845260005b8181101561175557602081850181015186830182015201611739565b81811115611767576000602083870101525b50601f01601f19169290920160200192915050565b8054600090600181811c908083168061179657607f831692505b60208084108214156117b857634e487b7160e01b600052602260045260246000fd5b838852602088018280156117d357600181146117e45761180f565b60ff1987168252828201975061180f565b60008981526020902060005b87811015611809578154848201529086019084016117f0565b83019850505b5050505050505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156118ad57603f198984030185528151608081518186526118698287018261172f565b91505060ff898301511689860152878201518582038987015261188c828261172f565b60609384015196909301959095525094870194925090860190600101611843565b509098975050505050505050565b602081526080602082015260006118d560a083018461177c565b600184015460ff166040840152828103601f190160608401526118fb816002860161177c565b9050600384015460808401528091505092915050565b60008219821115611924576119246119d5565b500190565b600060ff821660ff84168060ff03821115611946576119466119d5565b019392505050565b600082821015611960576119606119d5565b500390565b600181811c9082168061197957607f821691505b602082108114156105d557634e487b7160e01b600052602260045260246000fd5b60006000198214156119ae576119ae6119d5565b5060010190565b600060ff821660ff8114156119cc576119cc6119d5565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122012c76e96027e622e6adeccd518a7f3c9c5cd4ed4c0cd5bf0580569a669f92c4864736f6c63430008060033", "deployedSourceMap": "447:10352:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:136;;;;;;:::i;:::-;-1:-1:-1;;;;;2615:29:5;2591:4;2615:29;;;:12;:29;;;;;;;;;2516:136;;;;6663:14:6;;6656:22;6638:41;;6626:2;6611:18;2516:136:5;;;;;;;;5651:490;;;;;;:::i;:::-;;:::i;:::-;;4087:127;;;;;;:::i;:::-;-1:-1:-1;;;;;4176:22:5;4150:7;4176:22;;;:6;:22;;;;;;;4087:127;;;;6836:25:6;;;6824:2;6809:18;4087:127:5;6791:76:6;3128:140:5;;;;;;:::i;:::-;;:::i;:::-;;;;13515:13:6;;13497:32;;13585:4;13573:17;;;13567:24;13545:20;;;13538:54;13650:17;;;13644:24;13637:32;13630:40;13608:20;;;13601:70;13485:2;13470:18;3128:140:5;13452:225:6;3410:296:5;;;:::i;:::-;;;;;;;:::i;1986:336::-;;;;;;:::i;:::-;;:::i;1610:185::-;;;:::i;2845:119::-;;;;;;:::i;:::-;;:::i;4496:532::-;;;;;;:::i;:::-;;:::i;3826:105::-;;;:::i;5211:147::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4809:32:6;;;4791:51;;4779:2;4764:18;5211:147:5;4746:102:6;5651:490:5;5779:14;5796:46;5806:14;5822:11;5835:6;5796:9;:46::i;:::-;5779:63;;5852:14;5869:28;5879:6;5887:9;;5869;:28::i;:::-;5852:45;;5925:14;-1:-1:-1;;;;;5915:24:5;:6;-1:-1:-1;;;;;5915:24:5;;5907:72;;;;-1:-1:-1;;;5907:72:5;;11652:2:6;5907:72:5;;;11634:21:6;11691:2;11671:18;;;11664:30;11730:34;11710:18;;;11703:62;-1:-1:-1;;;11781:18:6;;;11774:33;11824:19;;5907:72:5;;;;;;;;;-1:-1:-1;;;;;5997:20:5;;5989:57;;;;-1:-1:-1;;;5989:57:5;;8465:2:6;5989:57:5;;;8447:21:6;8504:2;8484:18;;;8477:30;-1:-1:-1;;;8523:18:6;;;8516:54;8587:18;;5989:57:5;8437:174:6;5989:57:5;6057:42;6063:14;6079:11;6092:6;6057:5;:42::i;:::-;-1:-1:-1;;;;;6110:22:5;;;;;;:6;:22;;;;;:24;;;;;;:::i;:::-;;;;;;5768:373;;5651:490;;;;;:::o;3128:140::-;3199:11;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3199:11:5;-1:-1:-1;;;;;;3230:22:5;;;;;:5;:22;;;;;;;;;3223:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:140::o;3410:296::-;3539:15;:22;3460:18;;3494:26;;3523:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3523:39:5;;;;;;;;;;;;;;;;;3494:68;;3577:7;3572:94;3594:15;:22;3590:26;;;;3572:94;;;3636:10;3647:15;3663:1;3647:18;;;;;;;;;;:::i;:::-;;;;;;;;;3636:30;;;;;;;;:::i;:::-;;;;;;;;;;;3623:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3623:43:5;;;-1:-1:-1;;3623:43:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;3631:1;3623:10;;;;;;;;;;:::i;:::-;;;;;;:43;;;;3618:3;;;;:::i;:::-;;;3572:94;;;-1:-1:-1;3683:7:5;3410:296;-1:-1:-1;3410:296:5:o;1986:336::-;-1:-1:-1;;;;;2071:22:5;;2038:4;2071:22;;;:12;:22;;;;;;;;:30;;:22;:30;;2063:113;;;;-1:-1:-1;;;2063:113:5;;12416:2:6;2063:113:5;;;12398:21:6;12455:2;12435:18;;;12428:30;12494:34;12474:18;;;12467:62;12565:34;12545:18;;;12538:62;-1:-1:-1;;;12616:19:6;;;12609:37;12663:19;;2063:113:5;12388:300:6;2063:113:5;2187:12;;;:66;;-1:-1:-1;;;2187:66:5;;-1:-1:-1;;;;;5045:32:6;;;2187:66:5;;;5027:51:6;5094:18;;;5087:34;;;;2187:12:5;;;:35;;5000:18:6;;2187:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;2263:22:5;;;;;:12;:22;;;;;:29;;-1:-1:-1;;2263:29:5;2288:4;2263:29;;;;;;2288:4;1986:336::o;1610:185::-;1652:4;1699;;-1:-1:-1;;;;;1699:4:5;1685:10;:18;1677:62;;;;-1:-1:-1;;;1677:62:5;;12056:2:6;1677:62:5;;;12038:21:6;12095:2;12075:18;;;12068:30;12134:33;12114:18;;;12107:61;12185:18;;1677:62:5;12028:181:6;1677:62:5;-1:-1:-1;1750:8:5;:15;;-1:-1:-1;;1750:15:5;1761:4;1750:15;;;;;;1761:4;1610:185::o;2845:119::-;2916:40;2922:10;2934:12;2948:7;2916:5;:40::i;:::-;2845:119;;:::o;4496:532::-;-1:-1:-1;;;;;4632:22:5;;4597:7;4632:22;;;:6;:22;;;;;;;;;4729:268;;4765:90;4729:268;;;7131:25:6;;;;7172:18;;;7165:60;;;;7241:18;;;7234:34;;;7284:18;;;7277:34;;;7327:19;;;7320:35;;;4597:7:5;;4632:22;4672:349;;7103:19:6;;4729:268:5;;;;;;;;;;;;4702:309;;;;;;4672:16;:349::i;:::-;4665:356;4496:532;-1:-1:-1;;;;;4496:532:5:o;3826:105::-;3875:18;3913:10;3906:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3906:17:5;;;-1:-1:-1;;3906:17:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3826:105;:::o;5211:147::-;5293:7;5319:32;5333:6;5341:9;;5319:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5319:13:5;;-1:-1:-1;;;5319:32:5:i;:::-;5311:40;5211:147;-1:-1:-1;;;;5211:147:5:o;7261:1458::-;7361:8;;;;:16;;:8;:16;;7353:72;;;;-1:-1:-1;;;7353:72:5;;10434:2:6;7353:72:5;;;10416:21:6;10473:2;10453:18;;;10446:30;10512:34;10492:18;;;10485:62;-1:-1:-1;;;10563:18:6;;;10556:41;10614:19;;7353:72:5;10406:233:6;7353:72:5;-1:-1:-1;;;;;7443:15:5;;;;;;:5;:15;;;;;:24;;;;;:32;;:24;:32;;7435:88;;;;-1:-1:-1;;;7435:88:5;;9243:2:6;7435:88:5;;;9225:21:6;9282:2;9262:18;;;9255:30;9321:34;9301:18;;;9294:62;-1:-1:-1;;;9372:18:6;;;9365:41;9423:19;;7435:88:5;9215:233:6;7435:88:5;568:1;7541:7;:30;;7533:93;;;;-1:-1:-1;;;7533:93:5;;10015:2:6;7533:93:5;;;9997:21:6;10054:2;10034:18;;;10027:30;10093:34;10073:18;;;10066:62;-1:-1:-1;;;10144:18:6;;;10137:48;10202:19;;7533:93:5;9987:240:6;7533:93:5;7659:10;:17;7644:32;;7636:101;;;;-1:-1:-1;;;7636:101:5;;8818:2:6;7636:101:5;;;8800:21:6;8857:2;8837:18;;;8830:30;8896:34;8876:18;;;8869:62;8967:26;8947:18;;;8940:54;9011:19;;7636:101:5;8790:246:6;7636:101:5;7748:12;;:48;;-1:-1:-1;;;7748:48:5;;-1:-1:-1;;;;;5045:32:6;;;7748:48:5;;;5027:51:6;5094:18;;;5087:34;;;7748:12:5;;;;:29;;5000:18:6;;7748:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7840:43;7875:7;7840:10;7851:12;7840:24;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;:34;;:43;;;;:::i;:::-;7807:10;7818:12;7807:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:30;;:76;;;;-1:-1:-1;;;;;7893:15:5;;;;;;;;;;:42;;;7945:22;;;;:32;;;7987:24;;;;:31;;-1:-1:-1;;7987:31:5;;;;;;8032:34;7893:42;8032:20;:34::i;:::-;8029:684;;8170:20;:18;:20::i;:::-;8137:10;8148:12;8137:24;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;:53;:105;;;-1:-1:-1;8194:15:5;:22;522:1;-1:-1:-1;8137:105:5;8133:430;;;8297:40;8324:12;8297:26;:40::i;:::-;8355:22;:20;:22::i;:::-;8400:39;8414:10;8425:12;8414:24;;;;;;;;:::i;:::-;;;;;;;;;;;8400:39;;;;;;:::i;:::-;;;;;;;;7261:1458;;;:::o;8133:430::-;7261:1458;;;:::o;8029:684::-;8645:22;:20;:22::i;4339:165:2:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9254:57:1;;-1:-1:-1;;;9254:57:1;;;4506:27:6;4549:11;;;4542:27;;;4585:12;;;4578:28;;;9218:7:1;;4622:12:6;;9254:57:1;;;;;;;;;;;;9244:68;;;;;;9237:75;;9125:194;;;;;4442:55:2;4435:62;4339:165;-1:-1:-1;;4339:165:2:o;4293:227:1:-;4371:7;4391:17;4410:18;4432:27;4443:4;4449:9;4432:10;:27::i;:::-;4390:69;;;;4469:18;4481:5;4469:11;:18::i;:::-;-1:-1:-1;4504:9:1;4293:227;-1:-1:-1;;;4293:227:1:o;2741:96:3:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:3:o;9682:243:5:-;9757:4;;9773:124;9794:15;:22;9790:26;;;;9773:124;;;9855:15;9871:1;9855:18;;;;;;;;;;:::i;:::-;;;;;;;;;9839:12;:34;9836:50;;;-1:-1:-1;9882:4:5;;9682:243;-1:-1:-1;;9682:243:5:o;9836:50::-;9818:3;;;:::i;:::-;;;9773:124;;;-1:-1:-1;9913:5:5;;9682:243;-1:-1:-1;;9682:243:5:o;10117:195::-;10206:15;:22;10170:7;;10245:10;:60;;10304:1;10245:60;;;10258:10;10269:15;10285:8;10292:1;10285:6;:8;:::i;:::-;10269:25;;;;;;;;:::i;:::-;;;;;;;;;10258:37;;;;;;;;:::i;:::-;;;;;;;;;;;:43;;;10245:60;10238:67;;;10117:195;:::o;10480:317::-;10575:15;:22;522:1;10610:32;;10607:184;;;-1:-1:-1;10658:15:5;:34;;;;;;;-1:-1:-1;10658:34:5;;;;;;;2845:119::o;10607:184::-;10768:12;10723:15;10739:25;10763:1;522;10739:25;:::i;:::-;10723:42;;;;;;;;:::i;:::-;;;;;;;;;;:57;10547:250;10480:317;:::o;8813:630::-;8868:15;:22;8865:39;;8813:630::o;8865:39::-;8918:7;8914:523;8935:15;:22;:26;;8960:1;;8935:26;:::i;:::-;8931:1;:30;;;8914:523;;;8985:7;8995:3;:1;8997;8995:3;:::i;:::-;8985:13;;8981:446;9004:15;:22;9000:26;;;;8981:446;;;9050:19;9072:15;9088:1;9072:18;;;;;;;;;;:::i;:::-;;;;;;;;;9050:40;;9108:19;9130:15;9146:1;9130:18;;;;;;;;;;:::i;:::-;;;;;;;;;9108:40;;9201:10;9212:11;9201:23;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;9169:10;9180:11;9169:23;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:61;9166:247;;;9253:12;9268:15;9284:1;9268:18;;;;;;;;;;:::i;:::-;;;;;;;;;9253:33;;9329:15;9345:1;9329:18;;;;;;;;;;:::i;:::-;;;;;;;;;9308:15;9324:1;9308:18;;;;;;;;;;:::i;:::-;;;;;;;;:39;;;;9390:4;9369:15;9385:1;9369:18;;;;;;;;;;:::i;:::-;;;;;;;;;;:25;-1:-1:-1;9166:247:5;9032:395;;9028:3;;;;:::i;:::-;;;8981:446;;;-1:-1:-1;8963:3:5;;;:::i;:::-;;;8914:523;;;;8813:630::o;3143:308:2:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:2;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:2;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:2;;;3392:10;3633:73;;;;7625:25:6;;;;3404:12:2;7666:18:6;;;7659:34;3418:15:2;7709:18:6;;;7702:34;3677:13:2;7752:18:6;;;7745:34;3700:4:2;7795:19:6;;;;7788:61;;;;3633:73:2;;;;;;;;;;7597:19:6;;;;3633:73:2;;;3623:84;;;;;;3143:308::o;2228:1279:1:-;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:1;;-1:-1:-1;3454:35:1;3017:484;2228:1279;;;;;:::o;533:631::-;610:20;601:5;:29;;;;;;;;:::i;:::-;;597:561;;;533:631;:::o;597:561::-;706:29;697:5;:38;;;;;;;;:::i;:::-;;693:465;;;751:34;;-1:-1:-1;;;751:34:1;;8465:2:6;751:34:1;;;8447:21:6;8504:2;8484:18;;;8477:30;-1:-1:-1;;;8523:18:6;;;8516:54;8587:18;;751:34:1;8437:174:6;693:465:1;815:35;806:5;:44;;;;;;;;:::i;:::-;;802:356;;;866:41;;-1:-1:-1;;;866:41:1;;9655:2:6;866:41:1;;;9637:21:6;9694:2;9674:18;;;9667:30;9733:33;9713:18;;;9706:61;9784:18;;866:41:1;9627:181:6;802:356:1;937:30;928:5;:39;;;;;;;;:::i;:::-;;924:234;;;983:44;;-1:-1:-1;;;983:44:1;;10846:2:6;983:44:1;;;10828:21:6;10885:2;10865:18;;;10858:30;10924:34;10904:18;;;10897:62;-1:-1:-1;;;10975:18:6;;;10968:32;11017:19;;983:44:1;10818:224:6;924:234:1;1057:30;1048:5;:39;;;;;;;;:::i;:::-;;1044:114;;;1103:44;;-1:-1:-1;;;1103:44:1;;11249:2:6;1103:44:1;;;11231:21:6;11288:2;11268:18;;;11261:30;11327:34;11307:18;;;11300:62;-1:-1:-1;;;11378:18:6;;;11371:32;11420:19;;1103:44:1;11221:224:6;5744:1603:1;5870:7;;6794:66;6781:79;;6777:161;;;-1:-1:-1;6892:1:1;;-1:-1:-1;6896:30:1;6876:51;;6777:161;6951:1;:7;;6956:2;6951:7;;:18;;;;;6962:1;:7;;6967:2;6962:7;;6951:18;6947:100;;;-1:-1:-1;7001:1:1;;-1:-1:-1;7005:30:1;6985:51;;6947:100;7158:24;;;7141:14;7158:24;;;;;;;;;8087:25:6;;;8160:4;8148:17;;8128:18;;;8121:45;;;;8182:18;;;8175:34;;;8225:18;;;8218:34;;;7158:24:1;;8059:19:6;;7158:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7158:24:1;;-1:-1:-1;;7158:24:1;;;-1:-1:-1;;;;;;;7196:20:1;;7192:101;;7248:1;7252:29;7232:50;;;;;;;7192:101;7311:6;-1:-1:-1;7319:20:1;;-1:-1:-1;5744:1603:1;;;;;;;;:::o;4774:379::-;4884:7;;-1:-1:-1;;;;;4981:75:1;;5082:3;5078:12;;;5092:2;5074:21;5121:25;5132:4;5074:21;5141:1;4981:75;5121:10;:25::i;:::-;5114:32;;;;;;4774:379;;;;;;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:347::-;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:2;;325:1;322;315:12;274:2;-1:-1:-1;348:20:6;;391:18;380:30;;377:2;;;423:1;420;413:12;377:2;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:2;;;529:1;526;519:12;544:186;603:6;656:2;644:9;635:7;631:23;627:32;624:2;;;672:1;669;662:12;624:2;695:29;714:9;695:29;:::i;735:322::-;812:6;820;828;881:2;869:9;860:7;856:23;852:32;849:2;;;897:1;894;887:12;849:2;920:29;939:9;920:29;:::i;:::-;910:39;996:2;981:18;;968:32;;-1:-1:-1;1047:2:6;1032:18;;;1019:32;;839:218;-1:-1:-1;;;839:218:6:o;1062:277::-;1129:6;1182:2;1170:9;1161:7;1157:23;1153:32;1150:2;;;1198:1;1195;1188:12;1150:2;1230:9;1224:16;1283:5;1276:13;1269:21;1262:5;1259:32;1249:2;;1305:1;1302;1295:12;1344:477;1423:6;1431;1439;1492:2;1480:9;1471:7;1467:23;1463:32;1460:2;;;1508:1;1505;1498:12;1460:2;1544:9;1531:23;1521:33;;1605:2;1594:9;1590:18;1577:32;1632:18;1624:6;1621:30;1618:2;;;1664:1;1661;1654:12;1618:2;1703:58;1753:7;1744:6;1733:9;1729:22;1703:58;:::i;:::-;1450:371;;1780:8;;-1:-1:-1;1677:84:6;;-1:-1:-1;;;;1450:371:6:o;1826:620::-;1923:6;1931;1939;1947;1955;2008:3;1996:9;1987:7;1983:23;1979:33;1976:2;;;2025:1;2022;2015:12;1976:2;2065:9;2052:23;2098:18;2090:6;2087:30;2084:2;;;2130:1;2127;2120:12;2084:2;2169:58;2219:7;2210:6;2199:9;2195:22;2169:58;:::i;:::-;2246:8;;-1:-1:-1;2143:84:6;-1:-1:-1;2300:38:6;;-1:-1:-1;2334:2:6;2319:18;;2300:38;:::i;:::-;1966:480;;;;-1:-1:-1;2290:48:6;;2385:2;2370:18;;2357:32;;-1:-1:-1;2436:2:6;2421:18;2408:32;;1966:480;-1:-1:-1;;1966:480:6:o;2451:248::-;2519:6;2527;2580:2;2568:9;2559:7;2555:23;2551:32;2548:2;;;2596:1;2593;2586:12;2548:2;-1:-1:-1;;2619:23:6;;;2689:2;2674:18;;;2661:32;;-1:-1:-1;2538:161:6:o;2704:472::-;2746:3;2784:5;2778:12;2811:6;2806:3;2799:19;2836:1;2846:162;2860:6;2857:1;2854:13;2846:162;;;2922:4;2978:13;;;2974:22;;2968:29;2950:11;;;2946:20;;2939:59;2875:12;2846:162;;;3026:6;3023:1;3020:13;3017:2;;;3092:1;3085:4;3076:6;3071:3;3067:16;3063:27;3056:38;3017:2;-1:-1:-1;3158:2:6;3137:15;-1:-1:-1;;3133:29:6;3124:39;;;;3165:4;3120:50;;2754:422;-1:-1:-1;;2754:422:6:o;3181:1062::-;3266:12;;3231:3;;3321:1;3341:18;;;;3394;;;;3421:2;;3475:4;3467:6;3463:17;3453:27;;3421:2;3501;3549;3541:6;3538:14;3518:18;3515:38;3512:2;;;3595:10;3590:3;3586:20;3583:1;3576:31;3630:4;3627:1;3620:15;3658:4;3655:1;3648:15;3512:2;14097:19;;;14149:4;14140:14;;3779:18;3806:104;;;;3924:1;3919:318;;;;3772:465;;3806:104;-1:-1:-1;;3841:24:6;;3827:39;;3886:14;;;;-1:-1:-1;3806:104:6;;3919:318;13937:1;13930:14;;;13974:4;13961:18;;4013:1;4027:167;4041:6;4038:1;4035:13;4027:167;;;4121:14;;4106:13;;;4099:37;4164:16;;;;4056:10;;4027:167;;;4214:13;;;-1:-1:-1;;3772:465:6;;;;;;;;3239:1004;;;;:::o;5132:1361::-;5326:4;5355:2;5395;5384:9;5380:18;5425:2;5414:9;5407:21;5448:6;5483;5477:13;5514:6;5506;5499:22;5540:2;5530:12;;5573:2;5562:9;5558:18;5551:25;;5635:2;5625:6;5622:1;5618:14;5607:9;5603:30;5599:39;5673:2;5665:6;5661:15;5694:1;5704:760;5718:6;5715:1;5712:13;5704:760;;;5811:2;5807:7;5795:9;5787:6;5783:22;5779:36;5774:3;5767:49;5845:6;5839:13;5875:4;5918:2;5912:9;5949:2;5941:6;5934:18;5979:48;6023:2;6015:6;6011:15;5997:12;5979:48;:::i;:::-;5965:62;;;6088:4;6082:2;6078;6074:11;6068:18;6064:29;6059:2;6051:6;6047:15;6040:54;6143:2;6139;6135:11;6129:18;6196:6;6188;6184:19;6179:2;6171:6;6167:15;6160:44;6231:41;6265:6;6249:14;6231:41;:::i;:::-;6295:4;6342:11;;;6336:18;6319:15;;;;6312:43;;;;-1:-1:-1;6442:12:6;;;;6217:55;-1:-1:-1;6407:15:6;;;;5740:1;5733:9;5704:760;;;-1:-1:-1;6481:6:6;;5335:1158;-1:-1:-1;;;;;;;;5335:1158:6:o;12693:611::-;12871:2;12860:9;12853:21;12910:4;12905:2;12894:9;12890:18;12883:32;12834:4;12938:54;12987:3;12976:9;12972:19;12964:6;12938:54;:::i;:::-;13050:4;13038:17;;13032:24;13058:4;13028:35;13023:2;13008:18;;13001:63;13104:22;;;-1:-1:-1;;13100:36:6;13095:2;13080:18;;13073:64;13160:52;13108:6;13198:4;13186:17;;13160:52;:::i;:::-;13146:66;;13268:4;13260:6;13256:17;13250:24;13243:4;13232:9;13228:20;13221:54;13292:6;13284:14;;;12843:461;;;;:::o;14165:128::-;14205:3;14236:1;14232:6;14229:1;14226:13;14223:2;;;14242:18;;:::i;:::-;-1:-1:-1;14278:9:6;;14213:80::o;14298:204::-;14336:3;14372:4;14369:1;14365:12;14404:4;14401:1;14397:12;14439:3;14433:4;14429:14;14424:3;14421:23;14418:2;;;14447:18;;:::i;:::-;14483:13;;14344:158;-1:-1:-1;;;14344:158:6:o;14507:125::-;14547:4;14575:1;14572;14569:8;14566:2;;;14580:18;;:::i;:::-;-1:-1:-1;14617:9:6;;14556:76::o;14637:380::-;14716:1;14712:12;;;;14759;;;14780:2;;14834:4;14826:6;14822:17;14812:27;;14780:2;14887;14879:6;14876:14;14856:18;14853:38;14850:2;;;14933:10;14928:3;14924:20;14921:1;14914:31;14968:4;14965:1;14958:15;14996:4;14993:1;14986:15;15022:135;15061:3;-1:-1:-1;;15082:17:6;;15079:2;;;15102:18;;:::i;:::-;-1:-1:-1;15149:1:6;15138:13;;15069:88::o;15162:175::-;15199:3;15243:4;15236:5;15232:16;15272:4;15263:7;15260:17;15257:2;;;15280:18;;:::i;:::-;15329:1;15316:15;;15207:130;-1:-1:-1;;15207:130:6:o;15342:127::-;15403:10;15398:3;15394:20;15391:1;15384:31;15434:4;15431:1;15424:15;15458:4;15455:1;15448:15;15474:127;15535:10;15530:3;15526:20;15523:1;15516:31;15566:4;15563:1;15556:15;15590:4;15587:1;15580:15;15606:127;15667:10;15662:3;15658:20;15655:1;15648:31;15698:4;15695:1;15688:15;15722:4;15719:1;15712:15;15738:127;15799:10;15794:3;15790:20;15787:1;15780:31;15830:4;15827:1;15820:15;15854:4;15851:1;15844:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"citizenHasVoted(address)": {"notice": "Returns the voting status of _citizenAddress", "params": {"_citizenAddress": "Citizen's address"}, "returns": {"_0": "The Vote struct"}}, "citizenIsRegistered(address)": {"notice": "Returns the registration status of _citizenAddress", "params": {"_citizenAddress": "Citizen's address"}, "returns": {"_0": "Boolean : True if citizen is registered"}}, "delegatedVote(bytes,address,uint256,uint256)": {"notice": "Used for delegating a vote - can be called by anyone having a signature and rest of the information", "params": {"amount": "Amount of WKND tokens to be used in voting", "candidateId": "Candidate's ID", "citizenAddress": "Citizen's address"}}, "endTheElection()": {"notice": "Ends the election - there is no voting after", "returns": {"_0": "Boolean : True if successful"}}, "getDigest(address,uint256,uint256)": {"notice": "Returns a digest that will be used in verification of a signature", "params": {"amount": "Amount of WKND tokens to be used in voting", "candidateId": "Candidate's ID", "citizenAddress": "Citizen's address"}, "returns": {"_0": "Digest"}}, "getNonce(address)": {"notice": "Returns a nonce fo the specified citizenAddress", "params": {"citizenAddress": "Citizen's address"}, "returns": {"_0": "Nonce"}}, "getSigner(bytes32,bytes)": {"notice": "Return the signer of a message", "params": {"digest": "Digested message", "signature": "Singature"}, "returns": {"_0": "Signer of a message"}}, "register(address)": {"notice": "Registers the _citizen to be able to participate in the elections", "params": {"_citizen": "Citizen's address"}, "returns": {"_0": "Boolean : True if successful"}}, "seeAllCandidates()": {"notice": "Returns an array of all candidates involved in the election", "returns": {"_0": "Array"}}, "vote(uint256,uint256)": {"notice": "Voting function - casts a vote from msg.sender", "params": {"_amount": "Amount of WKND tokens to be used for voting", "_candidateId": "Candidate ID"}}, "winningCandidates()": {"notice": "Returns the Election's top 3 candidates (winning candidates)", "returns": {"_0": "An array of top candidates"}}}, "notice": "Voters Register (receive 1 WKND) token after which, they can particapate in the elections", "title": "Voting Contract", "version": 1}, "offset": [447, 10799], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x7107852A EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xB8D06BC4 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xDE90BB6F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xF7B2EC0D EQ PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF2EE64 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1565507E EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x30226EFE EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x377968D4 EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x15EB JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH2 0xDA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x15EB JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0xDA PUSH2 0x72F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST PUSH2 0x12D PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x17A PUSH2 0x83D JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x165B JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208 DUP5 DUP5 DUP5 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x217 DUP3 DUP9 DUP9 PUSH2 0x9DB JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2060766F746560203A20696E76616C6964207369676E6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x45434453413A20696E76616C6964207369676E6174757265 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x2E7 DUP6 DUP6 DUP6 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x30B DUP4 PUSH2 0x199A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x33F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x3A7 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x406 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3F3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3C5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x5 PUSH1 0x6 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x44C JUMPI PUSH2 0x44C PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x518 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x544 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x591 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x566 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x591 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x574 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x5B9 JUMPI PUSH2 0x5B9 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH2 0x5CE SWAP1 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636974697A656E20686173206265656E207265676973746572656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2D20746865726520617265206E6F206D756C7469706C65207265676973747261 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x3A34B7B73997 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xBC0E60E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0xBC0E60E1 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204B494E472063616E20656E642074686520656C656374696F6E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x282 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x7A9 CALLER DUP4 DUP4 PUSH2 0xA25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0xA56F781F7251D29FCA13933D69C34316EA277F967C4A968F77DB62D983FE1120 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x834 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDD6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9D2 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x894 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C0 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x937 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x963 SWAP1 PUSH2 0x1965 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x985 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x993 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x861 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1D DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xE2A SWAP3 POP POP POP JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720666F72207468652063757272656E7420656C656374696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3430B99032B73232B21017 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636974697A656E20616C726561647920766F74656420696E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1032B632B1BA34B7B71017 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E74206973206C6573736572207468616E20746865205245 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x23A4A9AA2920AA24A7A71020A6A7AAA72A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 LT PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616E6469646174652049442067726561746572207468616E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206E756D626572206F662063616E6469646174657320210000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x14294617 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x28528C2E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST POP PUSH2 0xCB7 DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0xE4E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCCA JUMPI PUSH2 0xCCA PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 DUP4 MUL ADD PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xD18 DUP3 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0xDCE JUMPI PUSH2 0xD24 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD GT DUP1 PUSH2 0xD57 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x3 GT JUMPDEST ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xD65 DUP3 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0xD6D PUSH2 0xF92 JUMP JUMPDEST PUSH32 0x6FEB6D2E3B854B96FF5A9F8E857F483FBFF471F03C8F8451FDEDFFE83CC605B PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDA1 JUMPI PUSH2 0xDA1 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDC9 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH2 0xDE3 PUSH2 0x1124 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xE39 DUP6 DUP6 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE46 DUP2 PUSH2 0x12BB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5A DUP3 DUP5 PUSH2 0x1911 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x6 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 EQ ISZERO PUSH2 0xEA3 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP PUSH2 0xE65 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0xECE JUMPI PUSH1 0x0 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 PUSH2 0xEDD PUSH1 0x1 DUP5 PUSH2 0x194E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xEED JUMPI PUSH2 0xEED PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF08 JUMPI PUSH2 0xF08 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF63 JUMPI POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SSTORE JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH2 0xF72 PUSH1 0x1 PUSH1 0x3 PUSH2 0x194E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF82 JUMPI PUSH2 0xF82 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xF9B JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xFAD SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x194E JUMP JUMPDEST DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 PUSH2 0xFC4 DUP3 PUSH1 0x1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1110 JUMPI PUSH1 0x0 PUSH1 0x6 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xFEC JUMPI PUSH2 0xFEC PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1031 JUMPI PUSH2 0x1031 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1056 JUMPI PUSH2 0x1056 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 PUSH1 0x6 DUP6 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x6 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10A9 JUMPI PUSH2 0x10A9 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x6 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x1A01 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP6 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10EF JUMPI PUSH2 0x10EF PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1109 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP PUSH2 0xFC7 JUMP JUMPDEST POP PUSH2 0x111A DUP2 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP PUSH2 0xF9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x117D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x11A7 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x1282 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1276 DUP8 DUP3 DUP6 DUP6 PUSH2 0x1471 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x12B4 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x12AC JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x12A1 DUP7 DUP4 DUP4 PUSH2 0x155E JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x12B4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12CF JUMPI PUSH2 0x12CF PUSH2 0x19EB JUMP JUMPDEST EQ ISZERO PUSH2 0x12D8 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12EC PUSH2 0x19EB JUMP JUMPDEST EQ ISZERO PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x45434453413A20696E76616C6964207369676E6174757265 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1349 JUMPI PUSH2 0x1349 PUSH2 0x19EB JUMP JUMPDEST EQ ISZERO PUSH2 0x1397 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x13AB JUMPI PUSH2 0x13AB PUSH2 0x19EB JUMP JUMPDEST EQ ISZERO PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x19EB JUMP JUMPDEST EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x14A8 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1555 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x14C0 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x14D1 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1525 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x154E JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND PUSH1 0xFF DUP5 SWAP1 SHR PUSH1 0x1B ADD PUSH2 0x157F DUP8 DUP3 DUP9 DUP6 PUSH2 0x1471 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5A DUP3 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1624 DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x168E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169A DUP7 DUP3 DUP8 ADD PUSH2 0x15A9 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E2 DUP9 DUP3 DUP10 ADD PUSH2 0x15A9 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x16F5 SWAP1 POP PUSH1 0x20 DUP8 ADD PUSH2 0x158D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1755 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1739 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x1796 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x17B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD DUP3 DUP1 ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x17E4 JUMPI PUSH2 0x180F JUMP JUMPDEST PUSH1 0xFF NOT DUP8 AND DUP3 MSTORE DUP3 DUP3 ADD SWAP8 POP PUSH2 0x180F JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x1809 JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0x17F0 JUMP JUMPDEST DUP4 ADD SWAP9 POP POP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18AD JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0x80 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x1869 DUP3 DUP8 ADD DUP3 PUSH2 0x172F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xFF DUP10 DUP4 ADD MLOAD AND DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x188C DUP3 DUP3 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP7 SWAP1 SWAP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1843 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x18D5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x18FB DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x177C JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1924 JUMPI PUSH2 0x1924 PUSH2 0x19D5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1946 JUMPI PUSH2 0x1946 PUSH2 0x19D5 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1960 JUMPI PUSH2 0x1960 PUSH2 0x19D5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1979 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x5D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AE PUSH2 0x19D5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x19CC JUMPI PUSH2 0x19CC PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC7 PUSH15 0x96027E622E6ADECCD518A7F3C9C5CD 0x4E 0xD4 0xC0 0xCD JUMPDEST CREATE PC SDIV PUSH10 0xA669F92C4864736F6C63 NUMBER STOP ADDMOD MOD STOP CALLER ", "sha1": "2447ee8141be376cf3a073e09205e021a7f28d04", "source": "pragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n// SPDX-License-Identifier: MIT\n\nimport \"./OpenZepellin/contracts/utils/math/SafeMath.sol\";\nimport \"./Token.sol\";\n\nimport \"./OpenZepellin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"./OpenZepellin/contracts/utils/cryptography/draft-EIP712.sol\";\n\n/**\n    @title Voting Contract\n    @notice Voters Register (receive 1 WKND) token after which, they can particapate in the elections\n\n */\ncontract Voting is EIP712{\n\n    uint256 constant ELECTION_WINNERS_LENGTH = 3;\n    uint256 constant REGISTRATION_AMOUNT = 1;\n\n    using SafeMath for uint256;\n\n    struct Candidate {\n        string name;\n        uint8 age;\n        string cult;\n        uint256 votes;\n    }\n\n    struct Vote {\n        uint256 candidateId;\n        uint256 amount;\n        bool hasVoted;\n    }\n\n    address king;\n\n    Token wakandaToken;\n\n    mapping (address => bool) isRegistered;\n    mapping (address => uint256) nonces;\n    mapping (address => Vote) votes;\n\n    Candidate[] candidates;\n\n    uint256[] electionWinners;\n    event NewChallenger(Candidate challenger);\n\n    bool hasEnded;\n\n    constructor(string memory _electionName, address _wakandaTokenAddress, string[] memory _candidateNames, uint8[] memory _candidateAges, string[] memory _candidateCults) EIP712(_electionName, \"1.0.0\") {\n\n        king = msg.sender;\n\n        _addCandidates(_candidateNames, _candidateAges, _candidateCults);\n\n        wakandaToken = Token(_wakandaTokenAddress);\n\n    }\n\n    /**\n        @notice Ends the election - there is no voting after\n        @return Boolean : True if successful\n     */\n    function endTheElection() public returns (bool) {\n        \n        require(msg.sender == king, \"Only KING can end the election.\");\n\n        hasEnded = true;\n\n        return true;\n\n    }\n\n    /**\n        @notice Registers the _citizen to be able to participate in the elections\n        @param _citizen Citizen's address\n        @return Boolean : True if successful\n     */\n    function register(address _citizen) public returns (bool) {\n        \n        require(isRegistered[_citizen] != true, \"The citizen has been registered - there are no multiple registrations.\");\n\n        wakandaToken.usingRegistrationRight(_citizen, REGISTRATION_AMOUNT);\n        isRegistered[_citizen] = true;\n\n        return true;\n\n    }\n\n    /**\n        @notice Returns the registration status of _citizenAddress\n        @param _citizenAddress Citizen's address\n        @return Boolean : True if citizen is registered\n     */\n    function citizenIsRegistered(address _citizenAddress) public view returns (bool) {\n\n        return isRegistered[_citizenAddress];\n\n    }\n\n    /**\n        @notice Voting function - casts a vote from msg.sender\n        @param _candidateId Candidate ID\n        @param _amount Amount of WKND tokens to be used for voting\n     */\n    function vote(uint256 _candidateId, uint256 _amount) public {\n\n        _vote(msg.sender, _candidateId, _amount);\n\n    }\n\n    /**\n        @notice Returns the voting status of _citizenAddress\n        @param _citizenAddress Citizen's address\n        @return The Vote struct\n     */\n    function citizenHasVoted(address _citizenAddress) public view returns (Vote memory) {\n\n        return votes[_citizenAddress];\n        \n    }\n\n    /**\n        @notice Returns the Election's top 3 candidates (winning candidates)\n        @return An array of top candidates\n     */\n    function winningCandidates() public view returns (Candidate[] memory){\n    \n        Candidate[] memory winners = new Candidate[](electionWinners.length);\n        for (uint8 i = 0; i < electionWinners.length; ++i) winners[i] = candidates[electionWinners[i]];\n        return winners;\n        \n    }\n\n    /**\n        @notice Returns an array of all candidates involved in the election\n        @return Array\n     */\n    function seeAllCandidates() public view returns (Candidate[] memory) {\n\n        return candidates;\n\n    }\n\n    /**\n        @notice Returns a nonce fo the specified citizenAddress\n        @param citizenAddress Citizen's address\n        @return Nonce\n     */\n    function getNonce(address citizenAddress) public view returns (uint256){\n\n        return nonces[citizenAddress];\n        \n    }\n\n    /**\n        @notice Returns a digest that will be used in verification of a signature\n        @param citizenAddress Citizen's address\n        @param candidateId Candidate's ID\n        @param amount Amount of WKND tokens to be used in voting\n        @return Digest\n     */\n    function getDigest(address citizenAddress, uint256 candidateId, uint256 amount) public view returns (bytes32){\n\n        uint256 nonce = nonces[citizenAddress];\n\n        return _hashTypedDataV4(\n            keccak256(\n                abi.encode(    \n                    keccak256(\"vote(address citizenAddress,uint256 candidateId,uint256 amount,uint256 nonce)\"),\n                    citizenAddress,\n                    candidateId,\n                    amount,\n                    nonce\n                )\n            )\n        );\n    }\n    \n    /**\n        @notice Return the signer of a message\n        @param digest Digested message\n        @param signature Singature\n        @return Signer of a message\n     */\n    function getSigner(bytes32 digest, bytes calldata signature) public pure returns (address){\n        return  ECDSA.recover(digest, signature);\n    }\n\n    /**\n        @notice Used for delegating a vote - can be called by anyone having a signature and rest of the information\n        @param citizenAddress Citizen's address\n        @param candidateId Candidate's ID\n        @param amount Amount of WKND tokens to be used in voting\n     */\n    function delegatedVote(bytes calldata signature, address citizenAddress, uint256 candidateId, uint256 amount) public {\n\n        bytes32 digest = getDigest(citizenAddress, candidateId, amount);\n        address signer = getSigner(digest, signature);\n        require(signer == citizenAddress, \"Function `vote` : invalid signature\");\n        require(signer != address(0), \"ECDSA: invalid signature\");\n\n        _vote(citizenAddress, candidateId, amount);\n\n        nonces[citizenAddress]++;\n    }\n    /**\n        @notice When deployed, instantiates the candidate array\n        @param _candidateNames Candidate's Names\n        @param _candidateAges Candidate's Ages\n        @param _candidateCults Candidate's Cults\n     */\n    function _addCandidates(string[] memory _candidateNames, uint8[] memory _candidateAges, string[] memory _candidateCults) internal {\n\n        require(msg.sender == king, \"Only KING can start a new election !\");\n        require(_candidateNames.length == _candidateAges.length, \"Length mismatch - candidate names and ages !\");\n        require(_candidateNames.length == _candidateCults.length, \"Length mismatch - candidate names and ages !\");\n\n        for(uint256 i = 0; i < _candidateNames.length; ++i) {\n            candidates.push(Candidate({name: _candidateNames[i], age: _candidateAges[i], cult: _candidateCults[i], votes: 0}));\n        }\n\n    }\n\n    /**\n        @notice Internal function which handles the voting\n        @param _citizen Citizen's address\n        @param _candidateId Candidate's ID\n        @param _amount Amount of WKND tokens to be used in the voting process\n     */\n    function _vote(address _citizen, uint256 _candidateId, uint256 _amount) internal {\n\n        require(hasEnded != true, \"Voting for the current election has ended .\");\n        require(votes[_citizen].hasVoted != true, \"The citizen already voted in the election .\");\n        require(_amount >= REGISTRATION_AMOUNT, \"The amount is lesser than the REGISTRATION AMOUNT.\");\n        require(_candidateId < candidates.length, \"The candidate ID greater than the number of candidates !\");\n\n        wakandaToken.usingVotingRight(_citizen, _amount);\n\n        candidates[_candidateId].votes = candidates[_candidateId].votes.add(_amount);\n        votes[_citizen].candidateId = _candidateId;\n        votes[_citizen].amount = _amount;\n        votes[_citizen].hasVoted = true;\n\n        if(_isInElectionWinners(_candidateId) == false){ // potentially a new challenger \n         \n            if (candidates[_candidateId].votes > _getLastPlaceVotes() || electionWinners.length < ELECTION_WINNERS_LENGTH) { // entering the first N places\n   \n                _insertIntoElectionWinners(_candidateId);\n                _sortElectionWinners();\n                emit NewChallenger(candidates[_candidateId]);\n\n            } else {\n\n                // do nothing - current candidate didn't enter the first three places\n            }\n            \n        } else { // it is not a new challenger\n        \n            _sortElectionWinners(); // the order can be different now\n\n        }\n    }\n\n    /**\n        @notice Internal function which sorts the electionWinners Array\n     */\n    function _sortElectionWinners() internal {\n\n        if(electionWinners.length == 0) return;\n\n        for(uint8 i = 0; i < electionWinners.length - 1; ++i){\n            for(uint8 j = i+1; j < electionWinners.length; ++j){\n                uint256 currPlaceId = electionWinners[i];\n                uint256 nextPlaceId = electionWinners[j];\n                if(candidates[currPlaceId].votes < candidates[nextPlaceId].votes){\n                    uint256 temp = electionWinners[i];\n                    electionWinners[i] = electionWinners[j];\n                    electionWinners[j] = temp;\n                }\n            }\n        }\n    }\n\n    /**\n        @notice Internal function which returns if the _candidateId is in the electionWinners Array\n        @param _candidateId Candidate's ID to be checked\n        @return Bool : True if found in the electionWinners\n     */\n    function _isInElectionWinners(uint256 _candidateId) internal view returns (bool){\n\n        for(uint8 i = 0; i < electionWinners.length; ++i){\n            if(_candidateId == electionWinners[i]) return true;\n        }\n        return false;\n    }\n\n    /**\n        @notice Internal function which returns the number of votes of the last candidate in the electionWinners\n        @return Votes of candidate that is in last place\n     */\n    function _getLastPlaceVotes() internal view returns (uint256){\n\n        uint256 length = electionWinners.length;\n        return length > 0 ? candidates[electionWinners[length-1]].votes : 0;\n    }\n\n    /**\n        @notice Internal function which inserts a candidate in the electionWinners\n        @param _candidateId ID of the Candidate to be inserted\n     */\n    function _insertIntoElectionWinners(uint256 _candidateId) internal {\n\n        uint256 length = electionWinners.length;\n        if(length < ELECTION_WINNERS_LENGTH){\n             electionWinners.push(_candidateId);\n        } else {\n            electionWinners[ELECTION_WINNERS_LENGTH-1] = _candidateId;\n        }\n    }\n}\n", "sourceMap": "447:10352:5:-:0;;;1119:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:2;;;;;;;;;;;-1:-1:-1;;;2455:602:2;;;;;2541:22;;;;;;2778:25;;;;2597;2813:31;;;;2873:13;2854:32;;;;3633:73;;2651:117;3633:73;;;3875:25:6;;;3916:18;;;3909:34;;;;-1:-1:-1;3959:18:6;;;3952:34;;;;4002:18;;;;3995:34;;;;3700:4:2;4045:19:6;;;4038:61;;;3633:73:2;;;;;;;;;;3847:19:6;;;;3633:73:2;;;3623:84;;;;;;;2896:85;;2991:28;;;;;;3029:21;;-1:-1:-1;1329:17:5;;-1:-1:-1;;;;;;1329:17:5::1;1336:10;1329:17;::::0;;1357:64:::1;1372:15:::0;1389:14;1405:15;1357:14:::1;:64::i;:::-;-1:-1:-1::0;;1432:12:5::1;:42:::0;;-1:-1:-1;;;;;;1432:42:5::1;-1:-1:-1::0;;;;;1432:42:5;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;447:10352:5;;-1:-1:-1;447:10352:5;6371:646;6534:4;;-1:-1:-1;;;;;6534:4:5;6520:10;:18;6512:67;;;;-1:-1:-1;;;6512:67:5;;4725:2:6;6512:67:5;;;4707:21:6;4764:2;4744:18;;;4737:30;4803:34;4783:18;;;4776:62;-1:-1:-1;;;4854:18:6;;;4847:34;4898:19;;6512:67:5;;;;;;;;;6623:14;:21;6597:15;:22;:47;6589:104;;;;-1:-1:-1;;;6589:104:5;;4312:2:6;6589:104:5;;;4294:21:6;4351:2;4331:18;;;4324:30;-1:-1:-1;;;;;;;;;;;4370:18:6;;;4363:62;-1:-1:-1;;;4441:18:6;;;4434:42;4493:19;;6589:104:5;4284:234:6;6589:104:5;6737:15;:22;6711:15;:22;:48;6703:105;;;;-1:-1:-1;;;6703:105:5;;4312:2:6;6703:105:5;;;4294:21:6;4351:2;4331:18;;;4324:30;-1:-1:-1;;;;;;;;;;;4370:18:6;;;4363:62;-1:-1:-1;;;4441:18:6;;;4434:42;4493:19;;6703:105:5;4284:234:6;6703:105:5;6823:9;6819:191;6842:15;:22;6838:1;:26;6819:191;;;6885:10;6901:97;;;;;;;;6918:15;6934:1;6918:18;;;;;;;;:::i;:::-;;;;;;;6901:97;;;;6943:14;6958:1;6943:17;;;;;;;;:::i;:::-;;;;;;;6901:97;;;;;;6968:15;6984:1;6968:18;;;;;;;;:::i;:::-;;;;;;;;;;;;6901:97;;6995:1;6901:97;;;;;;6885:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6885:114:5;;;;;;;;;;-1:-1:-1;;6885:114:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6866:3;;;;:::i;:::-;;;6819:191;;;;6371:646;;;:::o;447:10352::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;447:10352:5;;;-1:-1:-1;447:10352:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:863:6;78:5;131:3;124:4;116:6;112:17;108:27;98:2;;149:1;146;139:12;98:2;178:6;172:13;204:4;228:59;244:42;283:2;244:42;:::i;:::-;228:59;:::i;:::-;309:3;333:2;328:3;321:15;361:2;356:3;352:12;345:19;;396:2;388:6;384:15;448:3;443:2;437;434:1;430:10;422:6;418:23;414:32;411:41;408:2;;;465:1;462;455:12;408:2;487:1;508;518:330;534:2;529:3;526:11;518:330;;;602:10;;-1:-1:-1;;;;;628:35:6;;625:2;;;676:1;673;666:12;625:2;705:68;769:3;764:2;750:11;742:6;738:24;734:33;705:68;:::i;:::-;693:81;;-1:-1:-1;794:12:6;;;;826;;;;556:1;547:11;518:330;;;-1:-1:-1;866:5:6;;88:789;-1:-1:-1;;;;;;;;88:789:6:o;882:793::-;945:5;998:3;991:4;983:6;979:17;975:27;965:2;;1016:1;1013;1006:12;965:2;1045:6;1039:13;1071:4;1095:59;1111:42;1150:2;1111:42;:::i;1095:59::-;1176:3;1200:2;1195:3;1188:15;1228:2;1223:3;1219:12;1212:19;;1263:2;1255:6;1251:15;1315:3;1310:2;1304;1301:1;1297:10;1289:6;1285:23;1281:32;1278:41;1275:2;;;1332:1;1329;1322:12;1275:2;1354:1;1375;1385:261;1401:2;1396:3;1393:11;1385:261;;;1469:3;1463:10;1517:4;1510:5;1506:16;1499:5;1496:27;1486:2;;1537:1;1534;1527:12;1486:2;1554:18;;1592:12;;;;1624;;;;1423:1;1414:11;1385:261;;1680:695;1734:5;1787:3;1780:4;1772:6;1768:17;1764:27;1754:2;;1805:1;1802;1795:12;1754:2;1828:13;;-1:-1:-1;;;;;1853:26:6;;1850:2;;;1882:18;;:::i;:::-;1921:4;1949:53;1992:2;1973:13;;-1:-1:-1;;1969:27:6;1965:36;;1949:53;:::i;:::-;2027:2;2018:7;2011:19;2071:3;2066:2;2061;2053:6;2049:15;2045:24;2042:33;2039:2;;;2088:1;2085;2078:12;2039:2;2110:1;2120:134;2134:2;2131:1;2128:9;2120:134;;;2223:14;;;2219:23;;2213:30;2191:15;;;2187:24;;2180:64;2145:10;;2120:134;;;2272:2;2269:1;2266:9;2263:2;;;2332:1;2327:2;2322;2313:7;2309:16;2305:25;2298:36;2263:2;-1:-1:-1;2362:7:6;1744:631;-1:-1:-1;;;;;1744:631:6:o;2380:1231::-;2589:6;2597;2605;2613;2621;2674:3;2662:9;2653:7;2649:23;2645:33;2642:2;;;2691:1;2688;2681:12;2642:2;2718:16;;-1:-1:-1;;;;;2783:14:6;;;2780:2;;;2810:1;2807;2800:12;2780:2;2833:61;2886:7;2877:6;2866:9;2862:22;2833:61;:::i;:::-;2937:2;2922:18;;2916:25;2823:71;;-1:-1:-1;2916:25:6;-1:-1:-1;;;;;;2970:31:6;;2960:42;;2950:2;;3016:1;3013;3006:12;2950:2;3090;3075:18;;3069:25;3039:5;;-1:-1:-1;3106:16:6;;;3103:2;;;3135:1;3132;3125:12;3103:2;3158:73;3223:7;3212:8;3201:9;3197:24;3158:73;:::i;:::-;3148:83;;3277:2;3266:9;3262:18;3256:25;3240:41;;3306:2;3296:8;3293:16;3290:2;;;3322:1;3319;3312:12;3290:2;3345:72;3409:7;3398:8;3387:9;3383:24;3345:72;:::i;:::-;3335:82;;3463:3;3452:9;3448:19;3442:26;3426:42;;3493:2;3483:8;3480:16;3477:2;;;3509:1;3506;3499:12;3477:2;;3532:73;3597:7;3586:8;3575:9;3571:24;3532:73;:::i;:::-;3522:83;;;2632:979;;;;;;;;:::o;4928:275::-;4999:2;4993:9;5064:2;5045:13;;-1:-1:-1;;5041:27:6;5029:40;;-1:-1:-1;;;;;5084:34:6;;5120:22;;;5081:62;5078:2;;;5146:18;;:::i;:::-;5182:2;5175:22;4973:230;;-1:-1:-1;4973:230:6:o;5208:182::-;5267:4;-1:-1:-1;;;;;5289:30:6;;5286:2;;;5322:18;;:::i;:::-;-1:-1:-1;5367:1:6;5363:14;5379:4;5359:25;;5276:114::o;5395:380::-;5474:1;5470:12;;;;5517;;;5538:2;;5592:4;5584:6;5580:17;5570:27;;5538:2;5645;5637:6;5634:14;5614:18;5611:38;5608:2;;;5691:10;5686:3;5682:20;5679:1;5672:31;5726:4;5723:1;5716:15;5754:4;5751:1;5744:15;5608:2;;5450:325;;;:::o;5780:232::-;5819:3;-1:-1:-1;;5840:17:6;;5837:2;;;5899:10;5894:3;5890:20;5887:1;5880:31;5934:4;5931:1;5924:15;5962:4;5959:1;5952:15;5837:2;-1:-1:-1;6004:1:6;5993:13;;5827:185::o;6017:127::-;6078:10;6073:3;6069:20;6066:1;6059:31;6109:4;6106:1;6099:15;6133:4;6130:1;6123:15;6149:127;6210:10;6205:3;6201:20;6198:1;6191:31;6241:4;6238:1;6231:15;6265:4;6262:1;6255:15;6181:95;447:10352:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/Voting.sol", "type": "contract", "deployment": {"address": "0x23eCaC0b6f301bc9513b0487BF64a9d9e2EEDdc7", "chainid": "4", "blockHeight": 9808380}}